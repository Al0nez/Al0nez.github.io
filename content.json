{"meta":{"title":"Al0nez's Bolg","subtitle":"我与春风皆过客,你携秋水揽星河","description":null,"author":"Al0nez","url":"https://Al0nez.github.io","root":"/"},"pages":[{"title":"分类&标签","date":"2021-09-10T02:30:39.000Z","updated":"2021-09-10T02:33:48.948Z","comments":true,"path":"tags/index.html","permalink":"https://al0nez.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"01基础入门--概念名词","slug":"01基础入门-概念名词","date":"2021-09-10T07:15:08.000Z","updated":"2021-09-10T07:39:27.505Z","comments":true,"path":"2021/09/10/01基础入门-概念名词/","link":"","permalink":"https://al0nez.github.io/2021/09/10/01%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E6%A6%82%E5%BF%B5%E5%90%8D%E8%AF%8D/","excerpt":"域名什么是域名域名（Domain names）是互联网基础架构的关键部分。它们为互联网上任何可用的网页服务器提供了方便人类理解的地址。","text":"域名什么是域名域名（Domain names）是互联网基础架构的关键部分。它们为互联网上任何可用的网页服务器提供了方便人类理解的地址。 任何连上互联网的电脑都可以通过一个公共IP地址访问到，对于IPv4地址来说，这个地址有32位（它们通常写成四个范围在0~255以内，由点分隔的数字组成，比如173.194.121.32），而对于IPv6来说，这个地址有128位，通常写成八组由冒号分隔的四个十六进制数(e.g., 2027:0da8:8b73:0000:0000:8a2e:0370:1337). 计算机可以很容易地处理这些IP地址, 但是对一个人来说很难找出谁在操控这些服务器以及这些网站提供什么服务。IP 地址很难记忆而且可能会随着时间的推移发生改变 。为了解决这些问题，我们使用方便记忆的地址，称作域名。 域名在哪里注册域名注册是Internet中用于解决地址对应问题的一种方法。根据中国互联网络域名管理办法，域名注册服务机构及域名注册管理机构需对申请人提出的域名是否违反了第三方的权利和申请人的真实身份进行核验。每一个相同顶级域名中的二级域名注册都是独一无二的，不可重复的，但不同顶级域名中的二级域名可以是相同的，例如baidu这个二级域名曾可以在.com中注册，也可以在.cn中注册，也可以在.xyz中及其他多种顶级域名中注册，且每个域名都起到同样的作用。因此，在网络上域名是一种相对有限的资源，它的价值随着注册企业和个人用户的增多而逐步为人们所重视。一般域名需要通过域名注册商去注册。 顶级域名、一级域名1234567891011121314151617Top-level domains，first-level domains（TLDs），也翻译为国际顶级域名，也成一级域名。 .com 供商业机构使用，但无限制最常用 .net 原供网络服务供应商使用，现无限制 .org 原供不属于其他通用顶级域类别的组织使用，现无限制 .edu / .gov / .mil 供美国教育机构/美国政府机关/美国军事机构。因历史遗留问题一般只在美国专用 .aero 供航空运输业使用 .biz 供商业使用 .coop 供联合会（cooperatives）使用 .info 供信息性网站使用，但无限制 .museum 供博物馆使用 .name 供家庭及个人使用 .pro 供部分专业使用 .asia 供亚洲社区使用 .tel 供连接电话网络与因特网的服务使用 .post 供邮政服务使用 .mail 供邮件网站使用 国家顶级域名：cn（中国大陆）、de（德国）、eu（欧盟）、jp（日本）、hk（中国香港）、tw（中国台湾）、uk（英国）、us（美国） 什么是二级域名多级域名？二级域（或称二级域名；英语：Second-level domain；英文缩写：SLD）是互联网DNS等级之中，处于顶级域名之下的域。二级域名是域名的倒数第二个部分，例如在域名example.baidu.com中，二级域名是Baidu。 .com 顶级域名/一级域名，更准确的说叫顶级域 baidu.com 二级域名，更准确的说叫二级域 tieba.baidu.com 三级域名，更准确的说叫三级域 detail.tieba.baidu.com 四级域名，更准确的说叫四级域 ……. 域名发现对于安全测试意义？ 进行渗透测试时，其主域名找不到漏洞时，就可以尝试去测试收集到的子域名，有可能测试子域名网站时会有意向不到的效果，然后可以由此横向到主网站。 DNS什么是DNS？DNS（Domain Name Server，域名服务器）是进行域名(domain name)和与之相对应的IP地址 (IP address)转换的服务器。DNS中保存了一张域名(domain name)和与之相对应的IP地址 (IP address)的表，以解析消息的域名。 例如百度的域名是www.baidu.com,在DNS中对应的IP是1.2.3.4(假设),那么我们在浏览器中输入百度的域名，DNS就会解析为1.2.3.4。 本地HOSTS与DNS的关系？客户端查询DNS的过程是： 1本地host文件—本地缓存—-DNS服务器 Hosts文件目录 1在Windows中，它的目录通常在C盘的Windows\\system32\\drivers\\etc\\下。 Hosts文件是一个纯文本文件，用记事本就可以将其打开。这个文件是根据TCP/IP for Windows 的标准来工作的，它的作用是包含IP地址和Host name(主机名)的映射关系，每段只能包括一个映射关系，IP地址要放在每段的最前面，后面写Host name(主机名)，中间加个空格。如：127.0.0.1 localhost. 我们知道，当电脑访问网站时，首先通过DNS服务器把网络 域名解析成IP地址后，我们的计算机才能访问。如果每个域名请求都要等待域名服务器解析后返回IP，访问速度就会比较慢，而Hosts文件正可以解决这个问题。在进行DNS请求以前，Windows系统会先检查Hosts文件中是否有这个地址映射关系，如果有则调用这个IP地址映射，如果没有再向DNS服务器提出域名解析。 eg：这里用我自己的博客地址作为演示，当我们ping l0ne1y.github.io的时候可以看到他的ip地址是185.199.110.153。 当我们修改了本地hosts文件后，再次ping l0ne1y.github.io地址，发现ip地址变成了1.2.3.4。 CDN是什么？与DNS的关系？CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。举个例子，现在服务器在北京，深圳的用户想要获取服务器上的数据就需要跨越一个很远的距离，这显然就比北京的用户访问北京的服务器速度要慢。但是现在我们在深圳建立一个CDN服务器，上面缓存住一些数据，深圳用户访问时先访问这个CDN服务器，如果服务器上有用户请求的数据就可以直接返回，这样速度就大大的提升了。 CDN实际上是一个就近访问，那么现在有一个问题是，我们怎么知道用户的所在位置从而给他分配最佳的CDN节点呢。这就需要DNS服务来进行定位了。当我们通过使用DNS服务的时候，可以根据他使用的LDNS服务器来进行一个定位，例如我们的调度服务器看到他是来自深圳电信的LDNS服务器，那么我们就认为该用户来自深圳电信，然后调度服务器可以让该用户去访问深圳电信的CDN服务器，这样就让用户访问到了最优的CDN节点。通过DNS服务我们可以很快的定位到用户的位置，然后给用户分配最佳CDN节点. 常见的DNS安全攻击有哪些? 域名劫持 通过采用黑客手段控制了域名管理密码和域名管理邮箱，然后将该域名的NS纪录指向到黑客可以控制的DNS服务器，然后通过在该DNS服务器上添加相应域名纪录，从而使网民访问该域名时，进入了黑客所指向的内容。这显然是DNS服务提供商的责任，用户束手无策。 缓存投毒 利用控制DNS缓存服务器，把原本准备访问某网站的用户在不知不觉中带到黑客指向的其他网站上。其实现方式有多种，比如可以通过利用网民ISP端的DNS缓存服务器的漏洞进行攻击或控制，从而改变该ISP内的用户访问域名的响应结果;或者，黑客通过利用用户权威域名服务器上的漏洞，如当用户权威域名服务器同时可以被当作缓存服务器使用，黑客可以实现缓存投毒，将错误的域名纪录存入缓存中，从而使所有使用该缓存服务器的用户得到错误的DNS解析结果。 3)DDOS攻击 一种攻击针对DNS服务器软件本身，通常利用BIND软件程序中的漏洞，导致DNS服务器崩溃或拒绝服务;另一种攻击的目标不是DNS服务器，而是利用DNS服务器作为中间的“攻击放大器”，去攻击其它互联网上的主机，导致被攻击主机拒绝服务。 DNS欺骗 DNS欺骗就是攻击者冒充域名服务器的一种欺骗行为。 原理：如果可以冒充域名服务器，然后把查询的IP地址设为攻击者的IP地址，这样的话，用户上网就只能看到攻击者的主页，而不是用户想要取得的网站的主页了，这就是DNS欺骗的基本原理。DNS欺骗其实并不是真的“黑掉”了对方的网站，而是冒名顶替、招摇撞骗罢了。 脚本语言常见的脚本语言类型有哪些？脚本语言又被称为扩建的语言，或者动态语言，是一种编程语言，用来控制软件应用程序，脚本通常以文本（如ASCII)保存，只在被调用时进行解释或编译。Scala、JavaScript，VBScript，ActionScript，MAXScript，ASP，JSP，PHP，SQL，Perl，Shell，python，Ruby，JavaFX，Lua，AutoIt等 不同脚本类型与安全漏洞的关系？不同的脚本语言决定了安全漏洞的多少。 漏洞挖掘代码审计与脚本类型的关系？同上 后门什么是后门？有那些后门？后门是指绕过安全控制而获取对程序或系统访问权的方法。后门的最主要目的就是方便以后再次秘密进入或者控制系统。根据实现方式的不同，可以将后门分为网页后门、线程插入后门、扩展后门、C/S 后门和账户后门等类型。 后门在安全测试中的实际意义？(1)方便下次更方便的进来。 (2)获取到相关权限之后，后门相当于一个管道，便于操作。 关于后门需要了解那些？（玩法，免杀）免杀，就是绕过杀毒软件的防护，避免被检测到。 WEBWEB 的组成架构模型？网站源码：分脚本类型，分应用方向操作系统：windows linux中间件（搭建平台）：apache iis tomcat nginx 等数据库：access mysql mssql oracle sybase db2 postsql 等 架构漏洞安全测试简要介绍？web网站-数据库权限-权限提升-内网。 为什么要从 WEB 层面为主为首？不管是PC还是APP本质上都可以以web为突破口。 WEB相关安全漏洞WEB 源码类对应漏洞1234567SQL 注入文件上传XSS代码执行变量覆盖逻辑漏洞反序列化等 WEB 中间件对应漏洞未授权访问等等 WEB 数据库对应漏洞弱口令等 WEB 系统层对应漏洞提权相关的 其他第三方对应漏洞第三方软件的一些漏洞 eg:QQ APP 或 PC 应用结合类 App或者PC软件的漏洞 演示案例多级域名的枚举查找1.直接百度 2.通过工具进行爆破 这里我使用的是Layer子域名爆破工具，下载链接是https://github.com/euphrat1ca/LayerDomainFinder，字典是https://github.com/k8gege/PasswordDic。 3.域名注册 查询A记录、MX记录、C记录 DNS解析修改后分析（本地或服务）前面有实验过，这里就不弄了。 EXE 后门功能及危害及类似 WEB 后门这里因为没有视频中的软件，所有我这里使用的是CS，进行上线。 关于CS具体操作可以看https://soapffz.com/sec/483.html 可以看到成功上线了。 APP类结合WEB协议，PC类结合WEB协议手机模拟器 需要设置代理，代理ip为PC端ip。 PC端需要通过burp suite进行抓包，设置brup监听端口为代理服务器端口。 之后修改数据包，修改电脑数据包和手机端一致，从app分离出WEB 测试漏洞。","categories":[],"tags":[{"name":"Web","slug":"Web","permalink":"https://al0nez.github.io/tags/Web/"},{"name":"小迪学习笔记","slug":"小迪学习笔记","permalink":"https://al0nez.github.io/tags/%E5%B0%8F%E8%BF%AA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"基础入门","slug":"基础入门","permalink":"https://al0nez.github.io/tags/%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/"}]}],"categories":[],"tags":[{"name":"Web","slug":"Web","permalink":"https://al0nez.github.io/tags/Web/"},{"name":"小迪学习笔记","slug":"小迪学习笔记","permalink":"https://al0nez.github.io/tags/%E5%B0%8F%E8%BF%AA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"基础入门","slug":"基础入门","permalink":"https://al0nez.github.io/tags/%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/"}]}